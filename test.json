{
  "clauses": [
    {
      "id": "clause",
      "title": "File \"coq-builtin.elpi: default-declare-evar\", line 167, column 0, character 6512:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "declare_constraint"
            },
            [
              {
                "id": "prop",
                "cnt": "declare-evar"
              },
              {
                "id": "var",
                "cnt": "Ctx"
              },
              {
                "id": "var",
                "cnt": "RawEv"
              },
              {
                "id": "var",
                "cnt": "Ty"
              },
              {
                "id": "var",
                "cnt": "Ev"
              }
            ],
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "RawEv"
                    }
                  ]
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "declare-evar"
            },
            {
              "id": "var",
              "cnt": "Ctx"
            },
            {
              "id": "var",
              "cnt": "RawEv"
            },
            {
              "id": "var",
              "cnt": "Ty"
            },
            {
              "id": "var",
              "cnt": "Ev"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"coq-builtin.elpi\", line 176, column 0, character 6872:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "declare_constraint"
            },
            [
              {
                "id": "prop",
                "cnt": "rm-evar"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "Y"
              }
            ],
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    },
                    {
                      "id": "var",
                      "cnt": "Y"
                    }
                  ]
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "rm-evar"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                {
                  "id": "prop",
                  "cnt": "uvar"
                },
                {
                  "id": "var",
                  "cnt": "X"
                }
              ]
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                {
                  "id": "prop",
                  "cnt": "uvar"
                },
                {
                  "id": "var",
                  "cnt": "Y"
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"coq-builtin.elpi\", line 177, column 0, character 6949:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "rm-evar"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"coq-builtin.elpi\", line 197, column 0, character 7686:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "if"
            },
            [
              {
                "id": "prop",
                "cnt": "var"
              },
              {
                "id": "var",
                "cnt": "S"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "VL"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "prune"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "VL"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "prune"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "VL"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "declare_constraint"
              },
              [
                {
                  "id": "prop",
                  "cnt": "evar"
                },
                {
                  "id": "var",
                  "cnt": "X"
                },
                {
                  "id": "var",
                  "cnt": "T"
                },
                {
                  "id": "var",
                  "cnt": "S"
                }
              ],
              {
                "id": "list",
                "cnt": [
                  {
                    "l": [
                      {
                        "id": "var",
                        "cnt": "X"
                      },
                      {
                        "id": "var",
                        "cnt": "S"
                      }
                    ]
                  }
                ]
              }
            ],
            {
              "id": "prop",
              "cnt": "true"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "evar"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                {
                  "id": "prop",
                  "cnt": "uvar"
                },
                {
                  "id": "var",
                  "cnt": "X"
                }
              ]
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "S"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"coq-builtin.elpi: default-assign-evar\", line 201, column 0, character 7868:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "evar"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"coq-builtin.elpi\", line 728, column 3, character 29981:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.warning"
            },
            {
              "id": "string",
              "cnt": "elpi.deprecated"
            },
            {
              "id": "string",
              "cnt": "elpi.const-opaque"
            },
            {
              "id": "string",
              "cnt": "use coq.env.opaque? in place of coq.env.const-opaque?"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.env.opaque?"
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.env.const-opaque?"
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"coq-builtin.elpi\", line 735, column 3, character 30229:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.warning"
            },
            {
              "id": "string",
              "cnt": "elpi.deprecated"
            },
            {
              "id": "string",
              "cnt": "elpi.const-primitive"
            },
            {
              "id": "string",
              "cnt": "use coq.env.primitive? in place of coq.env.const-primitive?"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.env.primitive?"
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.env.const-primitive?"
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"coq-builtin.elpi\", line 816, column 0, character 33540:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.env.begin-module-functor"
            },
            {
              "id": "var",
              "cnt": "Name"
            },
            {
              "id": "var",
              "cnt": "MP"
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.env.begin-module"
            },
            {
              "id": "var",
              "cnt": "Name"
            },
            {
              "id": "var",
              "cnt": "MP"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"coq-builtin.elpi\", line 830, column 0, character 33994:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.env.begin-module-type-functor"
            },
            {
              "id": "var",
              "cnt": "Name"
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.env.begin-module-type"
            },
            {
              "id": "var",
              "cnt": "Name"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"coq-builtin.elpi\", line 1170, column 0, character 47056:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.warning"
            },
            {
              "id": "string",
              "cnt": "elpi.deprecated"
            },
            {
              "id": "string",
              "cnt": "elpi.canonical-projections"
            },
            {
              "id": "string",
              "cnt": "use coq.env.projections in place of coq.CS.canonical-projections"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.env.projections"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            {
              "id": "var",
              "cnt": "L"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.CS.canonical-projections"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            {
              "id": "var",
              "cnt": "L"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"coq-builtin.elpi\", line 1470, column 0, character 59697:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.warning"
            },
            {
              "id": "string",
              "cnt": "elpi.deprecated"
            },
            {
              "id": "string",
              "cnt": "elpi.cbv-whd-all"
            },
            {
              "id": "string",
              "cnt": "use coq.reduction.cbv.norm in place of coq.reduction.cbv.whd_all"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.reduction.cbv.norm"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.reduction.cbv.whd_all"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"coq-builtin.elpi\", line 1477, column 0, character 59975:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.warning"
            },
            {
              "id": "string",
              "cnt": "elpi.deprecated"
            },
            {
              "id": "string",
              "cnt": "elpi.vm-whd-all"
            },
            {
              "id": "string",
              "cnt": "use coq.reduction.vm.norm in place of coq.reduction.vm.whd_all"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.reduction.vm.norm"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "TY"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.reduction.vm.whd_all"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "TY"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"coq-builtin.elpi\", line 1484, column 0, character 60209:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "=>"
              },
              [
                {
                  "id": "prop",
                  "cnt": "get-option"
                },
                {
                  "id": "string",
                  "cnt": "coq:redflags"
                },
                {
                  "id": "prop",
                  "cnt": "coq.redflags.all"
                }
              ],
              [
                {
                  "id": "prop",
                  "cnt": "coq.reduction.lazy.whd"
                },
                {
                  "id": "var",
                  "cnt": "X"
                },
                {
                  "id": "var",
                  "cnt": "Y"
                }
              ]
            ]
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.reduction.lazy.whd_all"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"coq-builtin.elpi\", line 1585, column 0, character 64155:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.string->name"
            },
            {
              "id": "var",
              "cnt": "S"
            },
            {
              "id": "var",
              "cnt": "N"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.id->name"
            },
            {
              "id": "var",
              "cnt": "S"
            },
            {
              "id": "var",
              "cnt": "N"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 9, column 0, character 89:",
      "cnt": {
        "hyp": [],
        "args": [
          {
            "id": "prop",
            "cnt": "true"
          }
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 28, column 0, character 296:",
      "cnt": {
        "hyp": [
          {
            "id": "var",
            "cnt": "A"
          }
        ],
        "args": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": ";"
              },
              {
                "id": "var",
                "cnt": "A"
              },
              {
                "id": "discard"
              }
            ]
          }
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 30, column 0, character 311:",
      "cnt": {
        "hyp": [
          {
            "id": "var",
            "cnt": "B"
          }
        ],
        "args": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": ";"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "B"
              }
            ]
          }
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 52, column 0, character 609:",
      "cnt": {
        "hyp": [
          {
            "id": "var",
            "cnt": "X"
          },
          {
            "id": "cut"
          },
          {
            "id": "prop",
            "cnt": "fail"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "not"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 54, column 0, character 631:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "not"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 67, column 0, character 960:",
      "cnt": {
        "hyp": [
          {
            "id": "prop",
            "cnt": "halt"
          }
        ],
        "args": [
          {
            "id": "prop",
            "cnt": "stop"
          }
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 77, column 0, character 1165:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "calc"
            },
            {
              "id": "var",
              "cnt": "Y"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ],
        "args": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "Y"
              }
            ]
          }
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 177, column 0, character 2837:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "gt_"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": ">"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 179, column 0, character 2858:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "lt_"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ],
        "args": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "<"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "Y"
              }
            ]
          }
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 181, column 0, character 2879:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "le_"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "=<"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 183, column 0, character 2900:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "ge_"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": ">="
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 187, column 0, character 2972:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "lt_"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "i<"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 189, column 0, character 2993:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "gt_"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "i>"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 191, column 0, character 3014:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "le_"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "i=<"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 193, column 0, character 3035:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "ge_"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "i>="
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 197, column 0, character 3111:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "lt_"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "r<"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 199, column 0, character 3132:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "gt_"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "r>"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 201, column 0, character 3153:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "le_"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "r=<"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 203, column 0, character 3174:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "ge_"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "r>="
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 207, column 0, character 3252:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "lt_"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "s<"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 209, column 0, character 3273:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "gt_"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "s>"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 211, column 0, character 3294:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "le_"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "s=<"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 213, column 0, character 3315:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "ge_"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "s>="
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 234, column 0, character 3725:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "fst"
            },
            [
              {
                "id": "prop",
                "cnt": "pr"
              },
              {
                "id": "var",
                "cnt": "A"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "A"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 238, column 0, character 3770:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "snd"
            },
            [
              {
                "id": "prop",
                "cnt": "pr"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "B"
              }
            ],
            {
              "id": "var",
              "cnt": "B"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 266, column 0, character 4408:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "trace.counter"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "N"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "counter"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "N"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 297, column 0, character 5564:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "rex.match"
            },
            {
              "id": "var",
              "cnt": "Rx"
            },
            {
              "id": "var",
              "cnt": "S"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "rex_match"
            },
            {
              "id": "var",
              "cnt": "Rx"
            },
            {
              "id": "var",
              "cnt": "S"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 301, column 0, character 5686:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "rex.replace"
            },
            {
              "id": "var",
              "cnt": "Rx"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "S"
            },
            {
              "id": "var",
              "cnt": "O"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "rex_replace"
            },
            {
              "id": "var",
              "cnt": "Rx"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "S"
            },
            {
              "id": "var",
              "cnt": "O"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 305, column 0, character 5811:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "rex.split"
            },
            {
              "id": "var",
              "cnt": "Rx"
            },
            {
              "id": "var",
              "cnt": "S"
            },
            {
              "id": "var",
              "cnt": "L"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "rex_split"
            },
            {
              "id": "var",
              "cnt": "Rx"
            },
            {
              "id": "var",
              "cnt": "S"
            },
            {
              "id": "var",
              "cnt": "L"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 339, column 0, character 7039:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "same_term"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "=="
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 373, column 0, character 8225:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "is_cdata"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            [
              {
                "id": "prop",
                "cnt": "ctype"
              },
              {
                "id": "var",
                "cnt": "S"
              }
            ]
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "primitive?"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "S"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 404, column 0, character 9190:",
      "cnt": {
        "hyp": [
          {
            "id": "var",
            "cnt": "B"
          },
          {
            "id": "cut"
          },
          {
            "id": "var",
            "cnt": "T"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "if"
            },
            {
              "id": "var",
              "cnt": "B"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 405, column 0, character 9211:",
      "cnt": {
        "hyp": [
          {
            "id": "var",
            "cnt": "E"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "if"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "E"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 409, column 0, character 9354:",
      "cnt": {
        "hyp": [
          {
            "id": "var",
            "cnt": "G<sub>1</sub>"
          },
          {
            "id": "cut"
          },
          {
            "id": "var",
            "cnt": "P<sub>1</sub>"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "if2"
            },
            {
              "id": "var",
              "cnt": "G<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "P<sub>1</sub>"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 410, column 0, character 9386:",
      "cnt": {
        "hyp": [
          {
            "id": "var",
            "cnt": "G<sub>2</sub>"
          },
          {
            "id": "cut"
          },
          {
            "id": "var",
            "cnt": "P<sub>2</sub>"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "if2"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "G<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "P<sub>2</sub>"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"elpi-builtin.elpi\", line 411, column 0, character 9418:",
      "cnt": {
        "hyp": [
          {
            "id": "var",
            "cnt": "E"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "if2"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "E"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 9, column 0, character 465:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "stop"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi: default-fatal-error\", line 16, column 0, character 659:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "halt"
            },
            {
              "id": "var",
              "cnt": "Msg"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error"
            },
            {
              "id": "var",
              "cnt": "Msg"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 12, column 0, character 524:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "term_to_string"
            },
            {
              "id": "var",
              "cnt": "Data"
            },
            {
              "id": "var",
              "cnt": "DataS"
            }
          ],
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "M"
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "^"
                  },
                  {
                    "id": "clause",
                    "isInfix": 1,
                    "cnt": [
                      {
                        "name": "^"
                      },
                      {
                        "id": "var",
                        "cnt": "Msg"
                      },
                      {
                        "id": "string",
                        "cnt": ": "
                      }
                    ]
                  },
                  {
                    "id": "var",
                    "cnt": "DataS"
                  }
                ]
              }
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "stop"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error-w-data"
            },
            {
              "id": "var",
              "cnt": "Msg"
            },
            {
              "id": "var",
              "cnt": "Data"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi: default-fatal-error-w-data\", line 20, column 0, character 756:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "halt"
            },
            {
              "id": "var",
              "cnt": "Msg"
            },
            {
              "id": "string",
              "cnt": ":"
            },
            {
              "id": "var",
              "cnt": "Data"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error-w-data"
            },
            {
              "id": "var",
              "cnt": "Msg"
            },
            {
              "id": "var",
              "cnt": "Data"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 17, column 0, character 660:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.say"
            },
            {
              "id": "var",
              "cnt": "M"
            },
            {
              "id": "var",
              "cnt": "Data"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.debug-print"
            },
            {
              "id": "var",
              "cnt": "M"
            },
            {
              "id": "var",
              "cnt": "Data"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi: default-debug-print\", line 24, column 0, character 874:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "print"
            },
            {
              "id": "var",
              "cnt": "Msg"
            },
            {
              "id": "var",
              "cnt": "Data"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.debug-print"
            },
            {
              "id": "var",
              "cnt": "Msg"
            },
            {
              "id": "var",
              "cnt": "Data"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 30, column 0, character 1007:",
      "cnt": {
        "hyp": [
          {
            "id": "var",
            "cnt": "P"
          },
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.ignore-failure!"
            },
            {
              "id": "var",
              "cnt": "P"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 31, column 0, character 1034:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.ignore-failure!"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 35, column 0, character 1155:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": ";"
              },
              {
                "id": "var",
                "cnt": "Cond"
              },
              [
                {
                  "id": "prop",
                  "cnt": "std.fatal-error-w-data"
                },
                {
                  "id": "var",
                  "cnt": "Msg"
                },
                {
                  "id": "var",
                  "cnt": "Cond"
                }
              ]
            ]
          },
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.assert!"
            },
            {
              "id": "var",
              "cnt": "Cond"
            },
            {
              "id": "var",
              "cnt": "Msg"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 40, column 0, character 1406:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "Cond"
            },
            {
              "id": "var",
              "cnt": "Diagnostic"
            }
          ],
          {
            "id": "cut"
          },
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": ";"
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "="
                  },
                  {
                    "id": "var",
                    "cnt": "Diagnostic"
                  },
                  {
                    "id": "prop",
                    "cnt": "ok"
                  }
                ]
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "="
                  },
                  {
                    "id": "var",
                    "cnt": "Diagnostic"
                  },
                  [
                    {
                      "id": "prop",
                      "cnt": "error"
                    },
                    {
                      "id": "var",
                      "cnt": "S"
                    }
                  ]
                ]
              },
              [
                {
                  "id": "prop",
                  "cnt": "std.fatal-error-w-data"
                },
                {
                  "id": "var",
                  "cnt": "Msg"
                },
                {
                  "id": "var",
                  "cnt": "S"
                }
              ]
            ]
          },
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.assert-ok!"
            },
            {
              "id": "var",
              "cnt": "Cond"
            },
            {
              "id": "var",
              "cnt": "Msg"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 41, column 0, character 1520:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error-w-data"
            },
            {
              "id": "var",
              "cnt": "Msg"
            },
            {
              "id": "string",
              "cnt": "no diagnostic returned"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.assert-ok!"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "Msg"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 45, column 0, character 1682:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "trace.counter"
            },
            {
              "id": "string",
              "cnt": "run"
            },
            {
              "id": "var",
              "cnt": "NR"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "if"
            },
            [
              {
                "id": "prop",
                "cnt": "not"
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "="
                  },
                  {
                    "id": "var",
                    "cnt": "NR"
                  },
                  {
                    "id": "string",
                    "cnt": "0"
                  }
                ]
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "std.debug-print"
              },
              {
                "id": "string",
                "cnt": "run="
              },
              {
                "id": "var",
                "cnt": "NR"
              }
            ],
            {
              "id": "prop",
              "cnt": "true"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.debug-print"
            },
            {
              "id": "string",
              "cnt": "----<<---- enter: "
            },
            {
              "id": "var",
              "cnt": "P"
            }
          ],
          {
            "id": "var",
            "cnt": "P"
          },
          [
            {
              "id": "prop",
              "cnt": "std.debug-print"
            },
            {
              "id": "string",
              "cnt": "---->>---- exit: "
            },
            {
              "id": "var",
              "cnt": "P"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.spy"
            },
            {
              "id": "var",
              "cnt": "P"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 49, column 0, character 1863:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.debug-print"
            },
            {
              "id": "string",
              "cnt": "---->>---- fail: "
            },
            {
              "id": "var",
              "cnt": "P"
            }
          ],
          {
            "id": "prop",
            "cnt": "fail"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.spy"
            },
            {
              "id": "var",
              "cnt": "P"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 53, column 0, character 2001:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "trace.counter"
            },
            {
              "id": "string",
              "cnt": "run"
            },
            {
              "id": "var",
              "cnt": "NR"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "if"
            },
            [
              {
                "id": "prop",
                "cnt": "not"
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "="
                  },
                  {
                    "id": "var",
                    "cnt": "NR"
                  },
                  {
                    "id": "string",
                    "cnt": "0"
                  }
                ]
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "std.debug-print"
              },
              {
                "id": "string",
                "cnt": "run="
              },
              {
                "id": "var",
                "cnt": "NR"
              }
            ],
            {
              "id": "prop",
              "cnt": "true"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.debug-print"
            },
            {
              "id": "string",
              "cnt": "----<<---- enter: "
            },
            {
              "id": "var",
              "cnt": "P"
            }
          ],
          {
            "id": "var",
            "cnt": "P"
          },
          [
            {
              "id": "prop",
              "cnt": "std.debug-print"
            },
            {
              "id": "string",
              "cnt": "---->>---- exit: "
            },
            {
              "id": "var",
              "cnt": "P"
            }
          ],
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.spy!"
            },
            {
              "id": "var",
              "cnt": "P"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 57, column 0, character 2186:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.debug-print"
            },
            {
              "id": "string",
              "cnt": "---->>---- fail: "
            },
            {
              "id": "var",
              "cnt": "P"
            }
          ],
          {
            "id": "prop",
            "cnt": "fail"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.spy!"
            },
            {
              "id": "var",
              "cnt": "P"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 61, column 0, character 2295:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.unsafe-cast"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 66, column 0, character 2367:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.length"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "N<sub>1</sub>"
            }
          ],
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "+"
                  },
                  {
                    "id": "var",
                    "cnt": "N<sub>1</sub>"
                  },
                  {
                    "id": "string",
                    "cnt": "1"
                  }
                ]
              }
            ]
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.length"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "L"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "N"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 67, column 0, character 2411:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.length"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "string",
              "cnt": "0"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 70, column 0, character 2457:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.rev.aux"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "RL"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.rev"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "RL"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 71, column 0, character 2488:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.rev.aux"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "ACC"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.rev.aux"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "ACC"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 72, column 0, character 2534:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.rev.aux"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "L"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 75, column 0, character 2576:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error"
            },
            {
              "id": "string",
              "cnt": "last on empty list"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.last"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 76, column 0, character 2623:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.last"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ]
                }
              ]
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 77, column 0, character 2640:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.last"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.last"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 80, column 0, character 2711:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.append"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "L<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.append"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "L<sub>1</sub>"
                  }
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 81, column 0, character 2754:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.append"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "L"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 84, column 0, character 2814:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.appendR"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "L<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.appendR"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "L<sub>1</sub>"
                  }
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 85, column 0, character 2859:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.appendR"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "L"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 88, column 0, character 2914:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.take"
            },
            {
              "id": "string",
              "cnt": "0"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 89, column 0, character 2932:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "N<sub>1</sub>"
              },
              [
                {
                  "id": "prop",
                  "cnt": "-"
                },
                {
                  "id": "var",
                  "cnt": "N"
                },
                {
                  "id": "string",
                  "cnt": "1"
                }
              ]
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "std.take"
            },
            {
              "id": "var",
              "cnt": "N<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "L"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.take"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "L"
                  }
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 90, column 0, character 2985:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error"
            },
            {
              "id": "string",
              "cnt": "take run out of list items"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.take"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 93, column 0, character 3084:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.length"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ],
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "D"
              },
              [
                {
                  "id": "prop",
                  "cnt": "-"
                },
                {
                  "id": "var",
                  "cnt": "M"
                },
                {
                  "id": "var",
                  "cnt": "N"
                }
              ]
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "std.drop"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.take-last"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 99, column 0, character 3183:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.drop"
            },
            {
              "id": "string",
              "cnt": "0"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "L"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 100, column 0, character 3200:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "N<sub>1</sub>"
              },
              [
                {
                  "id": "prop",
                  "cnt": "-"
                },
                {
                  "id": "var",
                  "cnt": "N"
                },
                {
                  "id": "string",
                  "cnt": "1"
                }
              ]
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "std.drop"
            },
            {
              "id": "var",
              "cnt": "N<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "L"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.drop"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "L"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 101, column 0, character 3249:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error"
            },
            {
              "id": "string",
              "cnt": "drop run out of list items"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.drop"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 104, column 0, character 3348:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.length"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ],
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "I"
              },
              [
                {
                  "id": "prop",
                  "cnt": "-"
                },
                {
                  "id": "var",
                  "cnt": "M"
                },
                {
                  "id": "var",
                  "cnt": "N"
                }
              ]
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "std.take"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.drop-last"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 108, column 0, character 3457:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.split-at"
            },
            {
              "id": "string",
              "cnt": "0"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "L"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 109, column 0, character 3481:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "N<sub>1</sub>"
              },
              [
                {
                  "id": "prop",
                  "cnt": "-"
                },
                {
                  "id": "var",
                  "cnt": "N"
                },
                {
                  "id": "string",
                  "cnt": "1"
                }
              ]
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "std.split-at"
            },
            {
              "id": "var",
              "cnt": "N<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "LN"
            },
            {
              "id": "var",
              "cnt": "LM"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.split-at"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "LN"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "LM"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 110, column 0, character 3550:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error"
            },
            {
              "id": "string",
              "cnt": "split-at run out of list items"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.split-at"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 113, column 0, character 3672:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.fold"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "A"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 114, column 0, character 3687:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.fold"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.fold"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 117, column 0, character 3806:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error"
            },
            {
              "id": "string",
              "cnt": "fold2 on lists of different length"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.fold2"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "discard"
                  }
                }
              ]
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 118, column 0, character 3880:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error"
            },
            {
              "id": "string",
              "cnt": "fold2 on lists of different length"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.fold2"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "discard"
                  }
                }
              ]
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 119, column 0, character 3954:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.fold2"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "A"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 120, column 0, character 3973:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.fold2"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "YS"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.fold2"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "Y"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "YS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 123, column 0, character 4084:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 124, column 0, character 4097:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "YS"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "Y"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "YS"
                  }
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 127, column 0, character 4199:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map-i.aux"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "string",
              "cnt": "0"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map-i"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 128, column 0, character 4233:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map-i.aux"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 129, column 0, character 4254:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ],
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "M"
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "+"
                  },
                  {
                    "id": "var",
                    "cnt": "N"
                  },
                  {
                    "id": "string",
                    "cnt": "1"
                  }
                ]
              }
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "std.map-i.aux"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "M"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "YS"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map-i.aux"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "Y"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "YS"
                  }
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 132, column 0, character 4384:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map-filter"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 133, column 0, character 4404:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "std.map-filter"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "YS"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map-filter"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "Y"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "YS"
                  }
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 134, column 0, character 4464:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map-filter"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "YS"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map-filter"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "YS"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 138, column 0, character 4588:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error"
            },
            {
              "id": "string",
              "cnt": "map2 on lists of different length"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map2"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "discard"
                  }
                }
              ]
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 139, column 0, character 4658:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error"
            },
            {
              "id": "string",
              "cnt": "map2 on lists of different length"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map2"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "discard"
                  }
                }
              ]
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 140, column 0, character 4728:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map2"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 141, column 0, character 4745:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            },
            {
              "id": "var",
              "cnt": "Z"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map2"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "YS"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "ZS"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map2"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "Y"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "YS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "Z"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "ZS"
                  }
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 144, column 0, character 4875:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error"
            },
            {
              "id": "string",
              "cnt": "map2-filter on lists of different length"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map2-filter"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "discard"
                  }
                }
              ]
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 145, column 0, character 4959:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error"
            },
            {
              "id": "string",
              "cnt": "map2-filter on lists of different length"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map2-filter"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "discard"
                  }
                }
              ]
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 146, column 0, character 5043:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map2-filter"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 147, column 0, character 5067:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            },
            {
              "id": "var",
              "cnt": "Z"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "std.map2-filter"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "YS"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "ZS"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map2-filter"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "Y"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "YS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "Z"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "ZS"
                  }
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 148, column 0, character 5141:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map2-filter"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "YS"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "ZS"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map2-filter"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "YS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "ZS"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 151, column 0, character 5280:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "P"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            },
            {
              "id": "var",
              "cnt": "S<sub>0</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "if"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "S<sub>0</sub>"
                },
                {
                  "id": "prop",
                  "cnt": "ok"
                }
              ]
            },
            [
              {
                "id": "prop",
                "cnt": "std.map-ok"
              },
              {
                "id": "var",
                "cnt": "L"
              },
              {
                "id": "var",
                "cnt": "P"
              },
              {
                "id": "var",
                "cnt": "YS"
              },
              {
                "id": "var",
                "cnt": "S"
              }
            ],
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "S"
                },
                {
                  "id": "var",
                  "cnt": "S<sub>0</sub>"
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map-ok"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "L"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "P"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "Y"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "YS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "S"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 152, column 0, character 5358:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map-ok"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "prop",
              "cnt": "ok"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 155, column 0, character 5452:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.fold-map"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "A"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 156, column 0, character 5474:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "Y"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.fold-map"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "YS"
            },
            {
              "id": "var",
              "cnt": "A<sub>2</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.fold-map"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "Y"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "YS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "A<sub>2</sub>"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 159, column 0, character 5598:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.omap"
            },
            {
              "id": "prop",
              "cnt": "none"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "none"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 160, column 0, character 5616:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.omap"
            },
            [
              {
                "id": "prop",
                "cnt": "some"
              },
              {
                "id": "var",
                "cnt": "X"
              }
            ],
            {
              "id": "var",
              "cnt": "F"
            },
            [
              {
                "id": "prop",
                "cnt": "some"
              },
              {
                "id": "var",
                "cnt": "Y"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 164, column 0, character 5756:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "="
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "R"
              }
            ]
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.nth"
            },
            {
              "id": "string",
              "cnt": "0"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "discard"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 165, column 0, character 5784:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": ">"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "string",
              "cnt": "0"
            }
          ],
          {
            "id": "cut"
          },
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "N<sub>1</sub>"
              },
              [
                {
                  "id": "prop",
                  "cnt": "-"
                },
                {
                  "id": "var",
                  "cnt": "N"
                },
                {
                  "id": "string",
                  "cnt": "1"
                }
              ]
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "std.nth"
            },
            {
              "id": "var",
              "cnt": "N<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.nth"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 166, column 0, character 5838:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "<"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "string",
                "cnt": "0"
              }
            ]
          },
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error"
            },
            {
              "id": "string",
              "cnt": "nth got a negative index"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.nth"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 167, column 0, character 5901:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error"
            },
            {
              "id": "string",
              "cnt": "nth run out of list items"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.nth"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 171, column 0, character 6042:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.lookup"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "pr"
                      },
                      {
                        "id": "var",
                        "cnt": "X"
                      },
                      {
                        "id": "var",
                        "cnt": "Y"
                      }
                    ]
                  ],
                  "tl": {
                    "id": "discard"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 172, column 0, character 6065:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.lookup"
            },
            {
              "id": "var",
              "cnt": "LS"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.lookup"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "LS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 176, column 0, character 6224:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.lookup!"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "pr"
                      },
                      {
                        "id": "var",
                        "cnt": "X"
                      },
                      {
                        "id": "var",
                        "cnt": "Y"
                      }
                    ]
                  ],
                  "tl": {
                    "id": "discard"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 177, column 0, character 6253:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.lookup!"
            },
            {
              "id": "var",
              "cnt": "LS"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.lookup!"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "LS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 181, column 0, character 6372:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.mem!"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "discard"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 182, column 0, character 6391:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.mem!"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.mem!"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "L"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 186, column 0, character 6496:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.mem"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "discard"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 187, column 0, character 6509:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.mem"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.mem"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "L"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 190, column 0, character 6571:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "P"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.exists"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "discard"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "P"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 191, column 0, character 6594:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.exists"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "P"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.exists"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "L"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "P"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 194, column 0, character 6678:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error"
            },
            {
              "id": "string",
              "cnt": "exists2 on lists of different length"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.exists2"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "discard"
                  }
                }
              ]
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 195, column 0, character 6752:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error"
            },
            {
              "id": "string",
              "cnt": "exists2 on lists of different length"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.exists2"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "discard"
                  }
                }
              ]
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 196, column 0, character 6826:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "P"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.exists2"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "discard"
                  }
                }
              ]
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "Y"
                    }
                  ],
                  "tl": {
                    "id": "discard"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "P"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 197, column 0, character 6858:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.exists2"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "M"
            },
            {
              "id": "var",
              "cnt": "P"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.exists2"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "L"
                  }
                }
              ]
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "M"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "P"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 200, column 0, character 6936:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.forall"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 201, column 0, character 6949:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "P"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.forall"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "P"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.forall"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "L"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "P"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 204, column 0, character 7053:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "P"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "S<sub>0</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "if"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "S<sub>0</sub>"
                },
                {
                  "id": "prop",
                  "cnt": "ok"
                }
              ]
            },
            [
              {
                "id": "prop",
                "cnt": "std.forall-ok"
              },
              {
                "id": "var",
                "cnt": "L"
              },
              {
                "id": "var",
                "cnt": "P"
              },
              {
                "id": "var",
                "cnt": "S"
              }
            ],
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "S"
                },
                {
                  "id": "var",
                  "cnt": "S<sub>0</sub>"
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.forall-ok"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "L"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "P"
            },
            {
              "id": "var",
              "cnt": "S"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 205, column 0, character 7125:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.forall-ok"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "ok"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 208, column 0, character 7198:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error"
            },
            {
              "id": "string",
              "cnt": "forall2 on lists of different length"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.forall2"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "discard"
                  }
                }
              ]
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 209, column 0, character 7272:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error"
            },
            {
              "id": "string",
              "cnt": "forall2 on lists of different length"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.forall2"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "discard"
                  }
                }
              ]
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 210, column 0, character 7346:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "P"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.forall2"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "YS"
            },
            {
              "id": "var",
              "cnt": "P"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.forall2"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "Y"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "YS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "P"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 211, column 0, character 7397:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.forall2"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 214, column 0, character 7462:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.filter"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 215, column 0, character 7481:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "if"
            },
            [
              {
                "id": "var",
                "cnt": "P"
              },
              {
                "id": "var",
                "cnt": "X"
              }
            ],
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "R"
                },
                {
                  "id": "list",
                  "cnt": [
                    {
                      "l": [
                        {
                          "id": "var",
                          "cnt": "X"
                        }
                      ],
                      "tl": {
                        "id": "var",
                        "cnt": "L<sub>1</sub>"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "R"
                },
                {
                  "id": "var",
                  "cnt": "L<sub>1</sub>"
                }
              ]
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.filter"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "P"
            },
            {
              "id": "var",
              "cnt": "L<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.filter"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "L"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "P"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 218, column 0, character 7598:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error"
            },
            {
              "id": "string",
              "cnt": "zip on lists of different length"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.zip"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "discard"
                  }
                }
              ]
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 219, column 0, character 7664:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error"
            },
            {
              "id": "string",
              "cnt": "zip on lists of different length"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.zip"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "discard"
                  }
                }
              ]
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 220, column 0, character 7730:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.zip"
            },
            {
              "id": "var",
              "cnt": "LX"
            },
            {
              "id": "var",
              "cnt": "LY"
            },
            {
              "id": "var",
              "cnt": "LR"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.zip"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "LX"
                  }
                }
              ]
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "Y"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "LY"
                  }
                }
              ]
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "pr"
                      },
                      {
                        "id": "var",
                        "cnt": "X"
                      },
                      {
                        "id": "var",
                        "cnt": "Y"
                      }
                    ]
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "LR"
                  }
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 221, column 0, character 7777:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.zip"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 224, column 0, character 7842:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.unzip"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 225, column 0, character 7858:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.unzip"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "LX"
            },
            {
              "id": "var",
              "cnt": "LY"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.unzip"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "pr"
                      },
                      {
                        "id": "var",
                        "cnt": "X"
                      },
                      {
                        "id": "var",
                        "cnt": "Y"
                      }
                    ]
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "L"
                  }
                }
              ]
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "LX"
                  }
                }
              ]
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "Y"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "LY"
                  }
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 228, column 0, character 7948:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.flatten"
            },
            {
              "id": "var",
              "cnt": "LS"
            },
            {
              "id": "var",
              "cnt": "LS'"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.append"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "LS'"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.flatten"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "LS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 229, column 0, character 8000:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.flatten"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 232, column 0, character 8040:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.null"
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 235, column 0, character 8079:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.iota.aux"
            },
            {
              "id": "string",
              "cnt": "0"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "L"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.iota"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "L"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 236, column 0, character 8107:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.iota.aux"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 237, column 0, character 8129:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "M"
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "+"
                  },
                  {
                    "id": "var",
                    "cnt": "N"
                  },
                  {
                    "id": "string",
                    "cnt": "1"
                  }
                ]
              }
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "std.iota.aux"
            },
            {
              "id": "var",
              "cnt": "M"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.iota.aux"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "N"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "R"
                  }
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 242, column 0, character 8281:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.intersperse"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 243, column 0, character 8302:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.intersperse"
            },
            {
              "id": "discard"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ]
                }
              ]
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 244, column 0, character 8330:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.intersperse"
            },
            {
              "id": "var",
              "cnt": "Sep"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "YS"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.intersperse"
            },
            {
              "id": "var",
              "cnt": "Sep"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    },
                    {
                      "id": "var",
                      "cnt": "Sep"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "YS"
                  }
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 249, column 0, character 8446:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "P"
            },
            {
              "id": "var",
              "cnt": "Y"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.flip"
            },
            {
              "id": "var",
              "cnt": "P"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 252, column 0, character 8495:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "gettimeofday"
            },
            {
              "id": "var",
              "cnt": "Before"
            }
          ],
          {
            "id": "var",
            "cnt": "P"
          },
          [
            {
              "id": "prop",
              "cnt": "gettimeofday"
            },
            {
              "id": "var",
              "cnt": "After"
            }
          ],
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              [
                {
                  "id": "prop",
                  "cnt": "-"
                },
                {
                  "id": "var",
                  "cnt": "After"
                },
                {
                  "id": "var",
                  "cnt": "Before"
                }
              ]
            ]
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.time"
            },
            {
              "id": "var",
              "cnt": "P"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 255, column 0, character 8595:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.do!"
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 256, column 0, character 8603:",
      "cnt": {
        "hyp": [
          {
            "id": "var",
            "cnt": "P"
          },
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "std.do!"
            },
            {
              "id": "var",
              "cnt": "PS"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.do!"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "P"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "PS"
                  }
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 260, column 0, character 8699:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.do-ok!"
            },
            {
              "id": "prop",
              "cnt": "ok"
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 261, column 0, character 8713:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "P"
            },
            {
              "id": "var",
              "cnt": "S<sub>0</sub>"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "if"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "S<sub>0</sub>"
                },
                {
                  "id": "prop",
                  "cnt": "ok"
                }
              ]
            },
            [
              {
                "id": "prop",
                "cnt": "std.do-ok!"
              },
              {
                "id": "var",
                "cnt": "S"
              },
              {
                "id": "var",
                "cnt": "PS"
              }
            ],
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "S"
                },
                {
                  "id": "var",
                  "cnt": "S<sub>0</sub>"
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.do-ok!"
            },
            {
              "id": "var",
              "cnt": "S"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "P"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "PS"
                  }
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 264, column 0, character 8824:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": ";"
              },
              {
                "id": "var",
                "cnt": "P"
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "="
                  },
                  {
                    "id": "var",
                    "cnt": "R"
                  },
                  {
                    "id": "prop",
                    "cnt": "ok"
                  }
                ]
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "="
                  },
                  {
                    "id": "var",
                    "cnt": "R"
                  },
                  [
                    {
                      "id": "prop",
                      "cnt": "error"
                    },
                    {
                      "id": "var",
                      "cnt": "Msg"
                    }
                  ]
                ]
              }
            ]
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.lift-ok"
            },
            {
              "id": "var",
              "cnt": "P"
            },
            {
              "id": "var",
              "cnt": "Msg"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 267, column 0, character 8898:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "quantification",
              "cnt": {
                "type": "anonymousForall",
                "names": [
                  {
                    "id": "var",
                    "cnt": "x<sub>1</sub>"
                  }
                ],
                "body": [
                  {
                    "id": "quantification",
                    "cnt": {
                      "type": "anonymousForall",
                      "names": [
                        {
                          "id": "var",
                          "cnt": "x<sub>2</sub>"
                        }
                      ],
                      "body": [
                        {
                          "id": "clause",
                          "isInfix": 1,
                          "cnt": [
                            {
                              "name": "="
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>2</sub>"
                            },
                            [
                              {
                                "id": "prop",
                                "cnt": "std.spy"
                              },
                              {
                                "id": "var",
                                "cnt": "x<sub>1</sub>"
                              }
                            ]
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "id": "var",
              "cnt": "L<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.do!"
            },
            {
              "id": "var",
              "cnt": "L<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.spy-do!"
            },
            {
              "id": "var",
              "cnt": "L"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 270, column 0, character 9021:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.while-ok-do!"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "error"
                  },
                  {
                    "id": "discard"
                  }
                ],
                {
                  "id": "var",
                  "cnt": "E"
                }
              ]
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "E"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 271, column 0, character 9054:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.while-ok-do!"
            },
            {
              "id": "prop",
              "cnt": "ok"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "prop",
              "cnt": "ok"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 272, column 0, character 9077:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "P"
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "std.while-ok-do!"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "PS"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.while-ok-do!"
            },
            {
              "id": "prop",
              "cnt": "ok"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "P"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "PS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 275, column 0, character 9167:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "term_to_string"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.any->string"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 278, column 0, character 9231:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": ">="
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ],
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.max"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "M"
            },
            {
              "id": "var",
              "cnt": "N"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 279, column 0, character 9255:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.max"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "M"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_stdlib.elpi\", line 283, column 0, character 9378:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "findall_solutions"
            },
            {
              "id": "var",
              "cnt": "P"
            },
            {
              "id": "var",
              "cnt": "L"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.findall"
            },
            {
              "id": "var",
              "cnt": "P"
            },
            {
              "id": "var",
              "cnt": "L"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 7, column 0, character 10064:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.make"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            [
              {
                "id": "prop",
                "cnt": "std.map"
              },
              {
                "id": "prop",
                "cnt": "std.map.private.empty"
              },
              {
                "id": "var",
                "cnt": "Cmp"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 11, column 0, character 10196:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.find"
            },
            {
              "id": "var",
              "cnt": "M"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "V"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.find"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            [
              {
                "id": "prop",
                "cnt": "std.map"
              },
              {
                "id": "var",
                "cnt": "M"
              },
              {
                "id": "var",
                "cnt": "Cmp"
              }
            ],
            {
              "id": "var",
              "cnt": "V"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 15, column 0, character 10345:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.add"
            },
            {
              "id": "var",
              "cnt": "M"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "M<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.add"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            [
              {
                "id": "prop",
                "cnt": "std.map"
              },
              {
                "id": "var",
                "cnt": "M"
              },
              {
                "id": "var",
                "cnt": "Cmp"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "std.map"
              },
              {
                "id": "var",
                "cnt": "M<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "Cmp"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 19, column 0, character 10508:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.remove"
            },
            {
              "id": "var",
              "cnt": "M"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "M<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.remove"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            [
              {
                "id": "prop",
                "cnt": "std.map"
              },
              {
                "id": "var",
                "cnt": "M"
              },
              {
                "id": "var",
                "cnt": "Cmp"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "std.map"
              },
              {
                "id": "var",
                "cnt": "M<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "Cmp"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 23, column 0, character 10691:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.bindings"
            },
            {
              "id": "var",
              "cnt": "M"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "L"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.bindings"
            },
            [
              {
                "id": "prop",
                "cnt": "std.map"
              },
              {
                "id": "var",
                "cnt": "M"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "L"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 33, column 0, character 10934:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.height"
            },
            {
              "id": "prop",
              "cnt": "std.map.private.empty"
            },
            {
              "id": "string",
              "cnt": "0"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 34, column 0, character 10950:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.height"
            },
            [
              {
                "id": "prop",
                "cnt": "std.map.private.node"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "H"
              }
            ],
            {
              "id": "var",
              "cnt": "H"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 37, column 0, character 11033:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.height"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.height"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.max"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>3</sub>"
            }
          ],
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "H"
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "+"
                  },
                  {
                    "id": "var",
                    "cnt": "Spilled<sub>3</sub>"
                  },
                  {
                    "id": "string",
                    "cnt": "1"
                  }
                ]
              }
            ]
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.create"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            [
              {
                "id": "prop",
                "cnt": "std.map.private.node"
              },
              {
                "id": "var",
                "cnt": "L"
              },
              {
                "id": "var",
                "cnt": "K"
              },
              {
                "id": "var",
                "cnt": "V"
              },
              {
                "id": "var",
                "cnt": "R"
              },
              {
                "id": "var",
                "cnt": "H"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 40, column 0, character 11163:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.height"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "HL"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.height"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "HR"
            }
          ],
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "HL<sub>2</sub>"
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "+"
                  },
                  {
                    "id": "var",
                    "cnt": "HL"
                  },
                  {
                    "id": "string",
                    "cnt": "2"
                  }
                ]
              }
            ]
          },
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "HR<sub>2</sub>"
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "+"
                  },
                  {
                    "id": "var",
                    "cnt": "HR"
                  },
                  {
                    "id": "string",
                    "cnt": "2"
                  }
                ]
              }
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "std.map.private.bal.aux"
            },
            {
              "id": "var",
              "cnt": "HL"
            },
            {
              "id": "var",
              "cnt": "HR"
            },
            {
              "id": "var",
              "cnt": "HL<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "HR<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.bal"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 47, column 0, character 11280:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": ">"
            },
            {
              "id": "var",
              "cnt": "HL"
            },
            {
              "id": "var",
              "cnt": "HR<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.height"
            },
            {
              "id": "var",
              "cnt": "LL"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.height"
            },
            {
              "id": "var",
              "cnt": "LR"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>3</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": ">="
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>3</sub>"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "std.map.private.create"
            },
            {
              "id": "var",
              "cnt": "LR"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.create"
            },
            {
              "id": "var",
              "cnt": "LL"
            },
            {
              "id": "var",
              "cnt": "LV"
            },
            {
              "id": "var",
              "cnt": "LD"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.bal.aux"
            },
            {
              "id": "var",
              "cnt": "HL"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "HR<sub>2</sub>"
            },
            [
              {
                "id": "prop",
                "cnt": "std.map.private.node"
              },
              {
                "id": "var",
                "cnt": "LL"
              },
              {
                "id": "var",
                "cnt": "LV"
              },
              {
                "id": "var",
                "cnt": "LD"
              },
              {
                "id": "var",
                "cnt": "LR"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 50, column 0, character 11413:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": ">"
            },
            {
              "id": "var",
              "cnt": "HL"
            },
            {
              "id": "var",
              "cnt": "HR<sub>2</sub>"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "std.map.private.create"
            },
            {
              "id": "var",
              "cnt": "LL"
            },
            {
              "id": "var",
              "cnt": "LV"
            },
            {
              "id": "var",
              "cnt": "LD"
            },
            {
              "id": "var",
              "cnt": "LRL"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.create"
            },
            {
              "id": "var",
              "cnt": "LRR"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.create"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "LRV"
            },
            {
              "id": "var",
              "cnt": "LRD"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.bal.aux"
            },
            {
              "id": "var",
              "cnt": "HL"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "HR<sub>2</sub>"
            },
            [
              {
                "id": "prop",
                "cnt": "std.map.private.node"
              },
              {
                "id": "var",
                "cnt": "LL"
              },
              {
                "id": "var",
                "cnt": "LV"
              },
              {
                "id": "var",
                "cnt": "LD"
              },
              [
                {
                  "id": "prop",
                  "cnt": "std.map.private.node"
                },
                {
                  "id": "var",
                  "cnt": "LRL"
                },
                {
                  "id": "var",
                  "cnt": "LRV"
                },
                {
                  "id": "var",
                  "cnt": "LRD"
                },
                {
                  "id": "var",
                  "cnt": "LRR"
                },
                {
                  "id": "discard"
                }
              ],
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 53, column 0, character 11562:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": ">"
            },
            {
              "id": "var",
              "cnt": "HR"
            },
            {
              "id": "var",
              "cnt": "HL<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.height"
            },
            {
              "id": "var",
              "cnt": "RR"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.height"
            },
            {
              "id": "var",
              "cnt": "RL"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>3</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": ">="
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>3</sub>"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "std.map.private.create"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            {
              "id": "var",
              "cnt": "RL"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.create"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "RV"
            },
            {
              "id": "var",
              "cnt": "RD"
            },
            {
              "id": "var",
              "cnt": "RR"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.bal.aux"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "HR"
            },
            {
              "id": "var",
              "cnt": "HL<sub>2</sub>"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            [
              {
                "id": "prop",
                "cnt": "std.map.private.node"
              },
              {
                "id": "var",
                "cnt": "RL"
              },
              {
                "id": "var",
                "cnt": "RV"
              },
              {
                "id": "var",
                "cnt": "RD"
              },
              {
                "id": "var",
                "cnt": "RR"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 56, column 0, character 11695:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": ">"
            },
            {
              "id": "var",
              "cnt": "HR"
            },
            {
              "id": "var",
              "cnt": "HL<sub>2</sub>"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "std.map.private.create"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            {
              "id": "var",
              "cnt": "RLL"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.create"
            },
            {
              "id": "var",
              "cnt": "RLR"
            },
            {
              "id": "var",
              "cnt": "RV"
            },
            {
              "id": "var",
              "cnt": "RD"
            },
            {
              "id": "var",
              "cnt": "RR"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.create"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "RLV"
            },
            {
              "id": "var",
              "cnt": "RLD"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.bal.aux"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "HR"
            },
            {
              "id": "var",
              "cnt": "HL<sub>2</sub>"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            [
              {
                "id": "prop",
                "cnt": "std.map.private.node"
              },
              [
                {
                  "id": "prop",
                  "cnt": "std.map.private.node"
                },
                {
                  "id": "var",
                  "cnt": "RLL"
                },
                {
                  "id": "var",
                  "cnt": "RLV"
                },
                {
                  "id": "var",
                  "cnt": "RLD"
                },
                {
                  "id": "var",
                  "cnt": "RLR"
                },
                {
                  "id": "discard"
                }
              ],
              {
                "id": "var",
                "cnt": "RV"
              },
              {
                "id": "var",
                "cnt": "RD"
              },
              {
                "id": "var",
                "cnt": "RR"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 59, column 0, character 11844:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.create"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.bal.aux"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 62, column 0, character 11960:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.create"
            },
            {
              "id": "prop",
              "cnt": "std.map.private.empty"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "prop",
              "cnt": "std.map.private.empty"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.add"
            },
            {
              "id": "prop",
              "cnt": "std.map.private.empty"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 63, column 0, character 12007:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "X<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "E"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.add.aux"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "M"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "X<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "XD"
            },
            {
              "id": "var",
              "cnt": "M<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.add"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "std.map.private.node"
                  },
                  {
                    "id": "discard"
                  },
                  {
                    "id": "var",
                    "cnt": "X"
                  },
                  {
                    "id": "discard"
                  },
                  {
                    "id": "discard"
                  },
                  {
                    "id": "discard"
                  }
                ],
                {
                  "id": "var",
                  "cnt": "M"
                }
              ]
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "X<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "XD"
            },
            {
              "id": "var",
              "cnt": "M<sub>1</sub>"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 64, column 0, character 12087:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "="
              },
              {
                "id": "var",
                "cnt": "T"
              },
              [
                {
                  "id": "prop",
                  "cnt": "std.map.private.node"
                },
                {
                  "id": "var",
                  "cnt": "L"
                },
                {
                  "id": "var",
                  "cnt": "X"
                },
                {
                  "id": "var",
                  "cnt": "XD"
                },
                {
                  "id": "var",
                  "cnt": "R"
                },
                {
                  "id": "var",
                  "cnt": "H"
                }
              ]
            ]
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.add.aux"
            },
            {
              "id": "prop",
              "cnt": "eq"
            },
            [
              {
                "id": "prop",
                "cnt": "std.map.private.node"
              },
              {
                "id": "var",
                "cnt": "L"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "R"
              },
              {
                "id": "var",
                "cnt": "H"
              }
            ],
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XD"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 65, column 0, character 12151:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.add"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XD"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.bal"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.add.aux"
            },
            {
              "id": "prop",
              "cnt": "lt"
            },
            [
              {
                "id": "prop",
                "cnt": "std.map.private.node"
              },
              {
                "id": "var",
                "cnt": "L"
              },
              {
                "id": "var",
                "cnt": "V"
              },
              {
                "id": "var",
                "cnt": "D"
              },
              {
                "id": "var",
                "cnt": "R"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XD"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 66, column 0, character 12223:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.add"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XD"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.bal"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.add.aux"
            },
            {
              "id": "prop",
              "cnt": "gt"
            },
            [
              {
                "id": "prop",
                "cnt": "std.map.private.node"
              },
              {
                "id": "var",
                "cnt": "L"
              },
              {
                "id": "var",
                "cnt": "V"
              },
              {
                "id": "var",
                "cnt": "D"
              },
              {
                "id": "var",
                "cnt": "R"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XD"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 69, column 0, character 12354:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "K<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "E"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.find.aux"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "V<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "V"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.find"
            },
            [
              {
                "id": "prop",
                "cnt": "std.map.private.node"
              },
              {
                "id": "var",
                "cnt": "L"
              },
              {
                "id": "var",
                "cnt": "K<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "V<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "R"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "V"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 70, column 0, character 12428:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.find.aux"
            },
            {
              "id": "prop",
              "cnt": "eq"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "V"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 71, column 0, character 12455:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.find"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "V"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.find.aux"
            },
            {
              "id": "prop",
              "cnt": "lt"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "V"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 72, column 0, character 12500:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.find"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "V"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.find.aux"
            },
            {
              "id": "prop",
              "cnt": "gt"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "V"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 75, column 0, character 12592:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.remove-min-binding"
            },
            [
              {
                "id": "prop",
                "cnt": "std.map.private.node"
              },
              {
                "id": "prop",
                "cnt": "std.map.private.empty"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "R"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 76, column 0, character 12640:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.remove-min-binding"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.bal"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.remove-min-binding"
            },
            [
              {
                "id": "prop",
                "cnt": "std.map.private.node"
              },
              {
                "id": "var",
                "cnt": "L"
              },
              {
                "id": "var",
                "cnt": "V"
              },
              {
                "id": "var",
                "cnt": "D"
              },
              {
                "id": "var",
                "cnt": "R"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 79, column 0, character 12756:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.min-binding"
            },
            [
              {
                "id": "prop",
                "cnt": "std.map.private.node"
              },
              {
                "id": "prop",
                "cnt": "std.map.private.empty"
              },
              {
                "id": "var",
                "cnt": "V"
              },
              {
                "id": "var",
                "cnt": "D"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "D"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 80, column 0, character 12799:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.min-binding"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "D"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.min-binding"
            },
            [
              {
                "id": "prop",
                "cnt": "std.map.private.node"
              },
              {
                "id": "var",
                "cnt": "L"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "D"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 83, column 0, character 12899:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.merge"
            },
            {
              "id": "prop",
              "cnt": "std.map.private.empty"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 84, column 0, character 12921:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.merge"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "prop",
              "cnt": "std.map.private.empty"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 85, column 0, character 12943:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.min-binding"
            },
            {
              "id": "var",
              "cnt": "M<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "D"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.remove-min-binding"
            },
            {
              "id": "var",
              "cnt": "M<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.bal"
            },
            {
              "id": "var",
              "cnt": "M<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.merge"
            },
            {
              "id": "var",
              "cnt": "M<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "M<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 90, column 0, character 13089:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.remove"
            },
            {
              "id": "prop",
              "cnt": "std.map.private.empty"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "std.map.private.empty"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 91, column 0, character 13118:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "E"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.remove.aux"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.remove"
            },
            [
              {
                "id": "prop",
                "cnt": "std.map.private.node"
              },
              {
                "id": "var",
                "cnt": "L"
              },
              {
                "id": "var",
                "cnt": "V"
              },
              {
                "id": "var",
                "cnt": "D"
              },
              {
                "id": "var",
                "cnt": "R"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 92, column 0, character 13194:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.merge"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.remove.aux"
            },
            {
              "id": "prop",
              "cnt": "eq"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 93, column 0, character 13240:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.remove"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.bal"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.remove.aux"
            },
            {
              "id": "prop",
              "cnt": "lt"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 94, column 0, character 13303:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.remove"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.bal"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.remove.aux"
            },
            {
              "id": "prop",
              "cnt": "gt"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 97, column 0, character 13430:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.bindings"
            },
            {
              "id": "prop",
              "cnt": "std.map.private.empty"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_map.elpi\", line 98, column 0, character 13450:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.bindings"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map.private.bindings"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "pr"
                      },
                      {
                        "id": "var",
                        "cnt": "V"
                      },
                      {
                        "id": "var",
                        "cnt": "D"
                      }
                    ]
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "Spilled<sub>1</sub>"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "X<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.map.private.bindings"
            },
            [
              {
                "id": "prop",
                "cnt": "std.map.private.node"
              },
              {
                "id": "var",
                "cnt": "L"
              },
              {
                "id": "var",
                "cnt": "V"
              },
              {
                "id": "var",
                "cnt": "D"
              },
              {
                "id": "var",
                "cnt": "R"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "X<sub>1</sub>"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 7, column 0, character 16965:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.make"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            [
              {
                "id": "prop",
                "cnt": "std.set"
              },
              {
                "id": "prop",
                "cnt": "std.set.private.empty"
              },
              {
                "id": "var",
                "cnt": "Cmp"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 11, column 0, character 17062:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.mem"
            },
            {
              "id": "var",
              "cnt": "M"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "E"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.mem"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            [
              {
                "id": "prop",
                "cnt": "std.set"
              },
              {
                "id": "var",
                "cnt": "M"
              },
              {
                "id": "var",
                "cnt": "Cmp"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 15, column 0, character 17177:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.add"
            },
            {
              "id": "var",
              "cnt": "M"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "M<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.add"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            [
              {
                "id": "prop",
                "cnt": "std.set"
              },
              {
                "id": "var",
                "cnt": "M"
              },
              {
                "id": "var",
                "cnt": "Cmp"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "std.set"
              },
              {
                "id": "var",
                "cnt": "M<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "Cmp"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 19, column 0, character 17319:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.remove"
            },
            {
              "id": "var",
              "cnt": "M"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "M<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.remove"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            [
              {
                "id": "prop",
                "cnt": "std.set"
              },
              {
                "id": "var",
                "cnt": "M"
              },
              {
                "id": "var",
                "cnt": "Cmp"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "std.set"
              },
              {
                "id": "var",
                "cnt": "M<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "Cmp"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 23, column 0, character 17476:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.cardinal"
            },
            {
              "id": "var",
              "cnt": "M"
            },
            {
              "id": "var",
              "cnt": "N"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.cardinal"
            },
            [
              {
                "id": "prop",
                "cnt": "std.set"
              },
              {
                "id": "var",
                "cnt": "M"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "N"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 26, column 0, character 17564:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.elements"
            },
            {
              "id": "var",
              "cnt": "M"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "L"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.elements"
            },
            [
              {
                "id": "prop",
                "cnt": "std.set"
              },
              {
                "id": "var",
                "cnt": "M"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "L"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 36, column 0, character 17784:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.height"
            },
            {
              "id": "prop",
              "cnt": "std.set.private.empty"
            },
            {
              "id": "string",
              "cnt": "0"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 37, column 0, character 17800:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.height"
            },
            [
              {
                "id": "prop",
                "cnt": "std.set.private.node"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "H"
              }
            ],
            {
              "id": "var",
              "cnt": "H"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 40, column 0, character 17870:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.height"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.height"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.max"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>3</sub>"
            }
          ],
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "H"
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "+"
                  },
                  {
                    "id": "var",
                    "cnt": "Spilled<sub>3</sub>"
                  },
                  {
                    "id": "string",
                    "cnt": "1"
                  }
                ]
              }
            ]
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.create"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            [
              {
                "id": "prop",
                "cnt": "std.set.private.node"
              },
              {
                "id": "var",
                "cnt": "L"
              },
              {
                "id": "var",
                "cnt": "E"
              },
              {
                "id": "var",
                "cnt": "R"
              },
              {
                "id": "var",
                "cnt": "H"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 43, column 0, character 17985:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.height"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "HL"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.height"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "HR"
            }
          ],
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "HL<sub>2</sub>"
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "+"
                  },
                  {
                    "id": "var",
                    "cnt": "HL"
                  },
                  {
                    "id": "string",
                    "cnt": "2"
                  }
                ]
              }
            ]
          },
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "HR<sub>2</sub>"
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "+"
                  },
                  {
                    "id": "var",
                    "cnt": "HR"
                  },
                  {
                    "id": "string",
                    "cnt": "2"
                  }
                ]
              }
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "std.set.private.bal.aux"
            },
            {
              "id": "var",
              "cnt": "HL"
            },
            {
              "id": "var",
              "cnt": "HR"
            },
            {
              "id": "var",
              "cnt": "HL<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "HR<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.bal"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 50, column 0, character 18098:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": ">"
            },
            {
              "id": "var",
              "cnt": "HL"
            },
            {
              "id": "var",
              "cnt": "HR<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.height"
            },
            {
              "id": "var",
              "cnt": "LL"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.height"
            },
            {
              "id": "var",
              "cnt": "LR"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>3</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": ">="
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>3</sub>"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "std.set.private.create"
            },
            {
              "id": "var",
              "cnt": "LR"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.create"
            },
            {
              "id": "var",
              "cnt": "LL"
            },
            {
              "id": "var",
              "cnt": "LV"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.bal.aux"
            },
            {
              "id": "var",
              "cnt": "HL"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "HR<sub>2</sub>"
            },
            [
              {
                "id": "prop",
                "cnt": "std.set.private.node"
              },
              {
                "id": "var",
                "cnt": "LL"
              },
              {
                "id": "var",
                "cnt": "LV"
              },
              {
                "id": "var",
                "cnt": "LR"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 53, column 0, character 18221:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": ">"
            },
            {
              "id": "var",
              "cnt": "HL"
            },
            {
              "id": "var",
              "cnt": "HR<sub>2</sub>"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "std.set.private.create"
            },
            {
              "id": "var",
              "cnt": "LL"
            },
            {
              "id": "var",
              "cnt": "LV"
            },
            {
              "id": "var",
              "cnt": "LRL"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.create"
            },
            {
              "id": "var",
              "cnt": "LRR"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.create"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "LRV"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.bal.aux"
            },
            {
              "id": "var",
              "cnt": "HL"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "HR<sub>2</sub>"
            },
            [
              {
                "id": "prop",
                "cnt": "std.set.private.node"
              },
              {
                "id": "var",
                "cnt": "LL"
              },
              {
                "id": "var",
                "cnt": "LV"
              },
              [
                {
                  "id": "prop",
                  "cnt": "std.set.private.node"
                },
                {
                  "id": "var",
                  "cnt": "LRL"
                },
                {
                  "id": "var",
                  "cnt": "LRV"
                },
                {
                  "id": "var",
                  "cnt": "LRR"
                },
                {
                  "id": "discard"
                }
              ],
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 56, column 0, character 18352:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": ">"
            },
            {
              "id": "var",
              "cnt": "HR"
            },
            {
              "id": "var",
              "cnt": "HL<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.height"
            },
            {
              "id": "var",
              "cnt": "RR"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.height"
            },
            {
              "id": "var",
              "cnt": "RL"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>3</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": ">="
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>3</sub>"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "std.set.private.create"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "RL"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.create"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "RV"
            },
            {
              "id": "var",
              "cnt": "RR"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.bal.aux"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "HR"
            },
            {
              "id": "var",
              "cnt": "HL<sub>2</sub>"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            [
              {
                "id": "prop",
                "cnt": "std.set.private.node"
              },
              {
                "id": "var",
                "cnt": "RL"
              },
              {
                "id": "var",
                "cnt": "RV"
              },
              {
                "id": "var",
                "cnt": "RR"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 59, column 0, character 18475:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": ">"
            },
            {
              "id": "var",
              "cnt": "HR"
            },
            {
              "id": "var",
              "cnt": "HL<sub>2</sub>"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "std.set.private.create"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "RLL"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.create"
            },
            {
              "id": "var",
              "cnt": "RLR"
            },
            {
              "id": "var",
              "cnt": "RV"
            },
            {
              "id": "var",
              "cnt": "RR"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.create"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "RLV"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.bal.aux"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "HR"
            },
            {
              "id": "var",
              "cnt": "HL<sub>2</sub>"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            [
              {
                "id": "prop",
                "cnt": "std.set.private.node"
              },
              [
                {
                  "id": "prop",
                  "cnt": "std.set.private.node"
                },
                {
                  "id": "var",
                  "cnt": "RLL"
                },
                {
                  "id": "var",
                  "cnt": "RLV"
                },
                {
                  "id": "var",
                  "cnt": "RLR"
                },
                {
                  "id": "discard"
                }
              ],
              {
                "id": "var",
                "cnt": "RV"
              },
              {
                "id": "var",
                "cnt": "RR"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 62, column 0, character 18606:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.create"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.bal.aux"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 65, column 0, character 18709:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.create"
            },
            {
              "id": "prop",
              "cnt": "std.set.private.empty"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "prop",
              "cnt": "std.set.private.empty"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.add"
            },
            {
              "id": "prop",
              "cnt": "std.set.private.empty"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 66, column 0, character 18752:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "X<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "E"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.add.aux"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "X<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "H"
            },
            {
              "id": "var",
              "cnt": "S"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.add"
            },
            [
              {
                "id": "prop",
                "cnt": "std.set.private.node"
              },
              {
                "id": "var",
                "cnt": "L"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "R"
              },
              {
                "id": "var",
                "cnt": "H"
              }
            ],
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "X<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "S"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 67, column 0, character 18823:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.add.aux"
            },
            {
              "id": "prop",
              "cnt": "eq"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "H"
            },
            [
              {
                "id": "prop",
                "cnt": "std.set.private.node"
              },
              {
                "id": "var",
                "cnt": "L"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "R"
              },
              {
                "id": "var",
                "cnt": "H"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 68, column 0, character 18862:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.add"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.bal"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.add.aux"
            },
            {
              "id": "prop",
              "cnt": "lt"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 69, column 0, character 18917:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.add"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.bal"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.add.aux"
            },
            {
              "id": "prop",
              "cnt": "gt"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 72, column 0, character 19023:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "O"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.mem.aux"
            },
            {
              "id": "var",
              "cnt": "O"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "E"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.mem"
            },
            [
              {
                "id": "prop",
                "cnt": "std.set.private.node"
              },
              {
                "id": "var",
                "cnt": "L"
              },
              {
                "id": "var",
                "cnt": "K"
              },
              {
                "id": "var",
                "cnt": "R"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "E"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 73, column 0, character 19083:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.mem.aux"
            },
            {
              "id": "prop",
              "cnt": "eq"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 74, column 0, character 19103:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.mem"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "E"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.mem.aux"
            },
            {
              "id": "prop",
              "cnt": "lt"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "E"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 75, column 0, character 19140:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.mem"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "E"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.mem.aux"
            },
            {
              "id": "prop",
              "cnt": "gt"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "E"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 78, column 0, character 19220:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.remove-min-binding"
            },
            [
              {
                "id": "prop",
                "cnt": "std.set.private.node"
              },
              {
                "id": "prop",
                "cnt": "std.set.private.empty"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "R"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 79, column 0, character 19266:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.remove-min-binding"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.bal"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.remove-min-binding"
            },
            [
              {
                "id": "prop",
                "cnt": "std.set.private.node"
              },
              {
                "id": "var",
                "cnt": "L"
              },
              {
                "id": "var",
                "cnt": "E"
              },
              {
                "id": "var",
                "cnt": "R"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 82, column 0, character 19371:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.min-binding"
            },
            [
              {
                "id": "prop",
                "cnt": "std.set.private.node"
              },
              {
                "id": "prop",
                "cnt": "std.set.private.empty"
              },
              {
                "id": "var",
                "cnt": "E"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "E"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 83, column 0, character 19410:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.min-binding"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "E"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.min-binding"
            },
            [
              {
                "id": "prop",
                "cnt": "std.set.private.node"
              },
              {
                "id": "var",
                "cnt": "L"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "E"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 86, column 0, character 19498:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.merge"
            },
            {
              "id": "prop",
              "cnt": "std.set.private.empty"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 87, column 0, character 19520:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.merge"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "prop",
              "cnt": "std.set.private.empty"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 88, column 0, character 19542:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.min-binding"
            },
            {
              "id": "var",
              "cnt": "M<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.remove-min-binding"
            },
            {
              "id": "var",
              "cnt": "M<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.bal"
            },
            {
              "id": "var",
              "cnt": "M<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.merge"
            },
            {
              "id": "var",
              "cnt": "M<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "M<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 93, column 0, character 19680:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.remove"
            },
            {
              "id": "prop",
              "cnt": "std.set.private.empty"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "std.set.private.empty"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 94, column 0, character 19704:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "O"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.remove.aux"
            },
            {
              "id": "var",
              "cnt": "O"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.remove"
            },
            [
              {
                "id": "prop",
                "cnt": "std.set.private.node"
              },
              {
                "id": "var",
                "cnt": "L"
              },
              {
                "id": "var",
                "cnt": "E"
              },
              {
                "id": "var",
                "cnt": "R"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 95, column 0, character 19776:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.merge"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.remove.aux"
            },
            {
              "id": "prop",
              "cnt": "eq"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 96, column 0, character 19820:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.remove"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.bal"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.remove.aux"
            },
            {
              "id": "prop",
              "cnt": "lt"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 97, column 0, character 19879:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.remove"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.bal"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.remove.aux"
            },
            {
              "id": "prop",
              "cnt": "gt"
            },
            {
              "id": "var",
              "cnt": "Cmp"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "E"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "M"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 100, column 0, character 19969:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.cardinal"
            },
            {
              "id": "prop",
              "cnt": "std.set.private.empty"
            },
            {
              "id": "string",
              "cnt": "0"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 101, column 0, character 19987:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.cardinal"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.cardinal"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            }
          ],
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "+"
                  },
                  {
                    "id": "clause",
                    "isInfix": 1,
                    "cnt": [
                      {
                        "name": "+"
                      },
                      {
                        "id": "var",
                        "cnt": "Spilled<sub>1</sub>"
                      },
                      {
                        "id": "string",
                        "cnt": "1"
                      }
                    ]
                  },
                  {
                    "id": "var",
                    "cnt": "Spilled<sub>2</sub>"
                  }
                ]
              }
            ]
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.cardinal"
            },
            [
              {
                "id": "prop",
                "cnt": "std.set.private.node"
              },
              {
                "id": "var",
                "cnt": "L"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "R"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "N"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 104, column 0, character 20098:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.elements"
            },
            {
              "id": "prop",
              "cnt": "std.set.private.empty"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"builtin_set.elpi\", line 105, column 0, character 20118:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.elements"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "var",
              "cnt": "Acc"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.set.private.elements"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "E"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "Spilled<sub>1</sub>"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "std.set.private.elements"
            },
            [
              {
                "id": "prop",
                "cnt": "std.set.private.node"
              },
              {
                "id": "var",
                "cnt": "L"
              },
              {
                "id": "var",
                "cnt": "E"
              },
              {
                "id": "var",
                "cnt": "R"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "Acc"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 22, column 0, character 794:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "get-option"
            },
            {
              "id": "string",
              "cnt": "ltac:fail"
            },
            {
              "id": "var",
              "cnt": "N"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.fail"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "S"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "stop"
            },
            {
              "id": "var",
              "cnt": "S"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 23, column 0, character 852:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.error"
            },
            {
              "id": "var",
              "cnt": "S"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "stop"
            },
            {
              "id": "var",
              "cnt": "S"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 36, column 0, character 1340:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.subst-prod"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "P"
            },
            {
              "id": "var",
              "cnt": "P"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 37, column 0, character 1368:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.subst-prod"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            [
              {
                "id": "var",
                "cnt": "F"
              },
              {
                "id": "var",
                "cnt": "X"
              }
            ],
            {
              "id": "var",
              "cnt": "P"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.subst-prod"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            [
              {
                "id": "prop",
                "cnt": "prod"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "var",
              "cnt": "P"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 38, column 0, character 1438:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.subst-prod"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            [
              {
                "id": "var",
                "cnt": "F"
              },
              {
                "id": "var",
                "cnt": "X"
              }
            ],
            {
              "id": "var",
              "cnt": "P"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.subst-prod"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            [
              {
                "id": "prop",
                "cnt": "let"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "var",
              "cnt": "P"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi: subst-prod:fail\", line 39, column 0, character 1505:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error-w-data"
            },
            {
              "id": "string",
              "cnt": "subst-prod: not a product"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.subst-prod"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "discard"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 44, column 0, character 1661:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.subst-fun"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 45, column 0, character 1688:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.subst-fun"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            [
              {
                "id": "var",
                "cnt": "F"
              },
              {
                "id": "var",
                "cnt": "X"
              }
            ],
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.subst-fun"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            [
              {
                "id": "prop",
                "cnt": "fun"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 46, column 0, character 1755:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.subst-fun"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            [
              {
                "id": "var",
                "cnt": "F"
              },
              {
                "id": "var",
                "cnt": "X"
              }
            ],
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.subst-fun"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            [
              {
                "id": "prop",
                "cnt": "let"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi: subst-fun:fail\", line 47, column 0, character 1820:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error-w-data"
            },
            {
              "id": "string",
              "cnt": "subst-fun: not a lambda"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.subst-fun"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "discard"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 52, column 0, character 1961:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "coq.prod-R-fun"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "F"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  [
                    {
                      "id": "var",
                      "cnt": "R"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ]
                ]
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.prod-R-fun"
            },
            [
              {
                "id": "prop",
                "cnt": "prod"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "fun"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "R"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 53, column 0, character 2041:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "coq.prod-R-fun"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "F"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  [
                    {
                      "id": "var",
                      "cnt": "R"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ]
                ]
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.prod-R-fun"
            },
            [
              {
                "id": "prop",
                "cnt": "let"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "B"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "let"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "B"
              },
              {
                "id": "var",
                "cnt": "R"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 54, column 0, character 2124:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.prod-R-fun"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 57, column 0, character 2180:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "coq.prod->fun"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "F"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  [
                    {
                      "id": "var",
                      "cnt": "R"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ]
                ]
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.prod->fun"
            },
            [
              {
                "id": "prop",
                "cnt": "prod"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "fun"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "R"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 58, column 0, character 2258:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "coq.prod->fun"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "F"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  [
                    {
                      "id": "var",
                      "cnt": "R"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ]
                ]
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.prod->fun"
            },
            [
              {
                "id": "prop",
                "cnt": "let"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "B"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "let"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "B"
              },
              {
                "id": "var",
                "cnt": "R"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 59, column 0, character 2339:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.prod->fun"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 62, column 0, character 2395:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "coq.count-prods"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "B"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  {
                    "id": "var",
                    "cnt": "M"
                  }
                ]
              ]
            }
          },
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "+"
                  },
                  {
                    "id": "var",
                    "cnt": "M"
                  },
                  {
                    "id": "string",
                    "cnt": "1"
                  }
                ]
              }
            ]
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.count-prods"
            },
            [
              {
                "id": "prop",
                "cnt": "prod"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "B"
              }
            ],
            {
              "id": "var",
              "cnt": "N"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 63, column 0, character 2477:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "coq.count-prods"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "B"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  {
                    "id": "var",
                    "cnt": "N"
                  }
                ]
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.count-prods"
            },
            [
              {
                "id": "prop",
                "cnt": "let"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "B"
              }
            ],
            {
              "id": "var",
              "cnt": "N"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi: count-prod:end\", line 64, column 0, character 2548:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.count-prods"
            },
            {
              "id": "discard"
            },
            {
              "id": "string",
              "cnt": "0"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 68, column 0, character 2636:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.mk-n-holes"
            },
            {
              "id": "string",
              "cnt": "0"
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 69, column 0, character 2663:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "M"
              },
              [
                {
                  "id": "prop",
                  "cnt": "-"
                },
                {
                  "id": "var",
                  "cnt": "N"
                },
                {
                  "id": "string",
                  "cnt": "1"
                }
              ]
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "coq.mk-n-holes"
            },
            {
              "id": "var",
              "cnt": "M"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.mk-n-holes"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "HOLE_"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "R"
                  }
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 72, column 0, character 2783:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.safe-dest-app"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "HD"
            },
            {
              "id": "var",
              "cnt": "ARGS"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.append"
            },
            {
              "id": "var",
              "cnt": "ARGS"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "AllArgs"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.safe-dest-app"
            },
            [
              {
                "id": "prop",
                "cnt": "app"
              },
              {
                "id": "list",
                "cnt": [
                  {
                    "l": [
                      {
                        "id": "var",
                        "cnt": "X"
                      }
                    ],
                    "tl": {
                      "id": "var",
                      "cnt": "XS"
                    }
                  }
                ]
              }
            ],
            {
              "id": "var",
              "cnt": "HD"
            },
            {
              "id": "var",
              "cnt": "AllArgs"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 74, column 0, character 2886:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.safe-dest-app"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 77, column 0, character 2958:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.mk-app"
            },
            {
              "id": "var",
              "cnt": "HD"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "HD"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 78, column 0, character 2984:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.append"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "Args"
            },
            {
              "id": "var",
              "cnt": "LArgs"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.mk-app"
            },
            [
              {
                "id": "prop",
                "cnt": "app"
              },
              {
                "id": "var",
                "cnt": "L"
              }
            ],
            {
              "id": "var",
              "cnt": "Args"
            },
            [
              {
                "id": "prop",
                "cnt": "app"
              },
              {
                "id": "var",
                "cnt": "LArgs"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 79, column 0, character 3047:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.mk-app"
            },
            [
              {
                "id": "var",
                "cnt": "F"
              },
              {
                "id": "var",
                "cnt": "A"
              }
            ],
            {
              "id": "var",
              "cnt": "Args"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.mk-app"
            },
            [
              {
                "id": "prop",
                "cnt": "fun"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "A"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "Args"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 80, column 0, character 3112:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.mk-app"
            },
            [
              {
                "id": "var",
                "cnt": "F"
              },
              {
                "id": "var",
                "cnt": "A"
              }
            ],
            {
              "id": "var",
              "cnt": "Args"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.mk-app"
            },
            [
              {
                "id": "prop",
                "cnt": "let"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "A"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "var",
              "cnt": "Args"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 81, column 0, character 3175:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.mk-app"
            },
            {
              "id": "var",
              "cnt": "HD"
            },
            {
              "id": "var",
              "cnt": "Args"
            },
            [
              {
                "id": "prop",
                "cnt": "app"
              },
              {
                "id": "list",
                "cnt": [
                  {
                    "l": [
                      {
                        "id": "var",
                        "cnt": "HD"
                      }
                    ],
                    "tl": {
                      "id": "var",
                      "cnt": "Args"
                    }
                  }
                ]
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 84, column 0, character 3262:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.mk-app-uvar"
            },
            {
              "id": "var",
              "cnt": "HD"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "HD"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 85, column 0, character 3293:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.unsafe-cast"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "K'"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.mk-app-uvar"
            },
            [
              {
                "id": "var",
                "cnt": "K'"
              },
              {
                "id": "var",
                "cnt": "A"
              }
            ],
            {
              "id": "var",
              "cnt": "Args"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.mk-app-uvar"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                {
                  "id": "prop",
                  "cnt": "uvar"
                },
                {
                  "id": "var",
                  "cnt": "K"
                }
              ]
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "A"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "Args"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 91, column 0, character 3622:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.mk-eta"
            },
            {
              "id": "string",
              "cnt": "0"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "B"
            },
            {
              "id": "var",
              "cnt": "B"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 92, column 0, character 3647:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "N<sub>1</sub>"
              },
              [
                {
                  "id": "prop",
                  "cnt": "-"
                },
                {
                  "id": "var",
                  "cnt": "N"
                },
                {
                  "id": "string",
                  "cnt": "1"
                }
              ]
            ]
          },
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "coq.mk-eta"
                  },
                  {
                    "id": "var",
                    "cnt": "N<sub>1</sub>"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "P"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  [
                    {
                      "id": "var",
                      "cnt": "F"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  [
                    {
                      "id": "var",
                      "cnt": "F<sub>1</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ]
                ]
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.mk-eta"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            [
              {
                "id": "prop",
                "cnt": "prod"
              },
              {
                "id": "var",
                "cnt": "Name"
              },
              {
                "id": "var",
                "cnt": "Ty"
              },
              {
                "id": "var",
                "cnt": "P"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "fun"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "fun"
              },
              {
                "id": "var",
                "cnt": "Name"
              },
              {
                "id": "var",
                "cnt": "Ty"
              },
              {
                "id": "var",
                "cnt": "F<sub>1</sub>"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 94, column 0, character 3768:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "N<sub>1</sub>"
              },
              [
                {
                  "id": "prop",
                  "cnt": "-"
                },
                {
                  "id": "var",
                  "cnt": "N"
                },
                {
                  "id": "string",
                  "cnt": "1"
                }
              ]
            ]
          },
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "coq.mk-app"
                  },
                  {
                    "id": "var",
                    "cnt": "B"
                  },
                  {
                    "id": "list",
                    "cnt": [
                      {
                        "l": [
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          }
                        ]
                      }
                    ]
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "Spilled<sub>1</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ]
                ],
                [
                  {
                    "id": "prop",
                    "cnt": "coq.mk-eta"
                  },
                  {
                    "id": "var",
                    "cnt": "N<sub>1</sub>"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "P"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  [
                    {
                      "id": "var",
                      "cnt": "Spilled<sub>1</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  [
                    {
                      "id": "var",
                      "cnt": "B<sub>1</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ]
                ]
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.mk-eta"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            [
              {
                "id": "prop",
                "cnt": "prod"
              },
              {
                "id": "var",
                "cnt": "Name"
              },
              {
                "id": "var",
                "cnt": "Ty"
              },
              {
                "id": "var",
                "cnt": "P"
              }
            ],
            {
              "id": "var",
              "cnt": "B"
            },
            [
              {
                "id": "prop",
                "cnt": "fun"
              },
              {
                "id": "var",
                "cnt": "Name"
              },
              {
                "id": "var",
                "cnt": "Ty"
              },
              {
                "id": "var",
                "cnt": "B<sub>1</sub>"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi: mk-eta:end\", line 96, column 0, character 3902:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.mk-eta"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "B"
            },
            {
              "id": "var",
              "cnt": "B"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 100, column 0, character 3989:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            {
              "id": "var",
              "cnt": "Ty"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            [
              {
                "id": "prop",
                "cnt": "prod"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "Src"
              },
              {
                "id": "var",
                "cnt": "Tgt"
              }
            ],
            {
              "id": "prop",
              "cnt": "[]"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "coq.mk-app"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "Hole_"
                    }
                  ]
                }
              ]
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "=>"
                    },
                    [
                      {
                        "id": "prop",
                        "cnt": "decl"
                      },
                      {
                        "id": "var",
                        "cnt": "x<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "N"
                      },
                      {
                        "id": "var",
                        "cnt": "Src"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.saturate"
                      },
                      [
                        {
                          "id": "var",
                          "cnt": "Tgt"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ],
                      {
                        "id": "var",
                        "cnt": "R"
                      },
                      {
                        "id": "var",
                        "cnt": "O"
                      }
                    ]
                  ]
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.saturate"
            },
            {
              "id": "var",
              "cnt": "Ty"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "O"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 103, column 0, character 4118:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.saturate"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi: copy:start\", line 109, column 0, character 4313:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "name"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ],
          {
            "id": "cut"
          },
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "="
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "Y"
              }
            ]
          },
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 111, column 0, character 4403:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "global"
                  },
                  {
                    "id": "discard"
                  }
                ],
                {
                  "id": "var",
                  "cnt": "C"
                }
              ]
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 112, column 0, character 4432:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "pglobal"
                  },
                  {
                    "id": "discard"
                  },
                  {
                    "id": "discard"
                  }
                ],
                {
                  "id": "var",
                  "cnt": "C"
                }
              ]
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 113, column 0, character 4464:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "sort"
                  },
                  {
                    "id": "discard"
                  }
                ],
                {
                  "id": "var",
                  "cnt": "C"
                }
              ]
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 114, column 0, character 4491:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "copy"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "F"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  [
                    {
                      "id": "var",
                      "cnt": "F<sub>1</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ]
                ]
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            [
              {
                "id": "prop",
                "cnt": "fun"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "fun"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "F<sub>1</sub>"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 116, column 0, character 4566:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "B"
            },
            {
              "id": "var",
              "cnt": "B<sub>1</sub>"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "copy"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "F"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  [
                    {
                      "id": "var",
                      "cnt": "F<sub>1</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ]
                ]
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            [
              {
                "id": "prop",
                "cnt": "let"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "B"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "let"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "B<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "F<sub>1</sub>"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 118, column 0, character 4657:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "copy"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "F"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  [
                    {
                      "id": "var",
                      "cnt": "F<sub>1</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ]
                ]
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            [
              {
                "id": "prop",
                "cnt": "prod"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "prod"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "F<sub>1</sub>"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 120, column 0, character 4736:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "L<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            [
              {
                "id": "prop",
                "cnt": "app"
              },
              {
                "id": "var",
                "cnt": "L"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "app"
              },
              {
                "id": "var",
                "cnt": "L<sub>1</sub>"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 121, column 0, character 4779:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "Ty"
            },
            {
              "id": "var",
              "cnt": "Ty<sub>1</sub>"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "copy"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "F"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  [
                    {
                      "id": "var",
                      "cnt": "F<sub>1</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ]
                ]
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            [
              {
                "id": "prop",
                "cnt": "fix"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "Rno"
              },
              {
                "id": "var",
                "cnt": "Ty"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "fix"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "Rno"
              },
              {
                "id": "var",
                "cnt": "Ty<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "F<sub>1</sub>"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 123, column 0, character 4866:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "Rty"
            },
            {
              "id": "var",
              "cnt": "Rty<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map"
            },
            {
              "id": "var",
              "cnt": "B"
            },
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "B<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            [
              {
                "id": "prop",
                "cnt": "match"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "Rty"
              },
              {
                "id": "var",
                "cnt": "B"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "match"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "Rty<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "B<sub>1</sub>"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 125, column 0, character 4955:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "primitive"
                  },
                  {
                    "id": "discard"
                  }
                ],
                {
                  "id": "var",
                  "cnt": "C"
                }
              ]
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 126, column 0, character 4987:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "var"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "std.map"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "L<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.mk-app-uvar"
            },
            {
              "id": "var",
              "cnt": "M"
            },
            {
              "id": "var",
              "cnt": "L<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "W"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "uvar"
                  },
                  {
                    "id": "var",
                    "cnt": "M"
                  },
                  {
                    "id": "var",
                    "cnt": "L"
                  }
                ],
                {
                  "id": "var",
                  "cnt": "X"
                }
              ]
            },
            {
              "id": "var",
              "cnt": "W"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 128, column 0, character 5087:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "L<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            [
              {
                "id": "prop",
                "cnt": "uvar"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "L"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "uvar"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "L<sub>1</sub>"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 131, column 0, character 5169:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "X<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy-ctx-item"
            },
            [
              {
                "id": "prop",
                "cnt": "decl"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "decl"
              },
              {
                "id": "var",
                "cnt": "X<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 132, column 0, character 5236:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "X<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "B"
            },
            {
              "id": "var",
              "cnt": "B<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy-ctx-item"
            },
            [
              {
                "id": "prop",
                "cnt": "def"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "B"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "def"
              },
              {
                "id": "var",
                "cnt": "X<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "B<sub>1</sub>"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 136, column 0, character 5354:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "copy-arity"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "R"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  [
                    {
                      "id": "var",
                      "cnt": "R<sub>1</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ]
                ]
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy-arity"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "IMP"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "R"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "IMP"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "R<sub>1</sub>"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 138, column 0, character 5460:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy-arity"
            },
            [
              {
                "id": "prop",
                "cnt": "arity"
              },
              {
                "id": "var",
                "cnt": "T"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "arity"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 141, column 0, character 5553:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "Ty"
            },
            {
              "id": "var",
              "cnt": "Ty<sub>1</sub>"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "exists",
              "names": [
                {
                  "id": "var",
                  "cnt": "X<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "coq.id->name"
                  },
                  {
                    "id": "var",
                    "cnt": "ID"
                  },
                  {
                    "id": "var",
                    "cnt": "X<sub>1</sub>"
                  }
                ],
                {
                  "id": "quantification",
                  "cnt": {
                    "type": "forall",
                    "names": [
                      {
                        "id": "var",
                        "cnt": "x<sub>2</sub>"
                      }
                    ],
                    "body": [
                      {
                        "id": "clause",
                        "isInfix": 1,
                        "cnt": [
                          {
                            "name": "=>"
                          },
                          [
                            {
                              "id": "prop",
                              "cnt": "decl"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>2</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "X<sub>1</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "Ty<sub>1</sub>"
                            }
                          ],
                          [
                            {
                              "id": "prop",
                              "cnt": "copy-indt-decl"
                            },
                            [
                              {
                                "id": "var",
                                "cnt": "D"
                              },
                              {
                                "id": "var",
                                "cnt": "x<sub>2</sub>"
                              }
                            ],
                            [
                              {
                                "id": "var",
                                "cnt": "D<sub>1</sub>"
                              },
                              {
                                "id": "var",
                                "cnt": "x<sub>2</sub>"
                              }
                            ]
                          ]
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy-indt-decl"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "I"
              },
              {
                "id": "var",
                "cnt": "Ty"
              },
              {
                "id": "var",
                "cnt": "D"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "I"
              },
              {
                "id": "var",
                "cnt": "Ty<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "D<sub>1</sub>"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 144, column 0, character 5687:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "copy-arity"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "exists",
              "names": [
                {
                  "id": "var",
                  "cnt": "X<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "coq.id->name"
                  },
                  {
                    "id": "var",
                    "cnt": "ID"
                  },
                  {
                    "id": "var",
                    "cnt": "X<sub>1</sub>"
                  }
                ],
                [
                  {
                    "id": "prop",
                    "cnt": "coq.arity->term"
                  },
                  {
                    "id": "var",
                    "cnt": "A<sub>1</sub>"
                  },
                  {
                    "id": "var",
                    "cnt": "T"
                  }
                ],
                {
                  "id": "quantification",
                  "cnt": {
                    "type": "forall",
                    "names": [
                      {
                        "id": "var",
                        "cnt": "x<sub>2</sub>"
                      }
                    ],
                    "body": [
                      {
                        "id": "clause",
                        "isInfix": 1,
                        "cnt": [
                          {
                            "name": "=>"
                          },
                          [
                            {
                              "id": "prop",
                              "cnt": "decl"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>2</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "X<sub>1</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "T"
                            }
                          ],
                          [
                            {
                              "id": "prop",
                              "cnt": "std.map"
                            },
                            [
                              {
                                "id": "var",
                                "cnt": "D"
                              },
                              {
                                "id": "var",
                                "cnt": "x<sub>2</sub>"
                              }
                            ],
                            {
                              "id": "prop",
                              "cnt": "copy-constructor"
                            },
                            [
                              {
                                "id": "var",
                                "cnt": "D<sub>1</sub>"
                              },
                              {
                                "id": "var",
                                "cnt": "x<sub>2</sub>"
                              }
                            ]
                          ]
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy-indt-decl"
            },
            [
              {
                "id": "prop",
                "cnt": "inductive"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "CO"
              },
              {
                "id": "var",
                "cnt": "A"
              },
              {
                "id": "var",
                "cnt": "D"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "inductive"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "CO"
              },
              {
                "id": "var",
                "cnt": "A<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "D<sub>1</sub>"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 147, column 0, character 5834:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "copy-fields"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "F<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy-indt-decl"
            },
            [
              {
                "id": "prop",
                "cnt": "record"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "IDK"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "record"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "IDK"
              },
              {
                "id": "var",
                "cnt": "F<sub>1</sub>"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 152, column 0, character 5975:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy-fields"
            },
            {
              "id": "prop",
              "cnt": "end-record"
            },
            {
              "id": "prop",
              "cnt": "end-record"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 153, column 0, character 6010:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "exists",
              "names": [
                {
                  "id": "var",
                  "cnt": "X<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "coq.id->name"
                  },
                  {
                    "id": "var",
                    "cnt": "ID"
                  },
                  {
                    "id": "var",
                    "cnt": "X<sub>1</sub>"
                  }
                ],
                {
                  "id": "quantification",
                  "cnt": {
                    "type": "forall",
                    "names": [
                      {
                        "id": "var",
                        "cnt": "x<sub>2</sub>"
                      }
                    ],
                    "body": [
                      {
                        "id": "clause",
                        "isInfix": 1,
                        "cnt": [
                          {
                            "name": "=>"
                          },
                          [
                            {
                              "id": "prop",
                              "cnt": "decl"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>2</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "X<sub>1</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "T<sub>1</sub>"
                            }
                          ],
                          [
                            {
                              "id": "prop",
                              "cnt": "copy-fields"
                            },
                            [
                              {
                                "id": "var",
                                "cnt": "F"
                              },
                              {
                                "id": "var",
                                "cnt": "x<sub>2</sub>"
                              }
                            ],
                            [
                              {
                                "id": "var",
                                "cnt": "F<sub>1</sub>"
                              },
                              {
                                "id": "var",
                                "cnt": "x<sub>2</sub>"
                              }
                            ]
                          ]
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy-fields"
            },
            [
              {
                "id": "prop",
                "cnt": "field"
              },
              {
                "id": "var",
                "cnt": "Att"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "field"
              },
              {
                "id": "var",
                "cnt": "Att"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "F<sub>1</sub>"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 158, column 0, character 6178:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "copy-arity"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "copy-constructor"
            },
            [
              {
                "id": "prop",
                "cnt": "constructor"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "A"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "constructor"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "A<sub>1</sub>"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi: fold-map:start\", line 161, column 0, character 6295:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "name"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ],
          {
            "id": "cut"
          },
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "="
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "Y"
              }
            ]
          },
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "Y"
            },
            {
              "id": "var",
              "cnt": "A"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 163, column 0, character 6405:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "global"
                  },
                  {
                    "id": "discard"
                  }
                ],
                {
                  "id": "var",
                  "cnt": "C"
                }
              ]
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "A"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 164, column 0, character 6442:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "pglobal"
                  },
                  {
                    "id": "discard"
                  },
                  {
                    "id": "discard"
                  }
                ],
                {
                  "id": "var",
                  "cnt": "C"
                }
              ]
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "A"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 165, column 0, character 6482:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "sort"
                  },
                  {
                    "id": "discard"
                  }
                ],
                {
                  "id": "var",
                  "cnt": "C"
                }
              ]
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "A"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 166, column 0, character 6517:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "fold-map"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "F"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  {
                    "id": "var",
                    "cnt": "A<sub>1</sub>"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "F<sub>1</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  {
                    "id": "var",
                    "cnt": "A<sub>2</sub>"
                  }
                ]
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            [
              {
                "id": "prop",
                "cnt": "fun"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "var",
              "cnt": "A"
            },
            [
              {
                "id": "prop",
                "cnt": "fun"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "F<sub>1</sub>"
              }
            ],
            {
              "id": "var",
              "cnt": "A<sub>2</sub>"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 168, column 0, character 6620:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "var",
              "cnt": "B"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "B<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "A<sub>2</sub>"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "fold-map"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "F"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  {
                    "id": "var",
                    "cnt": "A<sub>2</sub>"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "F<sub>1</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  {
                    "id": "var",
                    "cnt": "A<sub>3</sub>"
                  }
                ]
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            [
              {
                "id": "prop",
                "cnt": "let"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "B"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "var",
              "cnt": "A"
            },
            [
              {
                "id": "prop",
                "cnt": "let"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "B<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "F<sub>1</sub>"
              }
            ],
            {
              "id": "var",
              "cnt": "A<sub>3</sub>"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 170, column 0, character 6749:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "fold-map"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "F"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  {
                    "id": "var",
                    "cnt": "A<sub>1</sub>"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "F<sub>1</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  {
                    "id": "var",
                    "cnt": "A<sub>2</sub>"
                  }
                ]
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            [
              {
                "id": "prop",
                "cnt": "prod"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "var",
              "cnt": "A"
            },
            [
              {
                "id": "prop",
                "cnt": "prod"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "F<sub>1</sub>"
              }
            ],
            {
              "id": "var",
              "cnt": "A<sub>2</sub>"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 172, column 0, character 6856:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fold-map"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "var",
              "cnt": "L<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            [
              {
                "id": "prop",
                "cnt": "app"
              },
              {
                "id": "var",
                "cnt": "L"
              }
            ],
            {
              "id": "var",
              "cnt": "A"
            },
            [
              {
                "id": "prop",
                "cnt": "app"
              },
              {
                "id": "var",
                "cnt": "L<sub>1</sub>"
              }
            ],
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 173, column 0, character 6926:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "var",
              "cnt": "Ty"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "Ty<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "fold-map"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "F"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  {
                    "id": "var",
                    "cnt": "A<sub>1</sub>"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "F<sub>1</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  {
                    "id": "var",
                    "cnt": "A<sub>2</sub>"
                  }
                ]
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            [
              {
                "id": "prop",
                "cnt": "fix"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "Rno"
              },
              {
                "id": "var",
                "cnt": "Ty"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "var",
              "cnt": "A"
            },
            [
              {
                "id": "prop",
                "cnt": "fix"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "Rno"
              },
              {
                "id": "var",
                "cnt": "Ty<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "F<sub>1</sub>"
              }
            ],
            {
              "id": "var",
              "cnt": "A<sub>2</sub>"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 175, column 0, character 7041:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "var",
              "cnt": "Rty"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "Rty<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "A<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.fold-map"
            },
            {
              "id": "var",
              "cnt": "B"
            },
            {
              "id": "var",
              "cnt": "A<sub>2</sub>"
            },
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "var",
              "cnt": "B<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "A<sub>3</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            [
              {
                "id": "prop",
                "cnt": "match"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "Rty"
              },
              {
                "id": "var",
                "cnt": "B"
              }
            ],
            {
              "id": "var",
              "cnt": "A"
            },
            [
              {
                "id": "prop",
                "cnt": "match"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "Rty<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "B<sub>1</sub>"
              }
            ],
            {
              "id": "var",
              "cnt": "A<sub>3</sub>"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 177, column 0, character 7177:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "primitive"
                  },
                  {
                    "id": "discard"
                  }
                ],
                {
                  "id": "var",
                  "cnt": "C"
                }
              ]
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "A"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 178, column 0, character 7217:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "var"
            },
            {
              "id": "var",
              "cnt": "X"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "std.fold-map"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "var",
              "cnt": "L<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.mk-app-uvar"
            },
            {
              "id": "var",
              "cnt": "M"
            },
            {
              "id": "var",
              "cnt": "L<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "W"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "uvar"
                  },
                  {
                    "id": "var",
                    "cnt": "M"
                  },
                  {
                    "id": "var",
                    "cnt": "L"
                  }
                ],
                {
                  "id": "var",
                  "cnt": "X"
                }
              ]
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "W"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 180, column 0, character 7344:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fold-map"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "var",
              "cnt": "L<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            [
              {
                "id": "prop",
                "cnt": "uvar"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "L"
              }
            ],
            {
              "id": "var",
              "cnt": "A"
            },
            [
              {
                "id": "prop",
                "cnt": "uvar"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "L<sub>1</sub>"
              }
            ],
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 183, column 0, character 7467:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "X<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "A<sub>2</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "fold-map-ctx-item"
            },
            [
              {
                "id": "prop",
                "cnt": "decl"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              }
            ],
            {
              "id": "var",
              "cnt": "A"
            },
            [
              {
                "id": "prop",
                "cnt": "decl"
              },
              {
                "id": "var",
                "cnt": "X<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              }
            ],
            {
              "id": "var",
              "cnt": "A<sub>2</sub>"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 184, column 0, character 7562:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "X<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "A<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "var",
              "cnt": "B"
            },
            {
              "id": "var",
              "cnt": "A<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "B<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "A<sub>3</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "fold-map-ctx-item"
            },
            [
              {
                "id": "prop",
                "cnt": "def"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "B"
              }
            ],
            {
              "id": "var",
              "cnt": "A"
            },
            [
              {
                "id": "prop",
                "cnt": "def"
              },
              {
                "id": "var",
                "cnt": "X<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "B<sub>1</sub>"
              }
            ],
            {
              "id": "var",
              "cnt": "A<sub>3</sub>"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 188, column 0, character 7733:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "fold-map-arity"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "R"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  {
                    "id": "var",
                    "cnt": "A<sub>1</sub>"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "R<sub>1</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  {
                    "id": "var",
                    "cnt": "A<sub>2</sub>"
                  }
                ]
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "fold-map-arity"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "IMP"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "R"
              }
            ],
            {
              "id": "var",
              "cnt": "A"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "IMP"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "R<sub>1</sub>"
              }
            ],
            {
              "id": "var",
              "cnt": "A<sub>2</sub>"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 190, column 0, character 7867:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "fold-map"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "fold-map-arity"
            },
            [
              {
                "id": "prop",
                "cnt": "arity"
              },
              {
                "id": "var",
                "cnt": "T"
              }
            ],
            {
              "id": "var",
              "cnt": "A"
            },
            [
              {
                "id": "prop",
                "cnt": "arity"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              }
            ],
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 198, column 0, character 8158:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.upoly-decl->attribute"
            },
            [
              {
                "id": "prop",
                "cnt": "upoly-decl"
              },
              {
                "id": "var",
                "cnt": "A"
              },
              {
                "id": "var",
                "cnt": "B"
              },
              {
                "id": "var",
                "cnt": "C"
              },
              {
                "id": "var",
                "cnt": "D"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "get-option"
              },
              {
                "id": "string",
                "cnt": "coq:udecl"
              },
              [
                {
                  "id": "prop",
                  "cnt": "upoly-decl"
                },
                {
                  "id": "var",
                  "cnt": "A"
                },
                {
                  "id": "var",
                  "cnt": "B"
                },
                {
                  "id": "var",
                  "cnt": "C"
                },
                {
                  "id": "var",
                  "cnt": "D"
                }
              ]
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 199, column 0, character 8224:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.upoly-decl->attribute"
            },
            [
              {
                "id": "prop",
                "cnt": "upoly-decl-cumul"
              },
              {
                "id": "var",
                "cnt": "A"
              },
              {
                "id": "var",
                "cnt": "B"
              },
              {
                "id": "var",
                "cnt": "C"
              },
              {
                "id": "var",
                "cnt": "D"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "get-option"
              },
              {
                "id": "string",
                "cnt": "coq:udecl-cumul"
              },
              [
                {
                  "id": "prop",
                  "cnt": "upoly-decl-cumul"
                },
                {
                  "id": "var",
                  "cnt": "A"
                },
                {
                  "id": "var",
                  "cnt": "B"
                },
                {
                  "id": "var",
                  "cnt": "C"
                },
                {
                  "id": "var",
                  "cnt": "D"
                }
              ]
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 202, column 0, character 8372:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.do!"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "std.map"
                      },
                      {
                        "id": "var",
                        "cnt": "VS"
                      },
                      {
                        "id": "prop",
                        "cnt": "coq.univ.variable.constraints"
                      },
                      {
                        "id": "var",
                        "cnt": "ExtraL"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "std.flatten"
                      },
                      {
                        "id": "var",
                        "cnt": "ExtraL"
                      },
                      {
                        "id": "var",
                        "cnt": "Extra"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "std.filter"
                      },
                      {
                        "id": "var",
                        "cnt": "Extra"
                      },
                      {
                        "id": "quantification",
                        "cnt": {
                          "type": "anonymousForall",
                          "names": [
                            {
                              "id": "var",
                              "cnt": "x<sub>1</sub>"
                            }
                          ],
                          "body": [
                            [
                              {
                                "id": "prop",
                                "cnt": "not"
                              },
                              [
                                {
                                  "id": "prop",
                                  "cnt": "std.mem"
                                },
                                {
                                  "id": "var",
                                  "cnt": "CS"
                                },
                                {
                                  "id": "var",
                                  "cnt": "x<sub>1</sub>"
                                }
                              ]
                            ]
                          ]
                        }
                      },
                      {
                        "id": "var",
                        "cnt": "New"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "std.append"
                      },
                      {
                        "id": "var",
                        "cnt": "CS"
                      },
                      {
                        "id": "var",
                        "cnt": "New"
                      },
                      {
                        "id": "var",
                        "cnt": "CS<sub>1</sub>"
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.upoly-decl.complete-constraints"
            },
            [
              {
                "id": "prop",
                "cnt": "upoly-decl"
              },
              {
                "id": "var",
                "cnt": "VS"
              },
              {
                "id": "var",
                "cnt": "LV"
              },
              {
                "id": "var",
                "cnt": "CS"
              },
              {
                "id": "var",
                "cnt": "LC"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "upoly-decl"
              },
              {
                "id": "var",
                "cnt": "VS"
              },
              {
                "id": "var",
                "cnt": "LV"
              },
              {
                "id": "var",
                "cnt": "CS<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "LC"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 209, column 0, character 8712:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.do!"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "std.map"
                      },
                      {
                        "id": "var",
                        "cnt": "VS"
                      },
                      {
                        "id": "prop",
                        "cnt": "coq.upoly-decl-cumul.complete-constraints.aux"
                      },
                      {
                        "id": "var",
                        "cnt": "ExtraL"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "std.flatten"
                      },
                      {
                        "id": "var",
                        "cnt": "ExtraL"
                      },
                      {
                        "id": "var",
                        "cnt": "Extra"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "std.filter"
                      },
                      {
                        "id": "var",
                        "cnt": "Extra"
                      },
                      {
                        "id": "quantification",
                        "cnt": {
                          "type": "anonymousForall",
                          "names": [
                            {
                              "id": "var",
                              "cnt": "x<sub>1</sub>"
                            }
                          ],
                          "body": [
                            [
                              {
                                "id": "prop",
                                "cnt": "not"
                              },
                              [
                                {
                                  "id": "prop",
                                  "cnt": "std.mem"
                                },
                                {
                                  "id": "var",
                                  "cnt": "CS"
                                },
                                {
                                  "id": "var",
                                  "cnt": "x<sub>1</sub>"
                                }
                              ]
                            ]
                          ]
                        }
                      },
                      {
                        "id": "var",
                        "cnt": "New"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "std.append"
                      },
                      {
                        "id": "var",
                        "cnt": "CS"
                      },
                      {
                        "id": "var",
                        "cnt": "New"
                      },
                      {
                        "id": "var",
                        "cnt": "CS<sub>1</sub>"
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.upoly-decl-cumul.complete-constraints"
            },
            [
              {
                "id": "prop",
                "cnt": "upoly-decl-cumul"
              },
              {
                "id": "var",
                "cnt": "VS"
              },
              {
                "id": "var",
                "cnt": "LV"
              },
              {
                "id": "var",
                "cnt": "CS"
              },
              {
                "id": "var",
                "cnt": "LC"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "upoly-decl-cumul"
              },
              {
                "id": "var",
                "cnt": "VS"
              },
              {
                "id": "var",
                "cnt": "LV"
              },
              {
                "id": "var",
                "cnt": "CS<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "LC"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 215, column 0, character 8999:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.univ.variable.constraints"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "CS"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.upoly-decl-cumul.complete-constraints.aux"
            },
            [
              {
                "id": "prop",
                "cnt": "auto"
              },
              {
                "id": "var",
                "cnt": "V"
              }
            ],
            {
              "id": "var",
              "cnt": "CS"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 216, column 0, character 9096:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.univ.variable.constraints"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "CS"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.upoly-decl-cumul.complete-constraints.aux"
            },
            [
              {
                "id": "prop",
                "cnt": "covariant"
              },
              {
                "id": "var",
                "cnt": "V"
              }
            ],
            {
              "id": "var",
              "cnt": "CS"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 217, column 0, character 9198:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.univ.variable.constraints"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "CS"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.upoly-decl-cumul.complete-constraints.aux"
            },
            [
              {
                "id": "prop",
                "cnt": "invariant"
              },
              {
                "id": "var",
                "cnt": "V"
              }
            ],
            {
              "id": "var",
              "cnt": "CS"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 218, column 0, character 9300:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.univ.variable.constraints"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "CS"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.upoly-decl-cumul.complete-constraints.aux"
            },
            [
              {
                "id": "prop",
                "cnt": "irrelevant"
              },
              {
                "id": "var",
                "cnt": "V"
              }
            ],
            {
              "id": "var",
              "cnt": "CS"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 224, column 0, character 9542:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.build-indt-decl-aux"
            },
            {
              "id": "var",
              "cnt": "GR"
            },
            {
              "id": "var",
              "cnt": "IsInd"
            },
            {
              "id": "var",
              "cnt": "Pno"
            },
            {
              "id": "var",
              "cnt": "UPno"
            },
            {
              "id": "var",
              "cnt": "Arity"
            },
            {
              "id": "var",
              "cnt": "Kns"
            },
            {
              "id": "var",
              "cnt": "Ktys"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "Decl"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.build-indt-decl"
            },
            {
              "id": "var",
              "cnt": "GR"
            },
            {
              "id": "var",
              "cnt": "IsInd"
            },
            {
              "id": "var",
              "cnt": "Pno"
            },
            {
              "id": "var",
              "cnt": "UPno"
            },
            {
              "id": "var",
              "cnt": "Arity"
            },
            {
              "id": "var",
              "cnt": "Kns"
            },
            {
              "id": "var",
              "cnt": "Ktys"
            },
            {
              "id": "var",
              "cnt": "Decl"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 229, column 0, character 9823:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.term->arity"
            },
            {
              "id": "var",
              "cnt": "Ty"
            },
            {
              "id": "var",
              "cnt": "NUPno"
            },
            {
              "id": "var",
              "cnt": "Arity"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map"
            },
            {
              "id": "var",
              "cnt": "KtysNu"
            },
            {
              "id": "quantification",
              "cnt": {
                "type": "anonymousForall",
                "names": [
                  {
                    "id": "var",
                    "cnt": "x<sub>1</sub>"
                  }
                ],
                "body": [
                  [
                    {
                      "id": "prop",
                      "cnt": "coq.term->arity"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "NUPno"
                    }
                  ]
                ]
              }
            },
            {
              "id": "var",
              "cnt": "Ktys"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.rev"
            },
            {
              "id": "var",
              "cnt": "Params"
            },
            {
              "id": "var",
              "cnt": "ParamsR"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "="
                    },
                    [
                      {
                        "id": "var",
                        "cnt": "Sub"
                      },
                      {
                        "id": "var",
                        "cnt": "x<sub>1</sub>"
                      }
                    ],
                    {
                      "id": "list",
                      "cnt": [
                        {
                          "l": [
                            {
                              "id": "quantification",
                              "cnt": {
                                "type": "forall",
                                "names": [
                                  {
                                    "id": "var",
                                    "cnt": "x<sub>2</sub>"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "x<sub>3</sub>"
                                  }
                                ],
                                "body": [
                                  {
                                    "hyp": [
                                      [
                                        {
                                          "id": "prop",
                                          "cnt": "std.appendR"
                                        },
                                        {
                                          "id": "var",
                                          "cnt": "ParamsR"
                                        },
                                        {
                                          "id": "var",
                                          "cnt": "x<sub>2</sub>"
                                        },
                                        {
                                          "id": "var",
                                          "cnt": "x<sub>3</sub>"
                                        }
                                      ]
                                    ],
                                    "args": [
                                      [
                                        {
                                          "id": "prop",
                                          "cnt": "copy"
                                        },
                                        [
                                          {
                                            "id": "prop",
                                            "cnt": "app"
                                          },
                                          {
                                            "id": "list",
                                            "cnt": [
                                              {
                                                "l": [
                                                  [
                                                    {
                                                      "id": "prop",
                                                      "cnt": "global"
                                                    },
                                                    [
                                                      {
                                                        "id": "prop",
                                                        "cnt": "indt"
                                                      },
                                                      {
                                                        "id": "var",
                                                        "cnt": "GR"
                                                      }
                                                    ]
                                                  ]
                                                ],
                                                "tl": {
                                                  "id": "var",
                                                  "cnt": "x<sub>3</sub>"
                                                }
                                              }
                                            ]
                                          }
                                        ],
                                        [
                                          {
                                            "id": "prop",
                                            "cnt": "app"
                                          },
                                          {
                                            "id": "list",
                                            "cnt": [
                                              {
                                                "l": [
                                                  {
                                                    "id": "var",
                                                    "cnt": "x<sub>1</sub>"
                                                  }
                                                ],
                                                "tl": {
                                                  "id": "var",
                                                  "cnt": "x<sub>2</sub>"
                                                }
                                              }
                                            ]
                                          }
                                        ]
                                      ]
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "id": "quantification",
                              "cnt": {
                                "type": "forall",
                                "names": [
                                  {
                                    "id": "var",
                                    "cnt": "x<sub>2</sub>"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "x<sub>3</sub>"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "x<sub>4</sub>"
                                  }
                                ],
                                "body": [
                                  {
                                    "hyp": [
                                      [
                                        {
                                          "id": "prop",
                                          "cnt": "std.appendR"
                                        },
                                        {
                                          "id": "var",
                                          "cnt": "ParamsR"
                                        },
                                        {
                                          "id": "var",
                                          "cnt": "x<sub>2</sub>"
                                        },
                                        {
                                          "id": "var",
                                          "cnt": "x<sub>3</sub>"
                                        }
                                      ]
                                    ],
                                    "args": [
                                      [
                                        {
                                          "id": "prop",
                                          "cnt": "copy"
                                        },
                                        [
                                          {
                                            "id": "prop",
                                            "cnt": "app"
                                          },
                                          {
                                            "id": "list",
                                            "cnt": [
                                              {
                                                "l": [
                                                  [
                                                    {
                                                      "id": "prop",
                                                      "cnt": "pglobal"
                                                    },
                                                    [
                                                      {
                                                        "id": "prop",
                                                        "cnt": "indt"
                                                      },
                                                      {
                                                        "id": "var",
                                                        "cnt": "GR"
                                                      }
                                                    ],
                                                    {
                                                      "id": "var",
                                                      "cnt": "x<sub>4</sub>"
                                                    }
                                                  ]
                                                ],
                                                "tl": {
                                                  "id": "var",
                                                  "cnt": "x<sub>3</sub>"
                                                }
                                              }
                                            ]
                                          }
                                        ],
                                        [
                                          {
                                            "id": "prop",
                                            "cnt": "app"
                                          },
                                          {
                                            "id": "list",
                                            "cnt": [
                                              {
                                                "l": [
                                                  {
                                                    "id": "var",
                                                    "cnt": "x<sub>1</sub>"
                                                  }
                                                ],
                                                "tl": {
                                                  "id": "var",
                                                  "cnt": "x<sub>2</sub>"
                                                }
                                              }
                                            ]
                                          }
                                        ]
                                      ]
                                    ]
                                  }
                                ]
                              }
                            },
                            {
                              "hyp": [
                                {
                                  "id": "cut"
                                }
                              ],
                              "args": [
                                [
                                  {
                                    "id": "prop",
                                    "cnt": "copy"
                                  },
                                  [
                                    {
                                      "id": "prop",
                                      "cnt": "global"
                                    },
                                    [
                                      {
                                        "id": "prop",
                                        "cnt": "indt"
                                      },
                                      {
                                        "id": "var",
                                        "cnt": "GR"
                                      }
                                    ]
                                  ],
                                  {
                                    "id": "var",
                                    "cnt": "x<sub>1</sub>"
                                  }
                                ]
                              ]
                            },
                            {
                              "id": "quantification",
                              "cnt": {
                                "type": "forall",
                                "names": [
                                  {
                                    "id": "var",
                                    "cnt": "x<sub>2</sub>"
                                  }
                                ],
                                "body": [
                                  {
                                    "hyp": [
                                      {
                                        "id": "cut"
                                      }
                                    ],
                                    "args": [
                                      [
                                        {
                                          "id": "prop",
                                          "cnt": "copy"
                                        },
                                        [
                                          {
                                            "id": "prop",
                                            "cnt": "pglobal"
                                          },
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "indt"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "GR"
                                            }
                                          ],
                                          {
                                            "id": "var",
                                            "cnt": "x<sub>2</sub>"
                                          }
                                        ],
                                        {
                                          "id": "var",
                                          "cnt": "x<sub>1</sub>"
                                        }
                                      ]
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          },
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "std.map2"
                  },
                  {
                    "id": "var",
                    "cnt": "Kns"
                  },
                  {
                    "id": "var",
                    "cnt": "Ktys"
                  },
                  {
                    "id": "quantification",
                    "cnt": {
                      "type": "anonymousForall",
                      "names": [
                        {
                          "id": "var",
                          "cnt": "x<sub>2</sub>"
                        }
                      ],
                      "body": [
                        {
                          "id": "quantification",
                          "cnt": {
                            "type": "anonymousForall",
                            "names": [
                              {
                                "id": "var",
                                "cnt": "x<sub>3</sub>"
                              }
                            ],
                            "body": [
                              {
                                "id": "quantification",
                                "cnt": {
                                  "type": "anonymousForall",
                                  "names": [
                                    {
                                      "id": "var",
                                      "cnt": "x<sub>4</sub>"
                                    }
                                  ],
                                  "body": [
                                    {
                                      "id": "quantification",
                                      "cnt": {
                                        "type": "exists",
                                        "names": [
                                          {
                                            "id": "var",
                                            "cnt": "X<sub>5</sub>"
                                          },
                                          {
                                            "id": "var",
                                            "cnt": "X<sub>6</sub>"
                                          }
                                        ],
                                        "body": [
                                          {
                                            "id": "clause",
                                            "isInfix": 1,
                                            "cnt": [
                                              {
                                                "name": "=>"
                                              },
                                              [
                                                {
                                                  "id": "var",
                                                  "cnt": "Sub"
                                                },
                                                {
                                                  "id": "var",
                                                  "cnt": "x<sub>1</sub>"
                                                }
                                              ],
                                              [
                                                {
                                                  "id": "prop",
                                                  "cnt": "copy-arity"
                                                },
                                                {
                                                  "id": "var",
                                                  "cnt": "x<sub>3</sub>"
                                                },
                                                {
                                                  "id": "var",
                                                  "cnt": "X<sub>5</sub>"
                                                }
                                              ]
                                            ]
                                          },
                                          {
                                            "id": "clause",
                                            "isInfix": 1,
                                            "cnt": [
                                              {
                                                "name": "="
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "x<sub>2</sub>"
                                              },
                                              [
                                                {
                                                  "id": "prop",
                                                  "cnt": "pr"
                                                },
                                                {
                                                  "id": "discard"
                                                },
                                                {
                                                  "id": "var",
                                                  "cnt": "X<sub>6</sub>"
                                                }
                                              ]
                                            ]
                                          },
                                          {
                                            "id": "clause",
                                            "isInfix": 1,
                                            "cnt": [
                                              {
                                                "name": "="
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "x<sub>4</sub>"
                                              },
                                              [
                                                {
                                                  "id": "prop",
                                                  "cnt": "constructor"
                                                },
                                                {
                                                  "id": "var",
                                                  "cnt": "X<sub>6</sub>"
                                                },
                                                {
                                                  "id": "var",
                                                  "cnt": "X<sub>5</sub>"
                                                }
                                              ]
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "Ks"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ]
                ]
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.build-indt-decl-aux"
            },
            [
              {
                "id": "prop",
                "cnt": "pr"
              },
              {
                "id": "var",
                "cnt": "GR"
              },
              {
                "id": "var",
                "cnt": "I"
              }
            ],
            {
              "id": "var",
              "cnt": "IsInd"
            },
            {
              "id": "var",
              "cnt": "NUPno"
            },
            {
              "id": "string",
              "cnt": "0"
            },
            {
              "id": "var",
              "cnt": "Ty"
            },
            {
              "id": "var",
              "cnt": "Kns"
            },
            {
              "id": "var",
              "cnt": "KtysNu"
            },
            {
              "id": "var",
              "cnt": "Params"
            },
            [
              {
                "id": "prop",
                "cnt": "inductive"
              },
              {
                "id": "var",
                "cnt": "I"
              },
              {
                "id": "var",
                "cnt": "IsInd"
              },
              {
                "id": "var",
                "cnt": "Arity"
              },
              {
                "id": "var",
                "cnt": "Ks"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 247, column 0, character 10526:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": ">"
            },
            {
              "id": "var",
              "cnt": "Pno"
            },
            {
              "id": "string",
              "cnt": "0"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": ">"
            },
            {
              "id": "var",
              "cnt": "UPno"
            },
            {
              "id": "string",
              "cnt": "0"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "coq.name->id"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "NS"
            }
          ],
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "Pno<sub>1</sub>"
              },
              [
                {
                  "id": "prop",
                  "cnt": "-"
                },
                {
                  "id": "var",
                  "cnt": "Pno"
                },
                {
                  "id": "string",
                  "cnt": "1"
                }
              ]
            ]
          },
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "UPno<sub>1</sub>"
              },
              [
                {
                  "id": "prop",
                  "cnt": "-"
                },
                {
                  "id": "var",
                  "cnt": "UPno"
                },
                {
                  "id": "string",
                  "cnt": "1"
                }
              ]
            ]
          },
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "std.map"
                  },
                  {
                    "id": "var",
                    "cnt": "Ktys"
                  },
                  [
                    {
                      "id": "prop",
                      "cnt": "coq.subst-prod"
                    },
                    {
                      "id": "list",
                      "cnt": [
                        {
                          "l": [
                            {
                              "id": "var",
                              "cnt": "x<sub>1</sub>"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  [
                    {
                      "id": "var",
                      "cnt": "Ktys<sub>1</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ]
                ],
                [
                  {
                    "id": "prop",
                    "cnt": "coq.build-indt-decl-aux"
                  },
                  {
                    "id": "var",
                    "cnt": "GR"
                  },
                  {
                    "id": "var",
                    "cnt": "IsInd"
                  },
                  {
                    "id": "var",
                    "cnt": "Pno<sub>1</sub>"
                  },
                  {
                    "id": "var",
                    "cnt": "UPno<sub>1</sub>"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "T"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  {
                    "id": "var",
                    "cnt": "Kns"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "Ktys<sub>1</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  {
                    "id": "list",
                    "cnt": [
                      {
                        "l": [
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          }
                        ],
                        "tl": {
                          "id": "var",
                          "cnt": "Params"
                        }
                      }
                    ]
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "Res"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ]
                ]
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.build-indt-decl-aux"
            },
            {
              "id": "var",
              "cnt": "GR"
            },
            {
              "id": "var",
              "cnt": "IsInd"
            },
            {
              "id": "var",
              "cnt": "Pno"
            },
            {
              "id": "var",
              "cnt": "UPno"
            },
            [
              {
                "id": "prop",
                "cnt": "prod"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "S"
              },
              {
                "id": "var",
                "cnt": "T"
              }
            ],
            {
              "id": "var",
              "cnt": "Kns"
            },
            {
              "id": "var",
              "cnt": "Ktys"
            },
            {
              "id": "var",
              "cnt": "Params"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "NS"
              },
              {
                "id": "prop",
                "cnt": "explicit"
              },
              {
                "id": "var",
                "cnt": "S"
              },
              {
                "id": "var",
                "cnt": "Res"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi: coq.build-indt-decl-aux:fail\", line 255, column 0, character 10855:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error"
            },
            {
              "id": "string",
              "cnt": "coq.build-indt-decl-aux: invalid declaration"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.build-indt-decl-aux"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 263, column 0, character 11071:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "RP"
            },
            {
              "id": "var",
              "cnt": "ID"
            },
            {
              "id": "var",
              "cnt": "ID<sub>1</sub>"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "exists",
              "names": [
                {
                  "id": "var",
                  "cnt": "X<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "coq.id->name"
                  },
                  {
                    "id": "var",
                    "cnt": "ID"
                  },
                  {
                    "id": "var",
                    "cnt": "X<sub>1</sub>"
                  }
                ],
                {
                  "id": "quantification",
                  "cnt": {
                    "type": "forall",
                    "names": [
                      {
                        "id": "var",
                        "cnt": "x<sub>2</sub>"
                      }
                    ],
                    "body": [
                      {
                        "id": "clause",
                        "isInfix": 1,
                        "cnt": [
                          {
                            "name": "=>"
                          },
                          [
                            {
                              "id": "prop",
                              "cnt": "decl"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>2</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "X<sub>1</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "TY"
                            }
                          ],
                          [
                            {
                              "id": "prop",
                              "cnt": "coq.rename-arity"
                            },
                            {
                              "id": "var",
                              "cnt": "RP"
                            },
                            [
                              {
                                "id": "var",
                                "cnt": "In"
                              },
                              {
                                "id": "var",
                                "cnt": "x<sub>2</sub>"
                              }
                            ],
                            [
                              {
                                "id": "var",
                                "cnt": "Out"
                              },
                              {
                                "id": "var",
                                "cnt": "x<sub>2</sub>"
                              }
                            ]
                          ]
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.rename-arity"
            },
            {
              "id": "var",
              "cnt": "RP"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "I"
              },
              {
                "id": "var",
                "cnt": "TY"
              },
              {
                "id": "var",
                "cnt": "In"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "I"
              },
              {
                "id": "var",
                "cnt": "TY"
              },
              {
                "id": "var",
                "cnt": "Out"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 267, column 0, character 11220:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.rename-arity"
            },
            {
              "id": "discard"
            },
            [
              {
                "id": "prop",
                "cnt": "arity"
              },
              {
                "id": "var",
                "cnt": "T"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "arity"
              },
              {
                "id": "var",
                "cnt": "T"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 276, column 0, character 11530:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "RP"
            },
            {
              "id": "var",
              "cnt": "ID"
            },
            {
              "id": "var",
              "cnt": "ID<sub>1</sub>"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "exists",
              "names": [
                {
                  "id": "var",
                  "cnt": "X<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "coq.id->name"
                  },
                  {
                    "id": "var",
                    "cnt": "ID"
                  },
                  {
                    "id": "var",
                    "cnt": "X<sub>1</sub>"
                  }
                ],
                {
                  "id": "quantification",
                  "cnt": {
                    "type": "forall",
                    "names": [
                      {
                        "id": "var",
                        "cnt": "x<sub>2</sub>"
                      }
                    ],
                    "body": [
                      {
                        "id": "clause",
                        "isInfix": 1,
                        "cnt": [
                          {
                            "name": "=>"
                          },
                          [
                            {
                              "id": "prop",
                              "cnt": "decl"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>2</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "X<sub>1</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "TY"
                            }
                          ],
                          [
                            {
                              "id": "prop",
                              "cnt": "coq.rename-indt-decl"
                            },
                            {
                              "id": "var",
                              "cnt": "RP"
                            },
                            {
                              "id": "var",
                              "cnt": "RI"
                            },
                            {
                              "id": "var",
                              "cnt": "RK"
                            },
                            [
                              {
                                "id": "var",
                                "cnt": "In"
                              },
                              {
                                "id": "var",
                                "cnt": "x<sub>2</sub>"
                              }
                            ],
                            [
                              {
                                "id": "var",
                                "cnt": "Out"
                              },
                              {
                                "id": "var",
                                "cnt": "x<sub>2</sub>"
                              }
                            ]
                          ]
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.rename-indt-decl"
            },
            {
              "id": "var",
              "cnt": "RP"
            },
            {
              "id": "var",
              "cnt": "RI"
            },
            {
              "id": "var",
              "cnt": "RK"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "I"
              },
              {
                "id": "var",
                "cnt": "TY"
              },
              {
                "id": "var",
                "cnt": "In"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "I"
              },
              {
                "id": "var",
                "cnt": "TY"
              },
              {
                "id": "var",
                "cnt": "Out"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 280, column 0, character 11699:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "RI"
            },
            {
              "id": "var",
              "cnt": "ID"
            },
            {
              "id": "var",
              "cnt": "ID<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.rename-arity"
            },
            {
              "id": "var",
              "cnt": "RP"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.id->name"
            },
            {
              "id": "var",
              "cnt": "ID"
            },
            {
              "id": "var",
              "cnt": "Name"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.arity->term"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "TY"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "=>"
                    },
                    [
                      {
                        "id": "prop",
                        "cnt": "decl"
                      },
                      {
                        "id": "var",
                        "cnt": "x<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "Name"
                      },
                      {
                        "id": "var",
                        "cnt": "TY"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "std.map"
                      },
                      [
                        {
                          "id": "var",
                          "cnt": "In"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ],
                      [
                        {
                          "id": "prop",
                          "cnt": "coq.rename-indt-decl.aux"
                        },
                        {
                          "id": "var",
                          "cnt": "RP"
                        },
                        {
                          "id": "var",
                          "cnt": "RI"
                        },
                        {
                          "id": "var",
                          "cnt": "RK"
                        }
                      ],
                      [
                        {
                          "id": "var",
                          "cnt": "Out"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ]
                    ]
                  ]
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.rename-indt-decl"
            },
            {
              "id": "var",
              "cnt": "RP"
            },
            {
              "id": "var",
              "cnt": "RI"
            },
            {
              "id": "var",
              "cnt": "RK"
            },
            [
              {
                "id": "prop",
                "cnt": "inductive"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "Ind"
              },
              {
                "id": "var",
                "cnt": "A"
              },
              {
                "id": "var",
                "cnt": "In"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "inductive"
              },
              {
                "id": "var",
                "cnt": "ID<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "Ind"
              },
              {
                "id": "var",
                "cnt": "A<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "Out"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 287, column 0, character 11958:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "RI"
            },
            {
              "id": "var",
              "cnt": "ID"
            },
            {
              "id": "var",
              "cnt": "ID<sub>1</sub>"
            }
          ],
          [
            {
              "id": "var",
              "cnt": "RK"
            },
            {
              "id": "var",
              "cnt": "KID"
            },
            {
              "id": "var",
              "cnt": "KID<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.rename-indt-decl"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "RI"
            },
            {
              "id": "var",
              "cnt": "RK"
            },
            [
              {
                "id": "prop",
                "cnt": "record"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "A"
              },
              {
                "id": "var",
                "cnt": "KID"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "record"
              },
              {
                "id": "var",
                "cnt": "ID<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "A"
              },
              {
                "id": "var",
                "cnt": "KID<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 290, column 0, character 12060:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "RK"
            },
            {
              "id": "var",
              "cnt": "ID"
            },
            {
              "id": "var",
              "cnt": "ID<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.rename-arity"
            },
            {
              "id": "var",
              "cnt": "RP"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.rename-indt-decl.aux"
            },
            {
              "id": "var",
              "cnt": "RP"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "RK"
            },
            [
              {
                "id": "prop",
                "cnt": "constructor"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "A"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "constructor"
              },
              {
                "id": "var",
                "cnt": "ID<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "A<sub>1</sub>"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 295, column 0, character 12230:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "Name"
              },
              {
                "id": "var",
                "cnt": "Exp"
              }
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "coq.env.fresh-global-id"
            },
            {
              "id": "var",
              "cnt": "Name"
            },
            {
              "id": "var",
              "cnt": "S"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "if"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "Name"
                },
                {
                  "id": "var",
                  "cnt": "S"
                }
              ]
            },
            {
              "id": "prop",
              "cnt": "true"
            },
            [
              {
                "id": "prop",
                "cnt": "coq.warning"
              },
              {
                "id": "string",
                "cnt": "elpi"
              },
              {
                "id": "string",
                "cnt": "elpi.renamed"
              },
              {
                "id": "string",
                "cnt": "Global name"
              },
              {
                "id": "var",
                "cnt": "Name"
              },
              {
                "id": "string",
                "cnt": "is taken, using"
              },
              {
                "id": "var",
                "cnt": "S"
              },
              {
                "id": "string",
                "cnt": "instead"
              }
            ]
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ensure-fresh-global-id"
            },
            {
              "id": "var",
              "cnt": "Exp"
            },
            {
              "id": "var",
              "cnt": "S"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 303, column 0, character 12546:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.univ.new"
            },
            {
              "id": "var",
              "cnt": "U"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.unify-eq"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            [
              {
                "id": "prop",
                "cnt": "sort"
              },
              [
                {
                  "id": "prop",
                  "cnt": "typ"
                },
                {
                  "id": "var",
                  "cnt": "U"
                }
              ]
            ],
            {
              "id": "var",
              "cnt": "D"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-indt-decl.heuristic-var-type"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "uvar"
                  },
                  {
                    "id": "discard"
                  },
                  {
                    "id": "discard"
                  }
                ],
                {
                  "id": "var",
                  "cnt": "X"
                }
              ]
            },
            {
              "id": "var",
              "cnt": "D"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 305, column 0, character 12664:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-indt-decl.heuristic-var-type"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "ok"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 308, column 0, character 12782:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.do-ok!"
            },
            {
              "id": "var",
              "cnt": "Diag"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.typecheck-ty"
                      },
                      {
                        "id": "var",
                        "cnt": "T"
                      },
                      {
                        "id": "discard"
                      }
                    ],
                    {
                      "id": "quantification",
                      "cnt": {
                        "type": "anonymousForall",
                        "names": [
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          }
                        ],
                        "body": [
                          {
                            "id": "quantification",
                            "cnt": {
                              "type": "exists",
                              "names": [
                                {
                                  "id": "var",
                                  "cnt": "X<sub>2</sub>"
                                }
                              ],
                              "body": [
                                [
                                  {
                                    "id": "prop",
                                    "cnt": "coq.id->name"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "ID"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "X<sub>2</sub>"
                                  }
                                ],
                                {
                                  "id": "quantification",
                                  "cnt": {
                                    "type": "forall",
                                    "names": [
                                      {
                                        "id": "var",
                                        "cnt": "x<sub>3</sub>"
                                      }
                                    ],
                                    "body": [
                                      {
                                        "id": "clause",
                                        "isInfix": 1,
                                        "cnt": [
                                          {
                                            "name": "=>"
                                          },
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "decl"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>3</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "X<sub>2</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "T"
                                            }
                                          ],
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "coq.typecheck-indt-arity"
                                            },
                                            [
                                              {
                                                "id": "var",
                                                "cnt": "D"
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "x<sub>3</sub>"
                                              }
                                            ],
                                            [
                                              {
                                                "id": "var",
                                                "cnt": "F"
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "x<sub>3</sub>"
                                              }
                                            ],
                                            {
                                              "id": "var",
                                              "cnt": "NU"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>1</sub>"
                                            }
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    [
                      {
                        "id": "prop",
                        "cnt": "std.lift-ok"
                      },
                      {
                        "id": "clause",
                        "isInfix": 1,
                        "cnt": [
                          {
                            "name": "is"
                          },
                          {
                            "id": "var",
                            "cnt": "NU<sub>1</sub>"
                          },
                          {
                            "id": "clause",
                            "isInfix": 1,
                            "cnt": [
                              {
                                "name": "+"
                              },
                              {
                                "id": "var",
                                "cnt": "NU"
                              },
                              {
                                "id": "string",
                                "cnt": "1"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "id": "string",
                        "cnt": ""
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "std.lift-ok"
                      },
                      [
                        {
                          "id": "prop",
                          "cnt": "coq.id->name"
                        },
                        {
                          "id": "var",
                          "cnt": "ID"
                        },
                        {
                          "id": "var",
                          "cnt": "N"
                        }
                      ],
                      {
                        "id": "string",
                        "cnt": ""
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-indt-arity"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "D"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "prod"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "var",
              "cnt": "NU<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 314, column 0, character 13030:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.do-ok!"
            },
            {
              "id": "var",
              "cnt": "Diag"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.typecheck-ty"
                      },
                      {
                        "id": "var",
                        "cnt": "T"
                      },
                      {
                        "id": "discard"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.typecheck-indt-decl.heuristic-var-type"
                      },
                      {
                        "id": "var",
                        "cnt": "T"
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-indt-arity"
            },
            [
              {
                "id": "prop",
                "cnt": "arity"
              },
              {
                "id": "var",
                "cnt": "T"
              }
            ],
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "string",
              "cnt": "0"
            },
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 320, column 0, character 13223:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.do-ok!"
            },
            {
              "id": "var",
              "cnt": "Diag"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.typecheck-ty"
                      },
                      {
                        "id": "var",
                        "cnt": "T"
                      },
                      {
                        "id": "discard"
                      }
                    ],
                    {
                      "id": "quantification",
                      "cnt": {
                        "type": "anonymousForall",
                        "names": [
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          }
                        ],
                        "body": [
                          {
                            "id": "quantification",
                            "cnt": {
                              "type": "exists",
                              "names": [
                                {
                                  "id": "var",
                                  "cnt": "X<sub>2</sub>"
                                }
                              ],
                              "body": [
                                [
                                  {
                                    "id": "prop",
                                    "cnt": "coq.id->name"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "ID"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "X<sub>2</sub>"
                                  }
                                ],
                                {
                                  "id": "quantification",
                                  "cnt": {
                                    "type": "forall",
                                    "names": [
                                      {
                                        "id": "var",
                                        "cnt": "x<sub>3</sub>"
                                      }
                                    ],
                                    "body": [
                                      {
                                        "id": "clause",
                                        "isInfix": 1,
                                        "cnt": [
                                          {
                                            "name": "=>"
                                          },
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "decl"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>3</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "X<sub>2</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "T"
                                            }
                                          ],
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "coq.typecheck-indt-decl"
                                            },
                                            [
                                              {
                                                "id": "var",
                                                "cnt": "Decl"
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "x<sub>3</sub>"
                                              }
                                            ],
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>1</sub>"
                                            }
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-indt-decl"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "Decl"
              }
            ],
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 324, column 0, character 13385:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.do-ok!"
            },
            {
              "id": "var",
              "cnt": "Diag"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.typecheck-indt-arity"
                      },
                      {
                        "id": "var",
                        "cnt": "Arity"
                      },
                      {
                        "id": "var",
                        "cnt": "A"
                      },
                      {
                        "id": "var",
                        "cnt": "NUPNO"
                      }
                    ],
                    {
                      "id": "quantification",
                      "cnt": {
                        "type": "anonymousForall",
                        "names": [
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          }
                        ],
                        "body": [
                          {
                            "id": "quantification",
                            "cnt": {
                              "type": "exists",
                              "names": [
                                {
                                  "id": "var",
                                  "cnt": "X<sub>2</sub>"
                                }
                              ],
                              "body": [
                                [
                                  {
                                    "id": "prop",
                                    "cnt": "coq.id->name"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "ID"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "X<sub>2</sub>"
                                  }
                                ],
                                {
                                  "id": "quantification",
                                  "cnt": {
                                    "type": "forall",
                                    "names": [
                                      {
                                        "id": "var",
                                        "cnt": "x<sub>3</sub>"
                                      }
                                    ],
                                    "body": [
                                      {
                                        "id": "clause",
                                        "isInfix": 1,
                                        "cnt": [
                                          {
                                            "name": "=>"
                                          },
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "decl"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>3</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "X<sub>2</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "A"
                                            }
                                          ],
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "std.forall-ok"
                                            },
                                            [
                                              {
                                                "id": "var",
                                                "cnt": "KDecl"
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "x<sub>3</sub>"
                                              }
                                            ],
                                            [
                                              {
                                                "id": "prop",
                                                "cnt": "coq.typecheck-indt-decl-c"
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "x<sub>3</sub>"
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "A"
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "NUPNO"
                                              }
                                            ],
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>1</sub>"
                                            }
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-indt-decl"
            },
            [
              {
                "id": "prop",
                "cnt": "inductive"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "Arity"
              },
              {
                "id": "var",
                "cnt": "KDecl"
              }
            ],
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 328, column 0, character 13592:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.do-ok!"
            },
            {
              "id": "var",
              "cnt": "Diag"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.typecheck-ty"
                      },
                      {
                        "id": "var",
                        "cnt": "A"
                      },
                      {
                        "id": "discard"
                      }
                    ],
                    {
                      "id": "quantification",
                      "cnt": {
                        "type": "anonymousForall",
                        "names": [
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          }
                        ],
                        "body": [
                          {
                            "id": "quantification",
                            "cnt": {
                              "type": "exists",
                              "names": [
                                {
                                  "id": "var",
                                  "cnt": "X<sub>2</sub>"
                                }
                              ],
                              "body": [
                                [
                                  {
                                    "id": "prop",
                                    "cnt": "coq.id->name"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "ID"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "X<sub>2</sub>"
                                  }
                                ],
                                {
                                  "id": "quantification",
                                  "cnt": {
                                    "type": "forall",
                                    "names": [
                                      {
                                        "id": "var",
                                        "cnt": "x<sub>3</sub>"
                                      }
                                    ],
                                    "body": [
                                      {
                                        "id": "clause",
                                        "isInfix": 1,
                                        "cnt": [
                                          {
                                            "name": "=>"
                                          },
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "decl"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>3</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "X<sub>2</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "A"
                                            }
                                          ],
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "std.do-ok!"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>1</sub>"
                                            },
                                            {
                                              "id": "list",
                                              "cnt": [
                                                {
                                                  "l": [
                                                    [
                                                      {
                                                        "id": "prop",
                                                        "cnt": "std.lift-ok"
                                                      },
                                                      [
                                                        {
                                                          "id": "prop",
                                                          "cnt": "coq.typecheck-indt-decl-field"
                                                        },
                                                        {
                                                          "id": "var",
                                                          "cnt": "x<sub>3</sub>"
                                                        },
                                                        {
                                                          "id": "var",
                                                          "cnt": "FDecl"
                                                        },
                                                        [
                                                          {
                                                            "id": "var",
                                                            "cnt": "K"
                                                          },
                                                          {
                                                            "id": "var",
                                                            "cnt": "x<sub>3</sub>"
                                                          }
                                                        ]
                                                      ],
                                                      {
                                                        "id": "string",
                                                        "cnt": ""
                                                      }
                                                    ],
                                                    [
                                                      {
                                                        "id": "prop",
                                                        "cnt": "coq.typecheck-indt-decl-c"
                                                      },
                                                      {
                                                        "id": "var",
                                                        "cnt": "x<sub>3</sub>"
                                                      },
                                                      {
                                                        "id": "var",
                                                        "cnt": "A"
                                                      },
                                                      {
                                                        "id": "string",
                                                        "cnt": "0"
                                                      },
                                                      [
                                                        {
                                                          "id": "prop",
                                                          "cnt": "constructor"
                                                        },
                                                        {
                                                          "id": "string",
                                                          "cnt": "fields"
                                                        },
                                                        [
                                                          {
                                                            "id": "prop",
                                                            "cnt": "arity"
                                                          },
                                                          [
                                                            {
                                                              "id": "var",
                                                              "cnt": "K"
                                                            },
                                                            {
                                                              "id": "var",
                                                              "cnt": "x<sub>3</sub>"
                                                            }
                                                          ]
                                                        ]
                                                      ]
                                                    ]
                                                  ]
                                                }
                                              ]
                                            }
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-indt-decl"
            },
            [
              {
                "id": "prop",
                "cnt": "record"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "A"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "FDecl"
              }
            ],
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 337, column 0, character 13944:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.arity->term"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-ty"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "S"
            },
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-indc-arity"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "string",
              "cnt": "0"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "S"
            },
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 340, column 0, character 14040:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.do-ok!"
            },
            {
              "id": "var",
              "cnt": "Diag"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.typecheck-ty"
                      },
                      {
                        "id": "var",
                        "cnt": "T"
                      },
                      {
                        "id": "discard"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "std.lift-ok"
                      },
                      {
                        "id": "clause",
                        "isInfix": 1,
                        "cnt": [
                          {
                            "name": "is"
                          },
                          {
                            "id": "var",
                            "cnt": "NUPNO<sub>1</sub>"
                          },
                          [
                            {
                              "id": "prop",
                              "cnt": "-"
                            },
                            {
                              "id": "var",
                              "cnt": "NUPNO"
                            },
                            {
                              "id": "string",
                              "cnt": "1"
                            }
                          ]
                        ]
                      },
                      {
                        "id": "string",
                        "cnt": ""
                      }
                    ],
                    {
                      "id": "quantification",
                      "cnt": {
                        "type": "anonymousForall",
                        "names": [
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          }
                        ],
                        "body": [
                          {
                            "id": "quantification",
                            "cnt": {
                              "type": "exists",
                              "names": [
                                {
                                  "id": "var",
                                  "cnt": "X<sub>2</sub>"
                                }
                              ],
                              "body": [
                                [
                                  {
                                    "id": "prop",
                                    "cnt": "coq.id->name"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "ID"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "X<sub>2</sub>"
                                  }
                                ],
                                {
                                  "id": "quantification",
                                  "cnt": {
                                    "type": "forall",
                                    "names": [
                                      {
                                        "id": "var",
                                        "cnt": "x<sub>3</sub>"
                                      }
                                    ],
                                    "body": [
                                      {
                                        "id": "clause",
                                        "isInfix": 1,
                                        "cnt": [
                                          {
                                            "name": "=>"
                                          },
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "decl"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>3</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "X<sub>2</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "T"
                                            }
                                          ],
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "coq.typecheck-indc-arity"
                                            },
                                            [
                                              {
                                                "id": "var",
                                                "cnt": "D"
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "x<sub>3</sub>"
                                              }
                                            ],
                                            {
                                              "id": "var",
                                              "cnt": "NUPNO<sub>1</sub>"
                                            },
                                            [
                                              {
                                                "id": "var",
                                                "cnt": "F"
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "x<sub>3</sub>"
                                              }
                                            ],
                                            {
                                              "id": "var",
                                              "cnt": "S"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>1</sub>"
                                            }
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    [
                      {
                        "id": "prop",
                        "cnt": "std.lift-ok"
                      },
                      [
                        {
                          "id": "prop",
                          "cnt": "coq.id->name"
                        },
                        {
                          "id": "var",
                          "cnt": "ID"
                        },
                        {
                          "id": "var",
                          "cnt": "N"
                        }
                      ],
                      {
                        "id": "string",
                        "cnt": ""
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-indc-arity"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "D"
              }
            ],
            {
              "id": "var",
              "cnt": "NUPNO"
            },
            [
              {
                "id": "prop",
                "cnt": "prod"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "var",
              "cnt": "S"
            },
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 348, column 0, character 14386:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.do-ok!"
            },
            {
              "id": "var",
              "cnt": "Diag"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.typecheck-indc-arity"
                      },
                      {
                        "id": "var",
                        "cnt": "Arity"
                      },
                      {
                        "id": "var",
                        "cnt": "NUPNO"
                      },
                      {
                        "id": "var",
                        "cnt": "T"
                      },
                      {
                        "id": "var",
                        "cnt": "KS"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.typecheck-indt-decl-c.unify-arrow-tgt"
                      },
                      {
                        "id": "var",
                        "cnt": "I"
                      },
                      {
                        "id": "string",
                        "cnt": "0"
                      },
                      {
                        "id": "var",
                        "cnt": "S"
                      },
                      {
                        "id": "var",
                        "cnt": "T"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "std.lift-ok"
                      },
                      [
                        {
                          "id": "prop",
                          "cnt": "coq.arity->sort"
                        },
                        {
                          "id": "var",
                          "cnt": "S"
                        },
                        {
                          "id": "var",
                          "cnt": "IS"
                        }
                      ],
                      {
                        "id": "string",
                        "cnt": ""
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "std.lift-ok"
                      },
                      [
                        {
                          "id": "prop",
                          "cnt": "coq.sort.leq"
                        },
                        {
                          "id": "var",
                          "cnt": "KS"
                        },
                        {
                          "id": "var",
                          "cnt": "IS"
                        }
                      ],
                      {
                        "id": "string",
                        "cnt": "constructor universe too large"
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-indt-decl-c"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            {
              "id": "var",
              "cnt": "S"
            },
            {
              "id": "var",
              "cnt": "NUPNO"
            },
            [
              {
                "id": "prop",
                "cnt": "constructor"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "Arity"
              }
            ],
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 356, column 0, character 14763:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "=>"
                    },
                    [
                      {
                        "id": "prop",
                        "cnt": "decl"
                      },
                      {
                        "id": "var",
                        "cnt": "x<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "N"
                      },
                      {
                        "id": "var",
                        "cnt": "S"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.typecheck-indt-decl-c.unify-arrow-tgt"
                      },
                      {
                        "id": "var",
                        "cnt": "I"
                      },
                      {
                        "id": "var",
                        "cnt": "P"
                      },
                      {
                        "id": "var",
                        "cnt": "A"
                      },
                      [
                        {
                          "id": "var",
                          "cnt": "T"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ],
                      {
                        "id": "var",
                        "cnt": "D"
                      }
                    ]
                  ]
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-indt-decl-c.unify-arrow-tgt"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            {
              "id": "var",
              "cnt": "P"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            [
              {
                "id": "prop",
                "cnt": "prod"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "S"
              },
              {
                "id": "var",
                "cnt": "T"
              }
            ],
            {
              "id": "var",
              "cnt": "D"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 358, column 0, character 14904:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "=>"
                    },
                    [
                      {
                        "id": "prop",
                        "cnt": "def"
                      },
                      {
                        "id": "var",
                        "cnt": "x<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "N"
                      },
                      {
                        "id": "var",
                        "cnt": "S"
                      },
                      {
                        "id": "var",
                        "cnt": "B"
                      }
                    ],
                    {
                      "id": "clause",
                      "isInfix": 1,
                      "cnt": [
                        {
                          "name": "=>"
                        },
                        [
                          {
                            "id": "prop",
                            "cnt": "cache"
                          },
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          },
                          {
                            "id": "var",
                            "cnt": "B_"
                          }
                        ],
                        [
                          {
                            "id": "prop",
                            "cnt": "coq.typecheck-indt-decl-c.unify-arrow-tgt"
                          },
                          {
                            "id": "var",
                            "cnt": "I"
                          },
                          {
                            "id": "var",
                            "cnt": "P"
                          },
                          {
                            "id": "var",
                            "cnt": "A"
                          },
                          [
                            {
                              "id": "var",
                              "cnt": "T"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>1</sub>"
                            }
                          ],
                          {
                            "id": "var",
                            "cnt": "D"
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-indt-decl-c.unify-arrow-tgt"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            {
              "id": "var",
              "cnt": "P"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            [
              {
                "id": "prop",
                "cnt": "let"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "S"
              },
              {
                "id": "var",
                "cnt": "B"
              },
              {
                "id": "var",
                "cnt": "T"
              }
            ],
            {
              "id": "var",
              "cnt": "D"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 360, column 0, character 15047:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.count-prods"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "N"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "calc"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "+"
                },
                {
                  "id": "var",
                  "cnt": "N"
                },
                {
                  "id": "var",
                  "cnt": "P"
                }
              ]
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.mk-n-holes"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "Args"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.mk-app"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            {
              "id": "var",
              "cnt": "Args"
            },
            {
              "id": "var",
              "cnt": "IArgs"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.unify-eq"
            },
            {
              "id": "var",
              "cnt": "Concl"
            },
            {
              "id": "var",
              "cnt": "IArgs"
            },
            {
              "id": "var",
              "cnt": "D"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-indt-decl-c.unify-arrow-tgt"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            {
              "id": "var",
              "cnt": "P"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "Concl"
            },
            {
              "id": "var",
              "cnt": "D"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 367, column 0, character 15292:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-indt-decl-field"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            {
              "id": "prop",
              "cnt": "end-record"
            },
            {
              "id": "var",
              "cnt": "I"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 368, column 0, character 15338:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.id->name"
            },
            {
              "id": "var",
              "cnt": "ID"
            },
            {
              "id": "var",
              "cnt": "N"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "=>"
                    },
                    [
                      {
                        "id": "prop",
                        "cnt": "decl"
                      },
                      {
                        "id": "var",
                        "cnt": "x<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "N"
                      },
                      {
                        "id": "var",
                        "cnt": "T"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.typecheck-indt-decl-field"
                      },
                      {
                        "id": "var",
                        "cnt": "I"
                      },
                      [
                        {
                          "id": "var",
                          "cnt": "F"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ],
                      [
                        {
                          "id": "var",
                          "cnt": "F<sub>1</sub>"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ]
                    ]
                  ]
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-indt-decl-field"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            [
              {
                "id": "prop",
                "cnt": "field"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "prod"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "F<sub>1</sub>"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 374, column 0, character 15625:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.do-ok!"
            },
            {
              "id": "var",
              "cnt": "Diag"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.elaborate-ty-skeleton"
                      },
                      {
                        "id": "var",
                        "cnt": "T"
                      },
                      {
                        "id": "discard"
                      },
                      {
                        "id": "var",
                        "cnt": "T<sub>1</sub>"
                      }
                    ],
                    {
                      "id": "quantification",
                      "cnt": {
                        "type": "anonymousForall",
                        "names": [
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          }
                        ],
                        "body": [
                          {
                            "id": "quantification",
                            "cnt": {
                              "type": "exists",
                              "names": [
                                {
                                  "id": "var",
                                  "cnt": "X<sub>2</sub>"
                                }
                              ],
                              "body": [
                                [
                                  {
                                    "id": "prop",
                                    "cnt": "coq.id->name"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "ID"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "X<sub>2</sub>"
                                  }
                                ],
                                {
                                  "id": "quantification",
                                  "cnt": {
                                    "type": "forall",
                                    "names": [
                                      {
                                        "id": "var",
                                        "cnt": "x<sub>3</sub>"
                                      }
                                    ],
                                    "body": [
                                      {
                                        "id": "clause",
                                        "isInfix": 1,
                                        "cnt": [
                                          {
                                            "name": "=>"
                                          },
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "decl"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>3</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "X<sub>2</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "T<sub>1</sub>"
                                            }
                                          ],
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "coq.elaborate-indt-decl-skeleton"
                                            },
                                            [
                                              {
                                                "id": "var",
                                                "cnt": "Decl"
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "x<sub>3</sub>"
                                              }
                                            ],
                                            [
                                              {
                                                "id": "var",
                                                "cnt": "Decl<sub>1</sub>"
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "x<sub>3</sub>"
                                              }
                                            ],
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>1</sub>"
                                            }
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.elaborate-indt-decl-skeleton"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "Imp"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "Decl"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "Imp"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "Decl<sub>1</sub>"
              }
            ],
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 378, column 0, character 15858:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.do-ok!"
            },
            {
              "id": "var",
              "cnt": "Diag"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.elaborate-arity-skeleton"
                      },
                      {
                        "id": "var",
                        "cnt": "Arity"
                      },
                      {
                        "id": "discard"
                      },
                      {
                        "id": "var",
                        "cnt": "Arity<sub>1</sub>"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "std.lift-ok"
                      },
                      [
                        {
                          "id": "prop",
                          "cnt": "coq.arity->nparams"
                        },
                        {
                          "id": "var",
                          "cnt": "Arity<sub>1</sub>"
                        },
                        {
                          "id": "var",
                          "cnt": "NUPNO"
                        }
                      ],
                      {
                        "id": "string",
                        "cnt": ""
                      }
                    ],
                    {
                      "id": "quantification",
                      "cnt": {
                        "type": "anonymousForall",
                        "names": [
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          }
                        ],
                        "body": [
                          [
                            {
                              "id": "prop",
                              "cnt": "coq.arity->term"
                            },
                            {
                              "id": "var",
                              "cnt": "Arity<sub>1</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "A<sub>1</sub>"
                            }
                          ],
                          [
                            {
                              "id": "prop",
                              "cnt": "std.do-ok!"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>1</sub>"
                            },
                            {
                              "id": "list",
                              "cnt": [
                                {
                                  "l": [
                                    [
                                      {
                                        "id": "prop",
                                        "cnt": "coq.typecheck-indt-decl.heuristic-var-type"
                                      },
                                      {
                                        "id": "var",
                                        "cnt": "A<sub>1</sub>"
                                      }
                                    ],
                                    {
                                      "id": "quantification",
                                      "cnt": {
                                        "type": "anonymousForall",
                                        "names": [
                                          {
                                            "id": "var",
                                            "cnt": "x<sub>2</sub>"
                                          }
                                        ],
                                        "body": [
                                          {
                                            "id": "quantification",
                                            "cnt": {
                                              "type": "exists",
                                              "names": [
                                                {
                                                  "id": "var",
                                                  "cnt": "X<sub>3</sub>"
                                                }
                                              ],
                                              "body": [
                                                [
                                                  {
                                                    "id": "prop",
                                                    "cnt": "coq.id->name"
                                                  },
                                                  {
                                                    "id": "var",
                                                    "cnt": "ID"
                                                  },
                                                  {
                                                    "id": "var",
                                                    "cnt": "X<sub>3</sub>"
                                                  }
                                                ],
                                                {
                                                  "id": "quantification",
                                                  "cnt": {
                                                    "type": "forall",
                                                    "names": [
                                                      {
                                                        "id": "var",
                                                        "cnt": "x<sub>4</sub>"
                                                      }
                                                    ],
                                                    "body": [
                                                      {
                                                        "id": "clause",
                                                        "isInfix": 1,
                                                        "cnt": [
                                                          {
                                                            "name": "=>"
                                                          },
                                                          [
                                                            {
                                                              "id": "prop",
                                                              "cnt": "decl"
                                                            },
                                                            {
                                                              "id": "var",
                                                              "cnt": "x<sub>4</sub>"
                                                            },
                                                            {
                                                              "id": "var",
                                                              "cnt": "X<sub>3</sub>"
                                                            },
                                                            {
                                                              "id": "var",
                                                              "cnt": "A<sub>1</sub>"
                                                            }
                                                          ],
                                                          [
                                                            {
                                                              "id": "prop",
                                                              "cnt": "std.map-ok"
                                                            },
                                                            [
                                                              {
                                                                "id": "var",
                                                                "cnt": "KDecl"
                                                              },
                                                              {
                                                                "id": "var",
                                                                "cnt": "x<sub>4</sub>"
                                                              }
                                                            ],
                                                            [
                                                              {
                                                                "id": "prop",
                                                                "cnt": "coq.elaborate-indt-decl-skeleton-c"
                                                              },
                                                              {
                                                                "id": "var",
                                                                "cnt": "x<sub>4</sub>"
                                                              },
                                                              {
                                                                "id": "var",
                                                                "cnt": "Arity<sub>1</sub>"
                                                              },
                                                              {
                                                                "id": "var",
                                                                "cnt": "NUPNO"
                                                              }
                                                            ],
                                                            [
                                                              {
                                                                "id": "var",
                                                                "cnt": "KDecl<sub>1</sub>"
                                                              },
                                                              {
                                                                "id": "var",
                                                                "cnt": "x<sub>4</sub>"
                                                              }
                                                            ],
                                                            {
                                                              "id": "var",
                                                              "cnt": "x<sub>2</sub>"
                                                            }
                                                          ]
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.elaborate-indt-decl-skeleton"
            },
            [
              {
                "id": "prop",
                "cnt": "inductive"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "I"
              },
              {
                "id": "var",
                "cnt": "Arity"
              },
              {
                "id": "var",
                "cnt": "KDecl"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "inductive"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "I"
              },
              {
                "id": "var",
                "cnt": "Arity<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "KDecl<sub>1</sub>"
              }
            ],
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 386, column 0, character 16287:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.do-ok!"
            },
            {
              "id": "var",
              "cnt": "Diag"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.elaborate-ty-skeleton"
                      },
                      {
                        "id": "var",
                        "cnt": "A"
                      },
                      {
                        "id": "discard"
                      },
                      {
                        "id": "var",
                        "cnt": "A<sub>1</sub>"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "std.lift-ok"
                      },
                      {
                        "id": "clause",
                        "isInfix": 1,
                        "cnt": [
                          {
                            "name": "="
                          },
                          {
                            "id": "var",
                            "cnt": "A<sub>1</sub>"
                          },
                          [
                            {
                              "id": "prop",
                              "cnt": "sort"
                            },
                            {
                              "id": "var",
                              "cnt": "U"
                            }
                          ]
                        ]
                      },
                      {
                        "id": "string",
                        "cnt": "record type is not a sort"
                      }
                    ],
                    {
                      "id": "quantification",
                      "cnt": {
                        "type": "anonymousForall",
                        "names": [
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          }
                        ],
                        "body": [
                          {
                            "id": "quantification",
                            "cnt": {
                              "type": "exists",
                              "names": [
                                {
                                  "id": "var",
                                  "cnt": "X<sub>2</sub>"
                                }
                              ],
                              "body": [
                                [
                                  {
                                    "id": "prop",
                                    "cnt": "coq.id->name"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "ID"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "X<sub>2</sub>"
                                  }
                                ],
                                {
                                  "id": "quantification",
                                  "cnt": {
                                    "type": "forall",
                                    "names": [
                                      {
                                        "id": "var",
                                        "cnt": "x<sub>3</sub>"
                                      }
                                    ],
                                    "body": [
                                      {
                                        "id": "clause",
                                        "isInfix": 1,
                                        "cnt": [
                                          {
                                            "name": "=>"
                                          },
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "decl"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>3</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "X<sub>2</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "A<sub>1</sub>"
                                            }
                                          ],
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "coq.elaborate-indt-decl-skeleton-fields"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "U"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "FDecl"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "FDecl<sub>1</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>1</sub>"
                                            }
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.elaborate-indt-decl-skeleton"
            },
            [
              {
                "id": "prop",
                "cnt": "record"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "A"
              },
              {
                "id": "var",
                "cnt": "IDK"
              },
              {
                "id": "var",
                "cnt": "FDecl"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "record"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "A<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "IDK"
              },
              {
                "id": "var",
                "cnt": "FDecl<sub>1</sub>"
              }
            ],
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 393, column 0, character 16667:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.elaborate-indt-decl-skeleton-fields"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "end-record"
            },
            {
              "id": "prop",
              "cnt": "end-record"
            },
            {
              "id": "prop",
              "cnt": "ok"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 394, column 0, character 16735:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.do-ok!"
            },
            {
              "id": "var",
              "cnt": "Diag"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.elaborate-ty-skeleton"
                      },
                      {
                        "id": "var",
                        "cnt": "A"
                      },
                      {
                        "id": "var",
                        "cnt": "UA"
                      },
                      {
                        "id": "var",
                        "cnt": "A<sub>1</sub>"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "std.lift-ok"
                      },
                      [
                        {
                          "id": "prop",
                          "cnt": "coq.sort.leq"
                        },
                        {
                          "id": "var",
                          "cnt": "UA"
                        },
                        {
                          "id": "var",
                          "cnt": "U"
                        }
                      ],
                      {
                        "id": "string",
                        "cnt": "constructor universe too large"
                      }
                    ],
                    {
                      "id": "quantification",
                      "cnt": {
                        "type": "anonymousForall",
                        "names": [
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          }
                        ],
                        "body": [
                          {
                            "id": "quantification",
                            "cnt": {
                              "type": "exists",
                              "names": [
                                {
                                  "id": "var",
                                  "cnt": "X<sub>2</sub>"
                                }
                              ],
                              "body": [
                                [
                                  {
                                    "id": "prop",
                                    "cnt": "coq.id->name"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "ID"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "X<sub>2</sub>"
                                  }
                                ],
                                {
                                  "id": "quantification",
                                  "cnt": {
                                    "type": "forall",
                                    "names": [
                                      {
                                        "id": "var",
                                        "cnt": "x<sub>3</sub>"
                                      }
                                    ],
                                    "body": [
                                      {
                                        "id": "clause",
                                        "isInfix": 1,
                                        "cnt": [
                                          {
                                            "name": "=>"
                                          },
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "decl"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>3</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "X<sub>2</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "A<sub>1</sub>"
                                            }
                                          ],
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "coq.elaborate-indt-decl-skeleton-fields"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "U"
                                            },
                                            [
                                              {
                                                "id": "var",
                                                "cnt": "Fields"
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "x<sub>3</sub>"
                                              }
                                            ],
                                            [
                                              {
                                                "id": "var",
                                                "cnt": "Fields<sub>1</sub>"
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "x<sub>3</sub>"
                                              }
                                            ],
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>1</sub>"
                                            }
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.elaborate-indt-decl-skeleton-fields"
            },
            {
              "id": "var",
              "cnt": "U"
            },
            [
              {
                "id": "prop",
                "cnt": "field"
              },
              {
                "id": "var",
                "cnt": "Att"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "A"
              },
              {
                "id": "var",
                "cnt": "Fields"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "field"
              },
              {
                "id": "var",
                "cnt": "Att"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "A<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "Fields<sub>1</sub>"
              }
            ],
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 402, column 0, character 17160:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.do-ok!"
            },
            {
              "id": "var",
              "cnt": "Diag"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.elaborate-arity-skeleton-nuparams"
                      },
                      {
                        "id": "var",
                        "cnt": "Arity"
                      },
                      {
                        "id": "var",
                        "cnt": "NUPNO"
                      },
                      {
                        "id": "var",
                        "cnt": "KS"
                      },
                      {
                        "id": "var",
                        "cnt": "Arity<sub>1</sub>"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.typecheck-indt-decl-c.unify-arity"
                      },
                      {
                        "id": "var",
                        "cnt": "I"
                      },
                      {
                        "id": "string",
                        "cnt": "0"
                      },
                      {
                        "id": "var",
                        "cnt": "SA"
                      },
                      {
                        "id": "var",
                        "cnt": "Arity<sub>1</sub>"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "std.lift-ok"
                      },
                      [
                        {
                          "id": "prop",
                          "cnt": "coq.arity->term"
                        },
                        {
                          "id": "var",
                          "cnt": "SA"
                        },
                        {
                          "id": "var",
                          "cnt": "Spilled<sub>1</sub>"
                        }
                      ],
                      [
                        {
                          "id": "prop",
                          "cnt": "coq.arity->sort"
                        },
                        {
                          "id": "var",
                          "cnt": "Spilled<sub>1</sub>"
                        },
                        {
                          "id": "var",
                          "cnt": "IS"
                        }
                      ],
                      {
                        "id": "string",
                        "cnt": ""
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "std.lift-ok"
                      },
                      [
                        {
                          "id": "prop",
                          "cnt": "coq.sort.leq"
                        },
                        {
                          "id": "var",
                          "cnt": "KS"
                        },
                        {
                          "id": "var",
                          "cnt": "IS"
                        }
                      ],
                      {
                        "id": "string",
                        "cnt": "constructor universe too large"
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.elaborate-indt-decl-skeleton-c"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            {
              "id": "var",
              "cnt": "SA"
            },
            {
              "id": "var",
              "cnt": "NUPNO"
            },
            [
              {
                "id": "prop",
                "cnt": "constructor"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "Arity"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "constructor"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "Arity<sub>1</sub>"
              }
            ],
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 410, column 0, character 17607:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.do-ok!"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.unify-eq"
                      },
                      {
                        "id": "var",
                        "cnt": "T<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "T"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "std.lift-ok"
                      },
                      {
                        "id": "clause",
                        "isInfix": 1,
                        "cnt": [
                          {
                            "name": "is"
                          },
                          {
                            "id": "var",
                            "cnt": "PNO<sub>1</sub>"
                          },
                          {
                            "id": "clause",
                            "isInfix": 1,
                            "cnt": [
                              {
                                "name": "+"
                              },
                              {
                                "id": "var",
                                "cnt": "PNO"
                              },
                              {
                                "id": "string",
                                "cnt": "1"
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "id": "string",
                        "cnt": ""
                      }
                    ],
                    {
                      "id": "quantification",
                      "cnt": {
                        "type": "anonymousForall",
                        "names": [
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          }
                        ],
                        "body": [
                          {
                            "id": "quantification",
                            "cnt": {
                              "type": "exists",
                              "names": [
                                {
                                  "id": "var",
                                  "cnt": "X<sub>2</sub>"
                                }
                              ],
                              "body": [
                                [
                                  {
                                    "id": "prop",
                                    "cnt": "coq.id->name"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "ID"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "X<sub>2</sub>"
                                  }
                                ],
                                {
                                  "id": "quantification",
                                  "cnt": {
                                    "type": "forall",
                                    "names": [
                                      {
                                        "id": "var",
                                        "cnt": "x<sub>3</sub>"
                                      }
                                    ],
                                    "body": [
                                      {
                                        "id": "clause",
                                        "isInfix": 1,
                                        "cnt": [
                                          {
                                            "name": "=>"
                                          },
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "decl"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>3</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "X<sub>2</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "T"
                                            }
                                          ],
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "coq.typecheck-indt-decl-c.unify-arity"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "I"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "PNO<sub>1</sub>"
                                            },
                                            [
                                              {
                                                "id": "var",
                                                "cnt": "A"
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "x<sub>3</sub>"
                                              }
                                            ],
                                            [
                                              {
                                                "id": "var",
                                                "cnt": "C"
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "x<sub>3</sub>"
                                              }
                                            ],
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>1</sub>"
                                            }
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-indt-decl-c.unify-arity"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            {
              "id": "var",
              "cnt": "PNO"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "A"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "C"
              }
            ],
            {
              "id": "var",
              "cnt": "D"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 415, column 0, character 17851:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "exists",
              "names": [
                {
                  "id": "var",
                  "cnt": "X<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "coq.id->name"
                  },
                  {
                    "id": "var",
                    "cnt": "ID"
                  },
                  {
                    "id": "var",
                    "cnt": "X<sub>1</sub>"
                  }
                ],
                {
                  "id": "quantification",
                  "cnt": {
                    "type": "forall",
                    "names": [
                      {
                        "id": "var",
                        "cnt": "x<sub>2</sub>"
                      }
                    ],
                    "body": [
                      {
                        "id": "clause",
                        "isInfix": 1,
                        "cnt": [
                          {
                            "name": "=>"
                          },
                          [
                            {
                              "id": "prop",
                              "cnt": "decl"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>2</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "X<sub>1</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "T"
                            }
                          ],
                          [
                            {
                              "id": "prop",
                              "cnt": "coq.typecheck-indt-decl-c.unify-arity"
                            },
                            {
                              "id": "var",
                              "cnt": "I"
                            },
                            {
                              "id": "var",
                              "cnt": "PNO"
                            },
                            [
                              {
                                "id": "prop",
                                "cnt": "arity"
                              },
                              {
                                "id": "var",
                                "cnt": "A"
                              }
                            ],
                            [
                              {
                                "id": "var",
                                "cnt": "C"
                              },
                              {
                                "id": "var",
                                "cnt": "x<sub>2</sub>"
                              }
                            ],
                            {
                              "id": "var",
                              "cnt": "D"
                            }
                          ]
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-indt-decl-c.unify-arity"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            {
              "id": "var",
              "cnt": "PNO"
            },
            [
              {
                "id": "prop",
                "cnt": "arity"
              },
              {
                "id": "var",
                "cnt": "A"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "C"
              }
            ],
            {
              "id": "var",
              "cnt": "D"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 417, column 0, character 18018:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-indt-decl-c.unify-arrow-tgt"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            {
              "id": "var",
              "cnt": "PNO"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "D"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-indt-decl-c.unify-arity"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            {
              "id": "var",
              "cnt": "PNO"
            },
            [
              {
                "id": "prop",
                "cnt": "arity"
              },
              {
                "id": "var",
                "cnt": "A"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "arity"
              },
              {
                "id": "var",
                "cnt": "C"
              }
            ],
            {
              "id": "var",
              "cnt": "D"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 422, column 0, character 18259:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.do-ok!"
            },
            {
              "id": "var",
              "cnt": "Diag"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.elaborate-ty-skeleton"
                      },
                      {
                        "id": "var",
                        "cnt": "T"
                      },
                      {
                        "id": "var",
                        "cnt": "U<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "T<sub>1</sub>"
                      }
                    ],
                    {
                      "id": "quantification",
                      "cnt": {
                        "type": "anonymousForall",
                        "names": [
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          }
                        ],
                        "body": [
                          {
                            "id": "quantification",
                            "cnt": {
                              "type": "exists",
                              "names": [
                                {
                                  "id": "var",
                                  "cnt": "X<sub>2</sub>"
                                }
                              ],
                              "body": [
                                [
                                  {
                                    "id": "prop",
                                    "cnt": "coq.id->name"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "ID"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "X<sub>2</sub>"
                                  }
                                ],
                                {
                                  "id": "quantification",
                                  "cnt": {
                                    "type": "forall",
                                    "names": [
                                      {
                                        "id": "var",
                                        "cnt": "x<sub>3</sub>"
                                      }
                                    ],
                                    "body": [
                                      {
                                        "id": "clause",
                                        "isInfix": 1,
                                        "cnt": [
                                          {
                                            "name": "=>"
                                          },
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "decl"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>3</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "X<sub>2</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "T<sub>1</sub>"
                                            }
                                          ],
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "coq.elaborate-arity-skeleton"
                                            },
                                            [
                                              {
                                                "id": "var",
                                                "cnt": "A"
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "x<sub>3</sub>"
                                              }
                                            ],
                                            {
                                              "id": "var",
                                              "cnt": "U<sub>2</sub>"
                                            },
                                            [
                                              {
                                                "id": "var",
                                                "cnt": "A<sub>1</sub>"
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "x<sub>3</sub>"
                                              }
                                            ],
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>1</sub>"
                                            }
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    [
                      {
                        "id": "prop",
                        "cnt": "std.lift-ok"
                      },
                      [
                        {
                          "id": "prop",
                          "cnt": "coq.sort.pts-triple"
                        },
                        {
                          "id": "var",
                          "cnt": "U<sub>1</sub>"
                        },
                        {
                          "id": "var",
                          "cnt": "U<sub>2</sub>"
                        },
                        {
                          "id": "var",
                          "cnt": "U<sub>3</sub>"
                        }
                      ],
                      {
                        "id": "string",
                        "cnt": "coq.elaborate-arity-skeleton: should not happen"
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.elaborate-arity-skeleton"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "Imp"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "A"
              }
            ],
            {
              "id": "var",
              "cnt": "U<sub>3</sub>"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "Imp"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "A<sub>1</sub>"
              }
            ],
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 427, column 0, character 18571:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.elaborate-ty-skeleton"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "U"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.elaborate-arity-skeleton"
            },
            [
              {
                "id": "prop",
                "cnt": "arity"
              },
              {
                "id": "var",
                "cnt": "A"
              }
            ],
            {
              "id": "var",
              "cnt": "U"
            },
            [
              {
                "id": "prop",
                "cnt": "arity"
              },
              {
                "id": "var",
                "cnt": "A<sub>1</sub>"
              }
            ],
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 431, column 0, character 18763:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.do-ok!"
            },
            {
              "id": "var",
              "cnt": "Diag"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.elaborate-ty-skeleton"
                      },
                      {
                        "id": "var",
                        "cnt": "T"
                      },
                      {
                        "id": "var",
                        "cnt": "U<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "T<sub>1</sub>"
                      }
                    ],
                    {
                      "id": "quantification",
                      "cnt": {
                        "type": "anonymousForall",
                        "names": [
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          }
                        ],
                        "body": [
                          {
                            "id": "quantification",
                            "cnt": {
                              "type": "exists",
                              "names": [
                                {
                                  "id": "var",
                                  "cnt": "X<sub>2</sub>"
                                }
                              ],
                              "body": [
                                [
                                  {
                                    "id": "prop",
                                    "cnt": "coq.id->name"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "ID"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "X<sub>2</sub>"
                                  }
                                ],
                                {
                                  "id": "quantification",
                                  "cnt": {
                                    "type": "forall",
                                    "names": [
                                      {
                                        "id": "var",
                                        "cnt": "x<sub>3</sub>"
                                      }
                                    ],
                                    "body": [
                                      {
                                        "id": "clause",
                                        "isInfix": 1,
                                        "cnt": [
                                          {
                                            "name": "=>"
                                          },
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "decl"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>3</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "X<sub>2</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "T<sub>1</sub>"
                                            }
                                          ],
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "coq.elaborate-arity-skeleton-nuparams"
                                            },
                                            [
                                              {
                                                "id": "var",
                                                "cnt": "A"
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "x<sub>3</sub>"
                                              }
                                            ],
                                            {
                                              "id": "string",
                                              "cnt": "0"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "U<sub>2</sub>"
                                            },
                                            [
                                              {
                                                "id": "var",
                                                "cnt": "A<sub>1</sub>"
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "x<sub>3</sub>"
                                              }
                                            ],
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>1</sub>"
                                            }
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    [
                      {
                        "id": "prop",
                        "cnt": "std.lift-ok"
                      },
                      [
                        {
                          "id": "prop",
                          "cnt": "coq.sort.pts-triple"
                        },
                        {
                          "id": "var",
                          "cnt": "U<sub>1</sub>"
                        },
                        {
                          "id": "var",
                          "cnt": "U<sub>2</sub>"
                        },
                        {
                          "id": "var",
                          "cnt": "U<sub>3</sub>"
                        }
                      ],
                      {
                        "id": "string",
                        "cnt": "coq.elaborate-arity-skeleton-nuparams: should not happen"
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.elaborate-arity-skeleton-nuparams"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "Imp"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "A"
              }
            ],
            {
              "id": "string",
              "cnt": "0"
            },
            {
              "id": "var",
              "cnt": "U<sub>3</sub>"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "Imp"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "A<sub>1</sub>"
              }
            ],
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 436, column 0, character 19109:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.do-ok!"
            },
            {
              "id": "var",
              "cnt": "Diag"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.elaborate-ty-skeleton"
                      },
                      {
                        "id": "var",
                        "cnt": "T"
                      },
                      {
                        "id": "discard"
                      },
                      {
                        "id": "var",
                        "cnt": "T<sub>1</sub>"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "std.lift-ok"
                      },
                      {
                        "id": "clause",
                        "isInfix": 1,
                        "cnt": [
                          {
                            "name": "is"
                          },
                          {
                            "id": "var",
                            "cnt": "M"
                          },
                          [
                            {
                              "id": "prop",
                              "cnt": "-"
                            },
                            {
                              "id": "var",
                              "cnt": "N"
                            },
                            {
                              "id": "string",
                              "cnt": "1"
                            }
                          ]
                        ]
                      },
                      {
                        "id": "string",
                        "cnt": ""
                      }
                    ],
                    {
                      "id": "quantification",
                      "cnt": {
                        "type": "anonymousForall",
                        "names": [
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          }
                        ],
                        "body": [
                          {
                            "id": "quantification",
                            "cnt": {
                              "type": "exists",
                              "names": [
                                {
                                  "id": "var",
                                  "cnt": "X<sub>2</sub>"
                                }
                              ],
                              "body": [
                                [
                                  {
                                    "id": "prop",
                                    "cnt": "coq.id->name"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "ID"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "X<sub>2</sub>"
                                  }
                                ],
                                {
                                  "id": "quantification",
                                  "cnt": {
                                    "type": "forall",
                                    "names": [
                                      {
                                        "id": "var",
                                        "cnt": "x<sub>3</sub>"
                                      }
                                    ],
                                    "body": [
                                      {
                                        "id": "clause",
                                        "isInfix": 1,
                                        "cnt": [
                                          {
                                            "name": "=>"
                                          },
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "decl"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>3</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "X<sub>2</sub>"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "T<sub>1</sub>"
                                            }
                                          ],
                                          [
                                            {
                                              "id": "prop",
                                              "cnt": "coq.elaborate-arity-skeleton-nuparams"
                                            },
                                            [
                                              {
                                                "id": "var",
                                                "cnt": "A"
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "x<sub>3</sub>"
                                              }
                                            ],
                                            {
                                              "id": "var",
                                              "cnt": "M"
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "U"
                                            },
                                            [
                                              {
                                                "id": "var",
                                                "cnt": "A<sub>1</sub>"
                                              },
                                              {
                                                "id": "var",
                                                "cnt": "x<sub>3</sub>"
                                              }
                                            ],
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>1</sub>"
                                            }
                                          ]
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.elaborate-arity-skeleton-nuparams"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "Imp"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "A"
              }
            ],
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "U"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "Imp"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "A<sub>1</sub>"
              }
            ],
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 441, column 0, character 19375:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.elaborate-ty-skeleton"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "U"
            },
            {
              "id": "var",
              "cnt": "A<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.elaborate-arity-skeleton-nuparams"
            },
            [
              {
                "id": "prop",
                "cnt": "arity"
              },
              {
                "id": "var",
                "cnt": "A"
              }
            ],
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "U"
            },
            [
              {
                "id": "prop",
                "cnt": "arity"
              },
              {
                "id": "var",
                "cnt": "A<sub>1</sub>"
              }
            ],
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 446, column 0, character 19556:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.id->name"
            },
            {
              "id": "var",
              "cnt": "ID"
            },
            {
              "id": "var",
              "cnt": "Name"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "=>"
                    },
                    [
                      {
                        "id": "prop",
                        "cnt": "decl"
                      },
                      {
                        "id": "var",
                        "cnt": "x<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "Name"
                      },
                      {
                        "id": "var",
                        "cnt": "Ty"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.arity->term"
                      },
                      [
                        {
                          "id": "var",
                          "cnt": "Rest"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ],
                      [
                        {
                          "id": "var",
                          "cnt": "R"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ]
                    ]
                  ]
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.arity->term"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "Ty"
              },
              {
                "id": "var",
                "cnt": "Rest"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "prod"
              },
              {
                "id": "var",
                "cnt": "Name"
              },
              {
                "id": "var",
                "cnt": "Ty"
              },
              {
                "id": "var",
                "cnt": "R"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 449, column 0, character 19695:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.arity->term"
            },
            [
              {
                "id": "prop",
                "cnt": "arity"
              },
              {
                "id": "var",
                "cnt": "A"
              }
            ],
            {
              "id": "var",
              "cnt": "A"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 452, column 0, character 19770:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.term->arity"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "string",
              "cnt": "0"
            },
            [
              {
                "id": "prop",
                "cnt": "arity"
              },
              {
                "id": "var",
                "cnt": "T"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 453, column 0, character 19801:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "M"
              },
              [
                {
                  "id": "prop",
                  "cnt": "-"
                },
                {
                  "id": "var",
                  "cnt": "N"
                },
                {
                  "id": "string",
                  "cnt": "1"
                }
              ]
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "coq.name->id"
            },
            {
              "id": "var",
              "cnt": "Name"
            },
            {
              "id": "var",
              "cnt": "ID"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "=>"
                    },
                    [
                      {
                        "id": "prop",
                        "cnt": "decl"
                      },
                      {
                        "id": "var",
                        "cnt": "x<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "Name"
                      },
                      {
                        "id": "var",
                        "cnt": "S"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.term->arity"
                      },
                      [
                        {
                          "id": "var",
                          "cnt": "T"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ],
                      {
                        "id": "var",
                        "cnt": "M"
                      },
                      [
                        {
                          "id": "var",
                          "cnt": "R"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ]
                    ]
                  ]
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.term->arity"
            },
            [
              {
                "id": "prop",
                "cnt": "prod"
              },
              {
                "id": "var",
                "cnt": "Name"
              },
              {
                "id": "var",
                "cnt": "S"
              },
              {
                "id": "var",
                "cnt": "T"
              }
            ],
            {
              "id": "var",
              "cnt": "N"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "prop",
                "cnt": "explicit"
              },
              {
                "id": "var",
                "cnt": "S"
              },
              {
                "id": "var",
                "cnt": "R"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 460, column 0, character 20037:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "=>"
                    },
                    [
                      {
                        "id": "prop",
                        "cnt": "decl"
                      },
                      {
                        "id": "var",
                        "cnt": "x<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "N"
                      },
                      {
                        "id": "var",
                        "cnt": "S"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.arity->sort"
                      },
                      [
                        {
                          "id": "var",
                          "cnt": "X"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ],
                      {
                        "id": "var",
                        "cnt": "Y"
                      }
                    ]
                  ]
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.arity->sort"
            },
            [
              {
                "id": "prop",
                "cnt": "prod"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "S"
              },
              {
                "id": "var",
                "cnt": "X"
              }
            ],
            {
              "id": "var",
              "cnt": "Y"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 461, column 0, character 20115:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.arity->sort"
            },
            [
              {
                "id": "prop",
                "cnt": "sort"
              },
              {
                "id": "var",
                "cnt": "X"
              }
            ],
            {
              "id": "var",
              "cnt": "X"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi: arity->sort:fail\", line 462, column 0, character 20148:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error-w-data"
            },
            {
              "id": "string",
              "cnt": "arity->sort: not a sort or prod"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.arity->sort"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 467, column 0, character 20332:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "coq.arity->nparams"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "In"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  {
                    "id": "var",
                    "cnt": "O<sub>1</sub>"
                  }
                ],
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "is"
                    },
                    {
                      "id": "var",
                      "cnt": "O"
                    },
                    {
                      "id": "clause",
                      "isInfix": 1,
                      "cnt": [
                        {
                          "name": "+"
                        },
                        {
                          "id": "var",
                          "cnt": "O<sub>1</sub>"
                        },
                        {
                          "id": "string",
                          "cnt": "1"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.arity->nparams"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "In"
              }
            ],
            {
              "id": "var",
              "cnt": "O"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 469, column 0, character 20428:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.arity->nparams"
            },
            [
              {
                "id": "prop",
                "cnt": "arity"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "string",
              "cnt": "0"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 473, column 0, character 20517:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "="
              },
              {
                "id": "var",
                "cnt": "Res"
              },
              {
                "id": "list",
                "cnt": [
                  {
                    "l": [
                      [
                        {
                          "id": "prop",
                          "cnt": "coq.pp.box"
                        },
                        [
                          {
                            "id": "prop",
                            "cnt": "coq.pp.hv"
                          },
                          {
                            "id": "string",
                            "cnt": "2"
                          }
                        ],
                        {
                          "id": "list",
                          "cnt": [
                            {
                              "l": [
                                [
                                  {
                                    "id": "prop",
                                    "cnt": "coq.pp.str"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "A"
                                  }
                                ],
                                [
                                  {
                                    "id": "prop",
                                    "cnt": "coq.pp.str"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "ID"
                                  }
                                ],
                                [
                                  {
                                    "id": "prop",
                                    "cnt": "coq.pp.str"
                                  },
                                  {
                                    "id": "string",
                                    "cnt": " :"
                                  }
                                ],
                                {
                                  "id": "prop",
                                  "cnt": "coq.pp.spc"
                                },
                                {
                                  "id": "var",
                                  "cnt": "TPP"
                                },
                                [
                                  {
                                    "id": "prop",
                                    "cnt": "coq.pp.str"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "B"
                                  }
                                ]
                              ]
                            }
                          ]
                        }
                      ],
                      {
                        "id": "prop",
                        "cnt": "coq.pp.spc"
                      },
                      {
                        "id": "var",
                        "cnt": "Rest"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "if2"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "Imp"
                },
                {
                  "id": "prop",
                  "cnt": "explicit"
                }
              ]
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "A"
                },
                {
                  "id": "string",
                  "cnt": "("
                }
              ]
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "B"
                },
                {
                  "id": "string",
                  "cnt": ")"
                }
              ]
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "Imp"
                },
                {
                  "id": "prop",
                  "cnt": "maximal"
                }
              ]
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "A"
                },
                {
                  "id": "string",
                  "cnt": "{"
                }
              ]
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "B"
                },
                {
                  "id": "string",
                  "cnt": "}"
                }
              ]
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "A"
                },
                {
                  "id": "string",
                  "cnt": "["
                }
              ]
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "B"
                },
                {
                  "id": "string",
                  "cnt": "]"
                }
              ]
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.term->pp"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "TPP"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "exists",
              "names": [
                {
                  "id": "var",
                  "cnt": "X<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "coq.id->name"
                  },
                  {
                    "id": "var",
                    "cnt": "ID"
                  },
                  {
                    "id": "var",
                    "cnt": "X<sub>1</sub>"
                  }
                ],
                {
                  "id": "quantification",
                  "cnt": {
                    "type": "forall",
                    "names": [
                      {
                        "id": "var",
                        "cnt": "x<sub>2</sub>"
                      }
                    ],
                    "body": [
                      {
                        "id": "clause",
                        "isInfix": 1,
                        "cnt": [
                          {
                            "name": "=>"
                          },
                          [
                            {
                              "id": "prop",
                              "cnt": "decl"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>2</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "X<sub>1</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "T"
                            }
                          ],
                          [
                            {
                              "id": "prop",
                              "cnt": "coq.arity->pp"
                            },
                            [
                              {
                                "id": "var",
                                "cnt": "Arity"
                              },
                              {
                                "id": "var",
                                "cnt": "x<sub>2</sub>"
                              }
                            ],
                            {
                              "id": "var",
                              "cnt": "Rest"
                            }
                          ]
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.arity->pp"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "ID"
              },
              {
                "id": "var",
                "cnt": "Imp"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "Arity"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "coq.pp.glue"
              },
              {
                "id": "var",
                "cnt": "Res"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 483, column 0, character 20967:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.term->pp"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "TPP"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.arity->pp"
            },
            [
              {
                "id": "prop",
                "cnt": "arity"
              },
              {
                "id": "var",
                "cnt": "T"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "coq.pp.glue"
              },
              {
                "id": "list",
                "cnt": [
                  {
                    "l": [
                      [
                        {
                          "id": "prop",
                          "cnt": "coq.pp.str"
                        },
                        {
                          "id": "string",
                          "cnt": " : "
                        }
                      ],
                      {
                        "id": "var",
                        "cnt": "TPP"
                      }
                    ]
                  }
                ]
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 487, column 0, character 21144:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "exists",
              "names": [
                {
                  "id": "var",
                  "cnt": "X<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "coq.id->name"
                  },
                  {
                    "id": "var",
                    "cnt": "Id"
                  },
                  {
                    "id": "var",
                    "cnt": "X<sub>1</sub>"
                  }
                ],
                {
                  "id": "quantification",
                  "cnt": {
                    "type": "forall",
                    "names": [
                      {
                        "id": "var",
                        "cnt": "x<sub>2</sub>"
                      }
                    ],
                    "body": [
                      {
                        "id": "clause",
                        "isInfix": 1,
                        "cnt": [
                          {
                            "name": "=>"
                          },
                          [
                            {
                              "id": "prop",
                              "cnt": "decl"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>2</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "X<sub>1</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "Ty"
                            }
                          ],
                          [
                            {
                              "id": "prop",
                              "cnt": "coq.arity->implicits"
                            },
                            [
                              {
                                "id": "var",
                                "cnt": "F"
                              },
                              {
                                "id": "var",
                                "cnt": "x<sub>2</sub>"
                              }
                            ],
                            {
                              "id": "var",
                              "cnt": "Is"
                            }
                          ]
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.arity->implicits"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "Id"
              },
              {
                "id": "var",
                "cnt": "I"
              },
              {
                "id": "var",
                "cnt": "Ty"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "I"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "Is"
                  }
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 489, column 0, character 21253:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.arity->implicits"
            },
            [
              {
                "id": "prop",
                "cnt": "arity"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 493, column 0, character 21423:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "exists",
              "names": [
                {
                  "id": "var",
                  "cnt": "X<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "coq.id->name"
                  },
                  {
                    "id": "var",
                    "cnt": "Id"
                  },
                  {
                    "id": "var",
                    "cnt": "X<sub>1</sub>"
                  }
                ],
                {
                  "id": "quantification",
                  "cnt": {
                    "type": "forall",
                    "names": [
                      {
                        "id": "var",
                        "cnt": "x<sub>2</sub>"
                      }
                    ],
                    "body": [
                      {
                        "id": "clause",
                        "isInfix": 1,
                        "cnt": [
                          {
                            "name": "=>"
                          },
                          [
                            {
                              "id": "prop",
                              "cnt": "decl"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>2</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "X<sub>1</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "Ty"
                            }
                          ],
                          [
                            {
                              "id": "prop",
                              "cnt": "coq.indt-decl->implicits"
                            },
                            [
                              {
                                "id": "var",
                                "cnt": "F"
                              },
                              {
                                "id": "var",
                                "cnt": "x<sub>2</sub>"
                              }
                            ],
                            {
                              "id": "var",
                              "cnt": "Is"
                            },
                            {
                              "id": "var",
                              "cnt": "R<sub>1</sub>"
                            }
                          ],
                          [
                            {
                              "id": "prop",
                              "cnt": "std.map"
                            },
                            {
                              "id": "var",
                              "cnt": "R<sub>1</sub>"
                            },
                            {
                              "id": "quantification",
                              "cnt": {
                                "type": "anonymousForall",
                                "names": [
                                  {
                                    "id": "var",
                                    "cnt": "x<sub>3</sub>"
                                  }
                                ],
                                "body": [
                                  {
                                    "id": "quantification",
                                    "cnt": {
                                      "type": "anonymousForall",
                                      "names": [
                                        {
                                          "id": "var",
                                          "cnt": "x<sub>4</sub>"
                                        }
                                      ],
                                      "body": [
                                        {
                                          "id": "clause",
                                          "isInfix": 1,
                                          "cnt": [
                                            {
                                              "name": "="
                                            },
                                            {
                                              "id": "var",
                                              "cnt": "x<sub>4</sub>"
                                            },
                                            {
                                              "id": "list",
                                              "cnt": [
                                                {
                                                  "l": [
                                                    {
                                                      "id": "var",
                                                      "cnt": "I"
                                                    }
                                                  ],
                                                  "tl": {
                                                    "id": "var",
                                                    "cnt": "x<sub>3</sub>"
                                                  }
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "id": "var",
                              "cnt": "R"
                            }
                          ]
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.indt-decl->implicits"
            },
            [
              {
                "id": "prop",
                "cnt": "parameter"
              },
              {
                "id": "var",
                "cnt": "Id"
              },
              {
                "id": "var",
                "cnt": "I"
              },
              {
                "id": "var",
                "cnt": "Ty"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "I"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "Is"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 496, column 0, character 21577:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.indt-decl->implicits"
            },
            [
              {
                "id": "prop",
                "cnt": "record"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "prop",
                      "cnt": "[]"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 497, column 0, character 21628:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.arity->implicits"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "Is"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "exists",
              "names": [
                {
                  "id": "var",
                  "cnt": "X<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "coq.id->name"
                  },
                  {
                    "id": "var",
                    "cnt": "Id"
                  },
                  {
                    "id": "var",
                    "cnt": "X<sub>1</sub>"
                  }
                ],
                [
                  {
                    "id": "prop",
                    "cnt": "coq.arity->term"
                  },
                  {
                    "id": "var",
                    "cnt": "A"
                  },
                  {
                    "id": "var",
                    "cnt": "T"
                  }
                ],
                {
                  "id": "quantification",
                  "cnt": {
                    "type": "forall",
                    "names": [
                      {
                        "id": "var",
                        "cnt": "x<sub>2</sub>"
                      }
                    ],
                    "body": [
                      {
                        "id": "clause",
                        "isInfix": 1,
                        "cnt": [
                          {
                            "name": "=>"
                          },
                          [
                            {
                              "id": "prop",
                              "cnt": "decl"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>2</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "X<sub>1</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "T"
                            }
                          ],
                          [
                            {
                              "id": "prop",
                              "cnt": "std.map"
                            },
                            [
                              {
                                "id": "var",
                                "cnt": "Ks"
                              },
                              {
                                "id": "var",
                                "cnt": "x<sub>2</sub>"
                              }
                            ],
                            {
                              "id": "quantification",
                              "cnt": {
                                "type": "anonymousForall",
                                "names": [
                                  {
                                    "id": "var",
                                    "cnt": "x<sub>3</sub>"
                                  }
                                ],
                                "body": [
                                  {
                                    "id": "quantification",
                                    "cnt": {
                                      "type": "anonymousForall",
                                      "names": [
                                        {
                                          "id": "var",
                                          "cnt": "x<sub>4</sub>"
                                        }
                                      ],
                                      "body": [
                                        {
                                          "id": "quantification",
                                          "cnt": {
                                            "type": "exists",
                                            "names": [
                                              {
                                                "id": "var",
                                                "cnt": "X<sub>5</sub>"
                                              }
                                            ],
                                            "body": [
                                              {
                                                "id": "clause",
                                                "isInfix": 1,
                                                "cnt": [
                                                  {
                                                    "name": "="
                                                  },
                                                  {
                                                    "id": "var",
                                                    "cnt": "x<sub>3</sub>"
                                                  },
                                                  [
                                                    {
                                                      "id": "prop",
                                                      "cnt": "constructor"
                                                    },
                                                    {
                                                      "id": "discard"
                                                    },
                                                    {
                                                      "id": "var",
                                                      "cnt": "X<sub>5</sub>"
                                                    }
                                                  ]
                                                ]
                                              },
                                              [
                                                {
                                                  "id": "prop",
                                                  "cnt": "coq.arity->implicits"
                                                },
                                                {
                                                  "id": "var",
                                                  "cnt": "X<sub>5</sub>"
                                                },
                                                {
                                                  "id": "var",
                                                  "cnt": "x<sub>4</sub>"
                                                }
                                              ]
                                            ]
                                          }
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "id": "var",
                              "cnt": "R"
                            }
                          ]
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.indt-decl->implicits"
            },
            [
              {
                "id": "prop",
                "cnt": "inductive"
              },
              {
                "id": "var",
                "cnt": "Id"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "A"
              },
              {
                "id": "var",
                "cnt": "Ks"
              }
            ],
            {
              "id": "var",
              "cnt": "Is"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 504, column 0, character 21897:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.exists"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "quantification",
              "cnt": {
                "type": "anonymousForall",
                "names": [
                  {
                    "id": "var",
                    "cnt": "x<sub>1</sub>"
                  }
                ],
                "body": [
                  [
                    {
                      "id": "prop",
                      "cnt": "not"
                    },
                    {
                      "id": "clause",
                      "isInfix": 1,
                      "cnt": [
                        {
                          "name": "="
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        },
                        {
                          "id": "prop",
                          "cnt": "explicit"
                        }
                      ]
                    }
                  ]
                ]
              }
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.any-implicit?"
            },
            {
              "id": "var",
              "cnt": "L"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 508, column 0, character 22043:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.term->gref"
            },
            [
              {
                "id": "prop",
                "cnt": "global"
              },
              {
                "id": "var",
                "cnt": "GR"
              }
            ],
            {
              "id": "var",
              "cnt": "GR"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 509, column 0, character 22079:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.term->gref"
            },
            [
              {
                "id": "prop",
                "cnt": "pglobal"
              },
              {
                "id": "var",
                "cnt": "GR"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "GR"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 510, column 0, character 22118:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.term->gref"
            },
            {
              "id": "var",
              "cnt": "Hd"
            },
            {
              "id": "var",
              "cnt": "GR"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.term->gref"
            },
            [
              {
                "id": "prop",
                "cnt": "app"
              },
              {
                "id": "list",
                "cnt": [
                  {
                    "l": [
                      {
                        "id": "var",
                        "cnt": "Hd"
                      }
                    ],
                    "tl": {
                      "id": "discard"
                    }
                  }
                ]
              }
            ],
            {
              "id": "var",
              "cnt": "GR"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 511, column 0, character 22177:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.term->gref"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "GR"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.term->gref"
            },
            [
              {
                "id": "prop",
                "cnt": "let"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "quantification",
                "cnt": {
                  "type": "anonymousForall",
                  "names": [
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  "body": [
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ]
                }
              }
            ],
            {
              "id": "var",
              "cnt": "GR"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi: term->gref:fail\", line 512, column 0, character 22238:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.fatal-error-w-data"
            },
            {
              "id": "string",
              "cnt": "term->gref: input has no global reference"
            },
            {
              "id": "var",
              "cnt": "Term"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.term->gref"
            },
            {
              "id": "var",
              "cnt": "Term"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 517, column 0, character 22387:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.univ.new"
            },
            {
              "id": "var",
              "cnt": "U"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.fresh-type"
            },
            [
              {
                "id": "prop",
                "cnt": "sort"
              },
              [
                {
                  "id": "prop",
                  "cnt": "typ"
                },
                {
                  "id": "var",
                  "cnt": "U"
                }
              ]
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 520, column 0, character 22460:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.sort?"
            },
            [
              {
                "id": "prop",
                "cnt": "sort"
              },
              {
                "id": "discard"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 521, column 0, character 22480:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "whd1"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.sort?"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.sort?"
            },
            {
              "id": "var",
              "cnt": "T"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 528, column 0, character 22712:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "map-under-fun.aux"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.map-under-fun"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 529, column 0, character 22770:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "=>"
                    },
                    [
                      {
                        "id": "prop",
                        "cnt": "decl"
                      },
                      {
                        "id": "var",
                        "cnt": "x<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "N"
                      },
                      {
                        "id": "var",
                        "cnt": "T"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "map-under-fun.aux"
                      },
                      [
                        {
                          "id": "var",
                          "cnt": "B"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ],
                      {
                        "id": "list",
                        "cnt": [
                          {
                            "l": [
                              {
                                "id": "var",
                                "cnt": "x<sub>1</sub>"
                              }
                            ],
                            "tl": {
                              "id": "var",
                              "cnt": "AccT"
                            }
                          }
                        ]
                      },
                      {
                        "id": "list",
                        "cnt": [
                          {
                            "l": [
                              {
                                "id": "var",
                                "cnt": "T"
                              }
                            ],
                            "tl": {
                              "id": "var",
                              "cnt": "AccTy"
                            }
                          }
                        ]
                      },
                      {
                        "id": "var",
                        "cnt": "F"
                      },
                      [
                        {
                          "id": "var",
                          "cnt": "R"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ]
                    ]
                  ]
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "map-under-fun.aux"
            },
            [
              {
                "id": "prop",
                "cnt": "fun"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "B"
              }
            ],
            {
              "id": "var",
              "cnt": "AccT"
            },
            {
              "id": "var",
              "cnt": "AccTy"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            [
              {
                "id": "prop",
                "cnt": "fun"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "R"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 531, column 0, character 22901:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "=>"
                    },
                    [
                      {
                        "id": "prop",
                        "cnt": "def"
                      },
                      {
                        "id": "var",
                        "cnt": "x<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "N"
                      },
                      {
                        "id": "var",
                        "cnt": "T"
                      },
                      {
                        "id": "var",
                        "cnt": "X"
                      }
                    ],
                    {
                      "id": "clause",
                      "isInfix": 1,
                      "cnt": [
                        {
                          "name": "=>"
                        },
                        [
                          {
                            "id": "prop",
                            "cnt": "cache"
                          },
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          },
                          {
                            "id": "var",
                            "cnt": "B_"
                          }
                        ],
                        [
                          {
                            "id": "prop",
                            "cnt": "map-under-fun.aux"
                          },
                          [
                            {
                              "id": "var",
                              "cnt": "B"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>1</sub>"
                            }
                          ],
                          {
                            "id": "var",
                            "cnt": "AccT"
                          },
                          {
                            "id": "var",
                            "cnt": "AccTy"
                          },
                          {
                            "id": "var",
                            "cnt": "F"
                          },
                          [
                            {
                              "id": "var",
                              "cnt": "R"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>1</sub>"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "map-under-fun.aux"
            },
            [
              {
                "id": "prop",
                "cnt": "let"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "B"
              }
            ],
            {
              "id": "var",
              "cnt": "AccT"
            },
            {
              "id": "var",
              "cnt": "AccTy"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            [
              {
                "id": "prop",
                "cnt": "let"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "R"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 533, column 0, character 23029:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.rev"
            },
            {
              "id": "var",
              "cnt": "AccT"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.rev"
            },
            {
              "id": "var",
              "cnt": "AccTy"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "End"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "map-under-fun.aux"
            },
            {
              "id": "var",
              "cnt": "End"
            },
            {
              "id": "var",
              "cnt": "AccT"
            },
            {
              "id": "var",
              "cnt": "AccTy"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 538, column 0, character 23227:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "iter-under-fun.aux"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "F"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.iter-under-fun"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "F"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 539, column 0, character 23283:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "=>"
                    },
                    [
                      {
                        "id": "prop",
                        "cnt": "decl"
                      },
                      {
                        "id": "var",
                        "cnt": "x<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "N"
                      },
                      {
                        "id": "var",
                        "cnt": "T"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "iter-under-fun.aux"
                      },
                      [
                        {
                          "id": "var",
                          "cnt": "B"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ],
                      {
                        "id": "list",
                        "cnt": [
                          {
                            "l": [
                              {
                                "id": "var",
                                "cnt": "x<sub>1</sub>"
                              }
                            ],
                            "tl": {
                              "id": "var",
                              "cnt": "AccT"
                            }
                          }
                        ]
                      },
                      {
                        "id": "list",
                        "cnt": [
                          {
                            "l": [
                              {
                                "id": "var",
                                "cnt": "T"
                              }
                            ],
                            "tl": {
                              "id": "var",
                              "cnt": "AccTy"
                            }
                          }
                        ]
                      },
                      {
                        "id": "var",
                        "cnt": "F"
                      }
                    ]
                  ]
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "iter-under-fun.aux"
            },
            [
              {
                "id": "prop",
                "cnt": "fun"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "B"
              }
            ],
            {
              "id": "var",
              "cnt": "AccT"
            },
            {
              "id": "var",
              "cnt": "AccTy"
            },
            {
              "id": "var",
              "cnt": "F"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 541, column 0, character 23398:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "iter-under-fun.aux"
            },
            [
              {
                "id": "var",
                "cnt": "B"
              },
              {
                "id": "var",
                "cnt": "X"
              }
            ],
            {
              "id": "var",
              "cnt": "AccT"
            },
            {
              "id": "var",
              "cnt": "AccTy"
            },
            {
              "id": "var",
              "cnt": "F"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "iter-under-fun.aux"
            },
            [
              {
                "id": "prop",
                "cnt": "let"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "B"
              }
            ],
            {
              "id": "var",
              "cnt": "AccT"
            },
            {
              "id": "var",
              "cnt": "AccTy"
            },
            {
              "id": "var",
              "cnt": "F"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 543, column 0, character 23491:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.rev"
            },
            {
              "id": "var",
              "cnt": "AccT"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.rev"
            },
            {
              "id": "var",
              "cnt": "AccTy"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "End"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "iter-under-fun.aux"
            },
            {
              "id": "var",
              "cnt": "End"
            },
            {
              "id": "var",
              "cnt": "AccT"
            },
            {
              "id": "var",
              "cnt": "AccTy"
            },
            {
              "id": "var",
              "cnt": "F"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 555, column 0, character 24098:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            {
              "id": "var",
              "cnt": "Tty"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "HD"
            },
            {
              "id": "var",
              "cnt": "Args"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "if2"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "HD"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "global"
                  },
                  [
                    {
                      "id": "prop",
                      "cnt": "indt"
                    },
                    {
                      "id": "var",
                      "cnt": "GR"
                    }
                  ]
                ]
              ]
            },
            {
              "id": "prop",
              "cnt": "true"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "HD"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "pglobal"
                  },
                  [
                    {
                      "id": "prop",
                      "cnt": "indt"
                    },
                    {
                      "id": "var",
                      "cnt": "GR"
                    }
                  ],
                  {
                    "id": "var",
                    "cnt": "I"
                  }
                ]
              ]
            },
            {
              "id": "prop",
              "cnt": "true"
            },
            {
              "id": "prop",
              "cnt": "fail"
            }
          ],
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "=>"
              },
              [
                {
                  "id": "prop",
                  "cnt": "get-option"
                },
                {
                  "id": "string",
                  "cnt": "coq:uinstance"
                },
                {
                  "id": "var",
                  "cnt": "I"
                }
              ],
              [
                {
                  "id": "prop",
                  "cnt": "coq.env.indt"
                },
                {
                  "id": "var",
                  "cnt": "GR"
                },
                {
                  "id": "discard"
                },
                {
                  "id": "var",
                  "cnt": "Lno"
                },
                {
                  "id": "discard"
                },
                {
                  "id": "var",
                  "cnt": "Arity"
                },
                {
                  "id": "var",
                  "cnt": "Kn"
                },
                {
                  "id": "var",
                  "cnt": "Kt"
                }
              ]
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "std.take"
            },
            {
              "id": "var",
              "cnt": "Lno"
            },
            {
              "id": "var",
              "cnt": "Args"
            },
            {
              "id": "var",
              "cnt": "LArgs"
            }
          ],
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "=>"
              },
              [
                {
                  "id": "prop",
                  "cnt": "get-option"
                },
                {
                  "id": "string",
                  "cnt": "coq:uinstance"
                },
                {
                  "id": "var",
                  "cnt": "I"
                }
              ],
              [
                {
                  "id": "prop",
                  "cnt": "coq.env.global"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "indt"
                  },
                  {
                    "id": "var",
                    "cnt": "GR"
                  }
                ],
                {
                  "id": "var",
                  "cnt": "Spilled<sub>1</sub>"
                }
              ],
              [
                {
                  "id": "prop",
                  "cnt": "coq.mk-app"
                },
                {
                  "id": "var",
                  "cnt": "Spilled<sub>1</sub>"
                },
                {
                  "id": "var",
                  "cnt": "LArgs"
                },
                {
                  "id": "var",
                  "cnt": "IndtLArgs"
                }
              ]
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "coq.subst-prod"
            },
            {
              "id": "var",
              "cnt": "LArgs"
            },
            {
              "id": "var",
              "cnt": "Arity"
            },
            {
              "id": "var",
              "cnt": "ArityArgs"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.bind-ind-arity-no-let"
            },
            {
              "id": "var",
              "cnt": "IndtLArgs"
            },
            {
              "id": "var",
              "cnt": "ArityArgs"
            },
            {
              "id": "var",
              "cnt": "RtyF"
            },
            {
              "id": "var",
              "cnt": "Rty"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map"
            },
            {
              "id": "var",
              "cnt": "Kt"
            },
            [
              {
                "id": "prop",
                "cnt": "coq.subst-prod"
              },
              {
                "id": "var",
                "cnt": "LArgs"
              }
            ],
            {
              "id": "var",
              "cnt": "KtArgs"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map"
            },
            {
              "id": "var",
              "cnt": "KtArgs"
            },
            {
              "id": "prop",
              "cnt": "hd-beta-zeta-reduce"
            },
            {
              "id": "var",
              "cnt": "KtArgsNorm"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map"
            },
            {
              "id": "var",
              "cnt": "KtArgsNorm"
            },
            {
              "id": "prop",
              "cnt": "coq.prod->fun"
            },
            {
              "id": "var",
              "cnt": "KtArgsLam"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map"
            },
            {
              "id": "var",
              "cnt": "Kn"
            },
            {
              "id": "quantification",
              "cnt": {
                "type": "anonymousForall",
                "names": [
                  {
                    "id": "var",
                    "cnt": "x<sub>1</sub>"
                  }
                ],
                "body": [
                  {
                    "id": "quantification",
                    "cnt": {
                      "type": "anonymousForall",
                      "names": [
                        {
                          "id": "var",
                          "cnt": "x<sub>2</sub>"
                        }
                      ],
                      "body": [
                        {
                          "id": "quantification",
                          "cnt": {
                            "type": "exists",
                            "names": [
                              {
                                "id": "var",
                                "cnt": "X<sub>3</sub>"
                              }
                            ],
                            "body": [
                              [
                                {
                                  "id": "prop",
                                  "cnt": "coq.env.global"
                                },
                                [
                                  {
                                    "id": "prop",
                                    "cnt": "indc"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "x<sub>1</sub>"
                                  }
                                ],
                                {
                                  "id": "var",
                                  "cnt": "X<sub>3</sub>"
                                }
                              ],
                              [
                                {
                                  "id": "prop",
                                  "cnt": "coq.mk-app"
                                },
                                {
                                  "id": "var",
                                  "cnt": "X<sub>3</sub>"
                                },
                                {
                                  "id": "var",
                                  "cnt": "LArgs"
                                },
                                {
                                  "id": "var",
                                  "cnt": "x<sub>2</sub>"
                                }
                              ]
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "id": "var",
              "cnt": "KnArgs"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map2"
            },
            {
              "id": "var",
              "cnt": "KnArgs"
            },
            {
              "id": "var",
              "cnt": "KtArgsLam"
            },
            {
              "id": "quantification",
              "cnt": {
                "type": "anonymousForall",
                "names": [
                  {
                    "id": "var",
                    "cnt": "x<sub>1</sub>"
                  }
                ],
                "body": [
                  {
                    "id": "quantification",
                    "cnt": {
                      "type": "anonymousForall",
                      "names": [
                        {
                          "id": "var",
                          "cnt": "x<sub>2</sub>"
                        }
                      ],
                      "body": [
                        [
                          {
                            "id": "prop",
                            "cnt": "coq.map-under-fun"
                          },
                          {
                            "id": "var",
                            "cnt": "x<sub>2</sub>"
                          },
                          [
                            {
                              "id": "var",
                              "cnt": "BranchF"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>1</sub>"
                            }
                          ]
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            {
              "id": "var",
              "cnt": "Bs"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.build-match"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "Tty"
            },
            {
              "id": "var",
              "cnt": "RtyF"
            },
            {
              "id": "var",
              "cnt": "BranchF"
            },
            [
              {
                "id": "prop",
                "cnt": "match"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "Rty"
              },
              {
                "id": "var",
                "cnt": "Bs"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 579, column 0, character 25075:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "=>"
                    },
                    [
                      {
                        "id": "prop",
                        "cnt": "decl"
                      },
                      {
                        "id": "var",
                        "cnt": "x<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "N"
                      },
                      {
                        "id": "var",
                        "cnt": "T"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "bind-ind-arity.aux"
                      },
                      [
                        {
                          "id": "var",
                          "cnt": "B"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ],
                      [
                        {
                          "id": "var",
                          "cnt": "F"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ],
                      {
                        "id": "list",
                        "cnt": [
                          {
                            "l": [
                              {
                                "id": "var",
                                "cnt": "x<sub>1</sub>"
                              }
                            ],
                            "tl": {
                              "id": "var",
                              "cnt": "AccT"
                            }
                          }
                        ]
                      },
                      {
                        "id": "list",
                        "cnt": [
                          {
                            "l": [
                              {
                                "id": "var",
                                "cnt": "T"
                              }
                            ],
                            "tl": {
                              "id": "var",
                              "cnt": "AccTy"
                            }
                          }
                        ]
                      },
                      {
                        "id": "var",
                        "cnt": "IT"
                      },
                      {
                        "id": "var",
                        "cnt": "K"
                      }
                    ]
                  ]
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "bind-ind-arity.aux"
            },
            [
              {
                "id": "prop",
                "cnt": "prod"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "B"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "fun"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "var",
              "cnt": "AccT"
            },
            {
              "id": "var",
              "cnt": "AccTy"
            },
            {
              "id": "var",
              "cnt": "IT"
            },
            {
              "id": "var",
              "cnt": "K"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 581, column 0, character 25215:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "=>"
                    },
                    [
                      {
                        "id": "prop",
                        "cnt": "def"
                      },
                      {
                        "id": "var",
                        "cnt": "x<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "N"
                      },
                      {
                        "id": "var",
                        "cnt": "T"
                      },
                      {
                        "id": "var",
                        "cnt": "X"
                      }
                    ],
                    {
                      "id": "clause",
                      "isInfix": 1,
                      "cnt": [
                        {
                          "name": "=>"
                        },
                        [
                          {
                            "id": "prop",
                            "cnt": "cache"
                          },
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          },
                          {
                            "id": "var",
                            "cnt": "B_"
                          }
                        ],
                        [
                          {
                            "id": "prop",
                            "cnt": "bind-ind-arity.aux"
                          },
                          [
                            {
                              "id": "var",
                              "cnt": "B"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>1</sub>"
                            }
                          ],
                          [
                            {
                              "id": "var",
                              "cnt": "F"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>1</sub>"
                            }
                          ],
                          {
                            "id": "var",
                            "cnt": "AccT"
                          },
                          {
                            "id": "var",
                            "cnt": "AccTy"
                          },
                          {
                            "id": "var",
                            "cnt": "IT"
                          },
                          {
                            "id": "var",
                            "cnt": "K"
                          }
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "bind-ind-arity.aux"
            },
            [
              {
                "id": "prop",
                "cnt": "let"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "B"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "let"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "var",
              "cnt": "AccT"
            },
            {
              "id": "var",
              "cnt": "AccTy"
            },
            {
              "id": "var",
              "cnt": "IT"
            },
            {
              "id": "var",
              "cnt": "K"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 583, column 0, character 25351:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.rev"
            },
            {
              "id": "var",
              "cnt": "AccT"
            },
            {
              "id": "var",
              "cnt": "Vars"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.mk-app"
            },
            {
              "id": "var",
              "cnt": "IT"
            },
            {
              "id": "var",
              "cnt": "Vars"
            },
            {
              "id": "var",
              "cnt": "ITy"
            }
          ],
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "=>"
                    },
                    [
                      {
                        "id": "prop",
                        "cnt": "decl"
                      },
                      {
                        "id": "var",
                        "cnt": "x<sub>1</sub>"
                      },
                      {
                        "id": "string",
                        "cnt": "`i`"
                      },
                      {
                        "id": "var",
                        "cnt": "ITy"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "std.append"
                      },
                      {
                        "id": "var",
                        "cnt": "Vars"
                      },
                      {
                        "id": "list",
                        "cnt": [
                          {
                            "l": [
                              {
                                "id": "var",
                                "cnt": "x<sub>1</sub>"
                              }
                            ]
                          }
                        ]
                      },
                      [
                        {
                          "id": "var",
                          "cnt": "Spilled<sub>2</sub>"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ]
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "std.rev"
                      },
                      {
                        "id": "list",
                        "cnt": [
                          {
                            "l": [
                              {
                                "id": "var",
                                "cnt": "ITy"
                              }
                            ],
                            "tl": {
                              "id": "var",
                              "cnt": "AccTy"
                            }
                          }
                        ]
                      },
                      [
                        {
                          "id": "var",
                          "cnt": "Spilled<sub>1</sub>"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ]
                    ],
                    [
                      {
                        "id": "var",
                        "cnt": "K"
                      },
                      {
                        "id": "var",
                        "cnt": "Sort"
                      },
                      [
                        {
                          "id": "var",
                          "cnt": "Spilled<sub>2</sub>"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ],
                      [
                        {
                          "id": "var",
                          "cnt": "Spilled<sub>1</sub>"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ],
                      [
                        {
                          "id": "var",
                          "cnt": "F"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ]
                    ]
                  ]
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "bind-ind-arity.aux"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "sort"
                  },
                  {
                    "id": "discard"
                  }
                ],
                {
                  "id": "var",
                  "cnt": "Sort"
                }
              ]
            },
            [
              {
                "id": "prop",
                "cnt": "fun"
              },
              {
                "id": "string",
                "cnt": "`i`"
              },
              {
                "id": "var",
                "cnt": "ITy"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "var",
              "cnt": "AccT"
            },
            {
              "id": "var",
              "cnt": "AccTy"
            },
            {
              "id": "var",
              "cnt": "IT"
            },
            {
              "id": "var",
              "cnt": "K"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 587, column 0, character 25537:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "bind-ind-arity.aux"
            },
            {
              "id": "var",
              "cnt": "Arity"
            },
            {
              "id": "var",
              "cnt": "R"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "IT"
            },
            {
              "id": "var",
              "cnt": "F"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.bind-ind-arity"
            },
            {
              "id": "var",
              "cnt": "IT"
            },
            {
              "id": "var",
              "cnt": "Arity"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 590, column 0, character 25753:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "=>"
              },
              {
                "id": "quantification",
                "cnt": {
                  "type": "forall",
                  "names": [
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>2</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>3</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>4</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>5</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>6</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>7</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>8</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>9</sub>"
                    }
                  ],
                  "body": [
                    {
                      "hyp": [
                        [
                          {
                            "id": "prop",
                            "cnt": "bind-ind-arity.aux"
                          },
                          [
                            {
                              "id": "var",
                              "cnt": "x<sub>4</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>3</sub>"
                            }
                          ],
                          {
                            "id": "var",
                            "cnt": "x<sub>5</sub>"
                          },
                          {
                            "id": "var",
                            "cnt": "x<sub>6</sub>"
                          },
                          {
                            "id": "var",
                            "cnt": "x<sub>7</sub>"
                          },
                          {
                            "id": "var",
                            "cnt": "x<sub>8</sub>"
                          },
                          {
                            "id": "var",
                            "cnt": "x<sub>9</sub>"
                          }
                        ]
                      ],
                      "args": [
                        [
                          {
                            "id": "prop",
                            "cnt": "bind-ind-arity.aux"
                          },
                          [
                            {
                              "id": "prop",
                              "cnt": "let"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>1</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>2</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>3</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>4</sub>"
                            }
                          ],
                          {
                            "id": "var",
                            "cnt": "x<sub>5</sub>"
                          },
                          {
                            "id": "var",
                            "cnt": "x<sub>6</sub>"
                          },
                          {
                            "id": "var",
                            "cnt": "x<sub>7</sub>"
                          },
                          {
                            "id": "var",
                            "cnt": "x<sub>8</sub>"
                          },
                          {
                            "id": "var",
                            "cnt": "x<sub>9</sub>"
                          }
                        ]
                      ]
                    }
                  ]
                }
              },
              [
                {
                  "id": "prop",
                  "cnt": "bind-ind-arity.aux"
                },
                {
                  "id": "var",
                  "cnt": "Arity"
                },
                {
                  "id": "var",
                  "cnt": "R"
                },
                {
                  "id": "prop",
                  "cnt": "[]"
                },
                {
                  "id": "prop",
                  "cnt": "[]"
                },
                {
                  "id": "var",
                  "cnt": "IT"
                },
                {
                  "id": "var",
                  "cnt": "F"
                }
              ]
            ]
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.bind-ind-arity-no-let"
            },
            {
              "id": "var",
              "cnt": "IT"
            },
            {
              "id": "var",
              "cnt": "Arity"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 597, column 0, character 26088:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.env.indt"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.bind-ind-parameters.aux"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "O"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.bind-ind-parameters"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "O"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 600, column 0, character 26196:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.rev"
            },
            {
              "id": "var",
              "cnt": "Vars"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.rev"
            },
            {
              "id": "var",
              "cnt": "Tys"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "Ty"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "O"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.bind-ind-parameters.aux"
            },
            {
              "id": "string",
              "cnt": "0"
            },
            {
              "id": "var",
              "cnt": "Ty"
            },
            {
              "id": "var",
              "cnt": "Vars"
            },
            {
              "id": "var",
              "cnt": "Tys"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "O"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 601, column 0, character 26285:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": ">"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            {
              "id": "string",
              "cnt": "0"
            }
          ],
          {
            "id": "cut"
          },
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "J"
              },
              [
                {
                  "id": "prop",
                  "cnt": "-"
                },
                {
                  "id": "var",
                  "cnt": "I"
                },
                {
                  "id": "string",
                  "cnt": "1"
                }
              ]
            ]
          },
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "=>"
                    },
                    [
                      {
                        "id": "prop",
                        "cnt": "decl"
                      },
                      {
                        "id": "var",
                        "cnt": "x<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "N"
                      },
                      {
                        "id": "var",
                        "cnt": "T"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "coq.bind-ind-parameters.aux"
                      },
                      {
                        "id": "var",
                        "cnt": "J"
                      },
                      [
                        {
                          "id": "var",
                          "cnt": "F"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ],
                      {
                        "id": "list",
                        "cnt": [
                          {
                            "l": [
                              {
                                "id": "var",
                                "cnt": "x<sub>1</sub>"
                              }
                            ],
                            "tl": {
                              "id": "var",
                              "cnt": "Vs"
                            }
                          }
                        ]
                      },
                      {
                        "id": "list",
                        "cnt": [
                          {
                            "l": [
                              {
                                "id": "var",
                                "cnt": "T"
                              }
                            ],
                            "tl": {
                              "id": "var",
                              "cnt": "Ts"
                            }
                          }
                        ]
                      },
                      {
                        "id": "var",
                        "cnt": "K"
                      },
                      [
                        {
                          "id": "var",
                          "cnt": "G"
                        },
                        {
                          "id": "var",
                          "cnt": "x<sub>1</sub>"
                        }
                      ]
                    ]
                  ]
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.bind-ind-parameters.aux"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            [
              {
                "id": "prop",
                "cnt": "prod"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "var",
              "cnt": "Vs"
            },
            {
              "id": "var",
              "cnt": "Ts"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            [
              {
                "id": "prop",
                "cnt": "fun"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "G"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 604, column 0, character 26454:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": ">"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            {
              "id": "string",
              "cnt": "0"
            }
          ],
          {
            "id": "cut"
          },
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "J"
              },
              [
                {
                  "id": "prop",
                  "cnt": "-"
                },
                {
                  "id": "var",
                  "cnt": "I"
                },
                {
                  "id": "string",
                  "cnt": "1"
                }
              ]
            ]
          },
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "=>"
                    },
                    [
                      {
                        "id": "prop",
                        "cnt": "def"
                      },
                      {
                        "id": "var",
                        "cnt": "x<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "N"
                      },
                      {
                        "id": "var",
                        "cnt": "T"
                      },
                      {
                        "id": "var",
                        "cnt": "B"
                      }
                    ],
                    {
                      "id": "clause",
                      "isInfix": 1,
                      "cnt": [
                        {
                          "name": "=>"
                        },
                        [
                          {
                            "id": "prop",
                            "cnt": "cache"
                          },
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          },
                          {
                            "id": "var",
                            "cnt": "B_"
                          }
                        ],
                        [
                          {
                            "id": "prop",
                            "cnt": "coq.bind-ind-parameters.aux"
                          },
                          {
                            "id": "var",
                            "cnt": "J"
                          },
                          [
                            {
                              "id": "var",
                              "cnt": "F"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>1</sub>"
                            }
                          ],
                          {
                            "id": "list",
                            "cnt": [
                              {
                                "l": [
                                  {
                                    "id": "var",
                                    "cnt": "x<sub>1</sub>"
                                  }
                                ],
                                "tl": {
                                  "id": "var",
                                  "cnt": "Vs"
                                }
                              }
                            ]
                          },
                          {
                            "id": "list",
                            "cnt": [
                              {
                                "l": [
                                  {
                                    "id": "var",
                                    "cnt": "T"
                                  }
                                ],
                                "tl": {
                                  "id": "var",
                                  "cnt": "Ts"
                                }
                              }
                            ]
                          },
                          {
                            "id": "var",
                            "cnt": "K"
                          },
                          [
                            {
                              "id": "var",
                              "cnt": "G"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>1</sub>"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.bind-ind-parameters.aux"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            [
              {
                "id": "prop",
                "cnt": "let"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "B"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "var",
              "cnt": "Vs"
            },
            {
              "id": "var",
              "cnt": "Ts"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            [
              {
                "id": "prop",
                "cnt": "fun"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "G"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 607, column 0, character 26625:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": ">"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            {
              "id": "string",
              "cnt": "0"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "whd1"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T'"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "coq.bind-ind-parameters.aux"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            {
              "id": "var",
              "cnt": "T'"
            },
            {
              "id": "var",
              "cnt": "Vs"
            },
            {
              "id": "var",
              "cnt": "Ts"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "O"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.bind-ind-parameters.aux"
            },
            {
              "id": "var",
              "cnt": "I"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "Vs"
            },
            {
              "id": "var",
              "cnt": "Ts"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "O"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 613, column 0, character 26947:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.term->gref"
            },
            {
              "id": "var",
              "cnt": "Class"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.TC.db-for"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "Instances"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.map"
            },
            {
              "id": "var",
              "cnt": "Instances"
            },
            {
              "id": "var",
              "cnt": "Instance->Clause"
            },
            {
              "id": "var",
              "cnt": "Hyps"
            }
          ],
          {
            "id": "cut"
          },
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "=>"
              },
              {
                "id": "var",
                "cnt": "Hyps"
              },
              {
                "id": "var",
                "cnt": "Code"
              }
            ]
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.with-TC"
            },
            {
              "id": "var",
              "cnt": "Class"
            },
            {
              "id": "var",
              "cnt": "Instance->Clause"
            },
            {
              "id": "var",
              "cnt": "Code"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 659, column 0, character 28584:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "supported-attribute"
            },
            [
              {
                "id": "prop",
                "cnt": "att"
              },
              {
                "id": "string",
                "cnt": "elpi.loc"
              },
              {
                "id": "prop",
                "cnt": "loc"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 660, column 0, character 28626:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "rex_match"
            },
            {
              "id": "string",
              "cnt": "^elpi\\."
            },
            {
              "id": "var",
              "cnt": "Name"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "supported-attribute"
            },
            [
              {
                "id": "prop",
                "cnt": "att"
              },
              {
                "id": "var",
                "cnt": "Name"
              },
              {
                "id": "prop",
                "cnt": "string"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 674, column 0, character 29061:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "if"
            },
            [
              {
                "id": "prop",
                "cnt": "supported-attribute"
              },
              [
                {
                  "id": "prop",
                  "cnt": "att"
                },
                {
                  "id": "var",
                  "cnt": "Name"
                },
                {
                  "id": "var",
                  "cnt": "Type"
                }
              ]
            ],
            [
              {
                "id": "prop",
                "cnt": "coq.typecheck-attribute"
              },
              {
                "id": "var",
                "cnt": "Name"
              },
              {
                "id": "var",
                "cnt": "Type"
              },
              {
                "id": "var",
                "cnt": "Value"
              },
              {
                "id": "var",
                "cnt": "LPV"
              },
              {
                "id": "var",
                "cnt": "Diag"
              }
            ],
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "V"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "some"
                  },
                  {
                    "id": "var",
                    "cnt": "LPV"
                  }
                ]
              ]
            },
            [
              {
                "id": "prop",
                "cnt": "if"
              },
              [
                {
                  "id": "prop",
                  "cnt": "supported-attribute"
                },
                {
                  "id": "prop",
                  "cnt": "att-ignore-unknown"
                }
              ],
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "="
                  },
                  {
                    "id": "var",
                    "cnt": "V"
                  },
                  {
                    "id": "prop",
                    "cnt": "none"
                  }
                ]
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "="
                  },
                  {
                    "id": "var",
                    "cnt": "Diag"
                  },
                  {
                    "id": "prop",
                    "cnt": "ok"
                  }
                ]
              },
              [
                {
                  "id": "prop",
                  "cnt": "calc"
                },
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "^"
                    },
                    {
                      "id": "clause",
                      "isInfix": 1,
                      "cnt": [
                        {
                          "name": "^"
                        },
                        {
                          "id": "string",
                          "cnt": "Attribute "
                        },
                        {
                          "id": "var",
                          "cnt": "Name"
                        }
                      ]
                    },
                    {
                      "id": "string",
                      "cnt": " is not supported"
                    }
                  ]
                },
                {
                  "id": "var",
                  "cnt": "Spilled<sub>1</sub>"
                }
              ],
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "="
                  },
                  {
                    "id": "var",
                    "cnt": "Diag"
                  },
                  [
                    {
                      "id": "prop",
                      "cnt": "error"
                    },
                    {
                      "id": "var",
                      "cnt": "Spilled<sub>1</sub>"
                    }
                  ]
                ]
              }
            ]
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.valid-str-attribute"
            },
            {
              "id": "var",
              "cnt": "Name"
            },
            {
              "id": "var",
              "cnt": "Value"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 680, column 0, character 29429:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "if"
            },
            [
              {
                "id": "prop",
                "cnt": "supported-attribute"
              },
              [
                {
                  "id": "prop",
                  "cnt": "att"
                },
                {
                  "id": "var",
                  "cnt": "Name"
                },
                {
                  "id": "prop",
                  "cnt": "loc"
                }
              ]
            ],
            [
              {
                "id": "prop",
                "cnt": "if"
              },
              [
                {
                  "id": "prop",
                  "cnt": "primitive?"
                },
                {
                  "id": "var",
                  "cnt": "Loc"
                },
                {
                  "id": "string",
                  "cnt": "Loc.t"
                }
              ],
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "="
                  },
                  {
                    "id": "var",
                    "cnt": "Diag"
                  },
                  {
                    "id": "prop",
                    "cnt": "ok"
                  }
                ]
              },
              [
                {
                  "id": "prop",
                  "cnt": "std.any->string"
                },
                {
                  "id": "var",
                  "cnt": "Loc"
                },
                {
                  "id": "var",
                  "cnt": "Spilled<sub>2</sub>"
                }
              ],
              [
                {
                  "id": "prop",
                  "cnt": "calc"
                },
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "^"
                    },
                    {
                      "id": "clause",
                      "isInfix": 1,
                      "cnt": [
                        {
                          "name": "^"
                        },
                        {
                          "id": "clause",
                          "isInfix": 1,
                          "cnt": [
                            {
                              "name": "^"
                            },
                            {
                              "id": "string",
                              "cnt": "Attribute "
                            },
                            {
                              "id": "var",
                              "cnt": "Name"
                            }
                          ]
                        },
                        {
                          "id": "string",
                          "cnt": " takes a loc, got "
                        }
                      ]
                    },
                    {
                      "id": "var",
                      "cnt": "Spilled<sub>2</sub>"
                    }
                  ]
                },
                {
                  "id": "var",
                  "cnt": "Spilled<sub>3</sub>"
                }
              ],
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "="
                  },
                  {
                    "id": "var",
                    "cnt": "Diag"
                  },
                  [
                    {
                      "id": "prop",
                      "cnt": "error"
                    },
                    {
                      "id": "var",
                      "cnt": "Spilled<sub>3</sub>"
                    }
                  ]
                ]
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "if"
              },
              [
                {
                  "id": "prop",
                  "cnt": "supported-attribute"
                },
                {
                  "id": "prop",
                  "cnt": "att-ignore-unknown"
                }
              ],
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "="
                  },
                  {
                    "id": "var",
                    "cnt": "Diag"
                  },
                  {
                    "id": "prop",
                    "cnt": "ok"
                  }
                ]
              },
              [
                {
                  "id": "prop",
                  "cnt": "calc"
                },
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "^"
                    },
                    {
                      "id": "clause",
                      "isInfix": 1,
                      "cnt": [
                        {
                          "name": "^"
                        },
                        {
                          "id": "string",
                          "cnt": "Attribute "
                        },
                        {
                          "id": "var",
                          "cnt": "Name"
                        }
                      ]
                    },
                    {
                      "id": "string",
                      "cnt": " is not supported"
                    }
                  ]
                },
                {
                  "id": "var",
                  "cnt": "Spilled<sub>1</sub>"
                }
              ],
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "="
                  },
                  {
                    "id": "var",
                    "cnt": "Diag"
                  },
                  [
                    {
                      "id": "prop",
                      "cnt": "error"
                    },
                    {
                      "id": "var",
                      "cnt": "Spilled<sub>1</sub>"
                    }
                  ]
                ]
              }
            ]
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.valid-loc-attribute"
            },
            {
              "id": "var",
              "cnt": "Name"
            },
            {
              "id": "var",
              "cnt": "Loc"
            },
            {
              "id": "var",
              "cnt": "Diag"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 689, column 0, character 29899:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "V"
              },
              [
                {
                  "id": "prop",
                  "cnt": "string_to_int"
                },
                {
                  "id": "var",
                  "cnt": "Value"
                }
              ]
            ]
          },
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-attribute"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "int"
            },
            {
              "id": "var",
              "cnt": "Value"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "prop",
              "cnt": "ok"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 690, column 0, character 29972:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "Msg"
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "^"
                  },
                  {
                    "id": "clause",
                    "isInfix": 1,
                    "cnt": [
                      {
                        "name": "^"
                      },
                      {
                        "id": "clause",
                        "isInfix": 1,
                        "cnt": [
                          {
                            "name": "^"
                          },
                          {
                            "id": "string",
                            "cnt": "Attribute "
                          },
                          {
                            "id": "var",
                            "cnt": "N"
                          }
                        ]
                      },
                      {
                        "id": "string",
                        "cnt": " takes an integer, got: "
                      }
                    ]
                  },
                  {
                    "id": "var",
                    "cnt": "Value"
                  }
                ]
              }
            ]
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-attribute"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "prop",
              "cnt": "int"
            },
            {
              "id": "var",
              "cnt": "Value"
            },
            {
              "id": "discard"
            },
            [
              {
                "id": "prop",
                "cnt": "error"
              },
              {
                "id": "var",
                "cnt": "Msg"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 693, column 0, character 30090:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-attribute"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "string"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "prop",
              "cnt": "ok"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 695, column 0, character 30132:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-attribute"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "bool"
            },
            {
              "id": "string",
              "cnt": "true"
            },
            {
              "id": "prop",
              "cnt": "tt"
            },
            {
              "id": "prop",
              "cnt": "ok"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 696, column 0, character 30178:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-attribute"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "bool"
            },
            {
              "id": "string",
              "cnt": "tt"
            },
            {
              "id": "prop",
              "cnt": "tt"
            },
            {
              "id": "prop",
              "cnt": "ok"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 697, column 0, character 30224:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-attribute"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "bool"
            },
            {
              "id": "string",
              "cnt": "True"
            },
            {
              "id": "prop",
              "cnt": "tt"
            },
            {
              "id": "prop",
              "cnt": "ok"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 698, column 0, character 30270:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-attribute"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "bool"
            },
            {
              "id": "string",
              "cnt": "on"
            },
            {
              "id": "prop",
              "cnt": "tt"
            },
            {
              "id": "prop",
              "cnt": "ok"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 699, column 0, character 30316:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-attribute"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "bool"
            },
            {
              "id": "string",
              "cnt": "yes"
            },
            {
              "id": "prop",
              "cnt": "tt"
            },
            {
              "id": "prop",
              "cnt": "ok"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 700, column 0, character 30363:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-attribute"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "bool"
            },
            {
              "id": "string",
              "cnt": ""
            },
            {
              "id": "prop",
              "cnt": "tt"
            },
            {
              "id": "prop",
              "cnt": "ok"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 701, column 0, character 30409:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-attribute"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "bool"
            },
            {
              "id": "string",
              "cnt": "false"
            },
            {
              "id": "prop",
              "cnt": "ff"
            },
            {
              "id": "prop",
              "cnt": "ok"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 702, column 0, character 30455:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-attribute"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "bool"
            },
            {
              "id": "string",
              "cnt": "False"
            },
            {
              "id": "prop",
              "cnt": "ff"
            },
            {
              "id": "prop",
              "cnt": "ok"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 703, column 0, character 30501:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-attribute"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "bool"
            },
            {
              "id": "string",
              "cnt": "off"
            },
            {
              "id": "prop",
              "cnt": "ff"
            },
            {
              "id": "prop",
              "cnt": "ok"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 704, column 0, character 30547:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-attribute"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "bool"
            },
            {
              "id": "string",
              "cnt": "ff"
            },
            {
              "id": "prop",
              "cnt": "ff"
            },
            {
              "id": "prop",
              "cnt": "ok"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 705, column 0, character 30593:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-attribute"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "bool"
            },
            {
              "id": "string",
              "cnt": "no"
            },
            {
              "id": "prop",
              "cnt": "ff"
            },
            {
              "id": "prop",
              "cnt": "ok"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 706, column 0, character 30639:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "Msg"
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "^"
                  },
                  {
                    "id": "clause",
                    "isInfix": 1,
                    "cnt": [
                      {
                        "name": "^"
                      },
                      {
                        "id": "clause",
                        "isInfix": 1,
                        "cnt": [
                          {
                            "name": "^"
                          },
                          {
                            "id": "string",
                            "cnt": "Attribute "
                          },
                          {
                            "id": "var",
                            "cnt": "N"
                          }
                        ]
                      },
                      {
                        "id": "string",
                        "cnt": " takes an boolean, got: "
                      }
                    ]
                  },
                  {
                    "id": "var",
                    "cnt": "Value"
                  }
                ]
              }
            ]
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-attribute"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "prop",
              "cnt": "bool"
            },
            {
              "id": "var",
              "cnt": "Value"
            },
            {
              "id": "discard"
            },
            [
              {
                "id": "prop",
                "cnt": "error"
              },
              {
                "id": "var",
                "cnt": "Msg"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 710, column 0, character 30815:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.is-one-of"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            [
              {
                "id": "prop",
                "cnt": "`->"
              },
              {
                "id": "var",
                "cnt": "K"
              },
              {
                "id": "var",
                "cnt": "V"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 712, column 0, character 30845:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.exists"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            [
              {
                "id": "prop",
                "cnt": "coq.is-one-of"
              },
              {
                "id": "var",
                "cnt": "K"
              },
              {
                "id": "var",
                "cnt": "V"
              }
            ]
          ],
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-attribute"
            },
            {
              "id": "discard"
            },
            [
              {
                "id": "prop",
                "cnt": "oneof"
              },
              {
                "id": "var",
                "cnt": "L"
              }
            ],
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "prop",
              "cnt": "ok"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 713, column 0, character 30928:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "quantification",
              "cnt": {
                "type": "anonymousForall",
                "names": [
                  {
                    "id": "var",
                    "cnt": "x<sub>1</sub>"
                  }
                ],
                "body": [
                  {
                    "id": "quantification",
                    "cnt": {
                      "type": "anonymousForall",
                      "names": [
                        {
                          "id": "var",
                          "cnt": "x<sub>2</sub>"
                        }
                      ],
                      "body": [
                        {
                          "id": "quantification",
                          "cnt": {
                            "type": "exists",
                            "names": [
                              {
                                "id": "var",
                                "cnt": "X<sub>3</sub>"
                              }
                            ],
                            "body": [
                              {
                                "id": "clause",
                                "isInfix": 1,
                                "cnt": [
                                  {
                                    "name": "="
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "x<sub>1</sub>"
                                  },
                                  [
                                    {
                                      "id": "prop",
                                      "cnt": "`->"
                                    },
                                    {
                                      "id": "var",
                                      "cnt": "x<sub>2</sub>"
                                    },
                                    {
                                      "id": "var",
                                      "cnt": "X<sub>3</sub>"
                                    }
                                  ]
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "id": "var",
              "cnt": "S"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.fold"
            },
            {
              "id": "var",
              "cnt": "S"
            },
            {
              "id": "string",
              "cnt": ""
            },
            {
              "id": "quantification",
              "cnt": {
                "type": "anonymousForall",
                "names": [
                  {
                    "id": "var",
                    "cnt": "x<sub>1</sub>"
                  }
                ],
                "body": [
                  {
                    "id": "quantification",
                    "cnt": {
                      "type": "anonymousForall",
                      "names": [
                        {
                          "id": "var",
                          "cnt": "x<sub>2</sub>"
                        }
                      ],
                      "body": [
                        [
                          {
                            "id": "prop",
                            "cnt": "calc"
                          },
                          {
                            "id": "clause",
                            "isInfix": 1,
                            "cnt": [
                              {
                                "name": "^"
                              },
                              {
                                "id": "clause",
                                "isInfix": 1,
                                "cnt": [
                                  {
                                    "name": "^"
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "x<sub>2</sub>"
                                  },
                                  {
                                    "id": "string",
                                    "cnt": " "
                                  }
                                ]
                              },
                              {
                                "id": "var",
                                "cnt": "x<sub>1</sub>"
                              }
                            ]
                          }
                        ]
                      ]
                    }
                  }
                ]
              }
            },
            {
              "id": "var",
              "cnt": "OneOf"
            }
          ],
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "Msg"
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "^"
                  },
                  {
                    "id": "clause",
                    "isInfix": 1,
                    "cnt": [
                      {
                        "name": "^"
                      },
                      {
                        "id": "clause",
                        "isInfix": 1,
                        "cnt": [
                          {
                            "name": "^"
                          },
                          {
                            "id": "clause",
                            "isInfix": 1,
                            "cnt": [
                              {
                                "name": "^"
                              },
                              {
                                "id": "clause",
                                "isInfix": 1,
                                "cnt": [
                                  {
                                    "name": "^"
                                  },
                                  {
                                    "id": "string",
                                    "cnt": "Attribute "
                                  },
                                  {
                                    "id": "var",
                                    "cnt": "N"
                                  }
                                ]
                              },
                              {
                                "id": "string",
                                "cnt": " takes one of "
                              }
                            ]
                          },
                          {
                            "id": "var",
                            "cnt": "OneOf"
                          }
                        ]
                      },
                      {
                        "id": "string",
                        "cnt": ", got: "
                      }
                    ]
                  },
                  {
                    "id": "var",
                    "cnt": "K"
                  }
                ]
              }
            ]
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck-attribute"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            [
              {
                "id": "prop",
                "cnt": "oneof"
              },
              {
                "id": "var",
                "cnt": "L"
              }
            ],
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "discard"
            },
            [
              {
                "id": "prop",
                "cnt": "error"
              },
              {
                "id": "var",
                "cnt": "Msg"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 719, column 0, character 31153:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map"
            },
            {
              "id": "var",
              "cnt": "S"
            },
            {
              "id": "quantification",
              "cnt": {
                "type": "anonymousForall",
                "names": [
                  {
                    "id": "var",
                    "cnt": "x<sub>1</sub>"
                  }
                ],
                "body": [
                  {
                    "id": "quantification",
                    "cnt": {
                      "type": "anonymousForall",
                      "names": [
                        {
                          "id": "var",
                          "cnt": "x<sub>2</sub>"
                        }
                      ],
                      "body": [
                        {
                          "id": "clause",
                          "isInfix": 1,
                          "cnt": [
                            {
                              "name": "="
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>2</sub>"
                            },
                            [
                              {
                                "id": "prop",
                                "cnt": "supported-attribute"
                              },
                              {
                                "id": "var",
                                "cnt": "x<sub>1</sub>"
                              }
                            ]
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "id": "var",
              "cnt": "CS"
            }
          ],
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "=>"
              },
              {
                "id": "var",
                "cnt": "CS"
              },
              [
                {
                  "id": "prop",
                  "cnt": "parse-attributes.aux"
                },
                {
                  "id": "var",
                  "cnt": "L"
                },
                {
                  "id": "string",
                  "cnt": ""
                },
                {
                  "id": "var",
                  "cnt": "O"
                }
              ]
            ]
          },
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.parse-attributes"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "S"
            },
            {
              "id": "var",
              "cnt": "O"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 722, column 0, character 31272:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "parse-attributes.aux"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 723, column 0, character 31302:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "if"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "Prefix"
                },
                {
                  "id": "string",
                  "cnt": ""
                }
              ]
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "PS"
                },
                {
                  "id": "var",
                  "cnt": "S"
                }
              ]
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "is"
                },
                {
                  "id": "var",
                  "cnt": "PS"
                },
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "^"
                    },
                    {
                      "id": "clause",
                      "isInfix": 1,
                      "cnt": [
                        {
                          "name": "^"
                        },
                        {
                          "id": "var",
                          "cnt": "Prefix"
                        },
                        {
                          "id": "string",
                          "cnt": "."
                        }
                      ]
                    },
                    {
                      "id": "var",
                      "cnt": "S"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "supported-attribute"
            },
            [
              {
                "id": "prop",
                "cnt": "att"
              },
              {
                "id": "var",
                "cnt": "PS"
              },
              {
                "id": "prop",
                "cnt": "attmap"
              }
            ]
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "parse-attributes.aux"
            },
            {
              "id": "var",
              "cnt": "AS"
            },
            {
              "id": "var",
              "cnt": "Prefix"
            },
            {
              "id": "var",
              "cnt": "R<sub>1</sub>"
            }
          ],
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "=>"
              },
              {
                "id": "quantification",
                "cnt": {
                  "type": "forall",
                  "names": [
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  "body": [
                    {
                      "hyp": [
                        {
                          "id": "cut"
                        }
                      ],
                      "args": [
                        [
                          {
                            "id": "prop",
                            "cnt": "supported-attribute"
                          },
                          [
                            {
                              "id": "prop",
                              "cnt": "att"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>1</sub>"
                            },
                            {
                              "id": "prop",
                              "cnt": "string"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              },
              [
                {
                  "id": "prop",
                  "cnt": "parse-attributes.aux"
                },
                {
                  "id": "var",
                  "cnt": "L"
                },
                {
                  "id": "string",
                  "cnt": ""
                },
                {
                  "id": "var",
                  "cnt": "Map"
                }
              ]
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "std.append"
            },
            {
              "id": "var",
              "cnt": "R<sub>1</sub>"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "get-option"
                      },
                      {
                        "id": "var",
                        "cnt": "PS"
                      },
                      {
                        "id": "var",
                        "cnt": "Map"
                      }
                    ]
                  ]
                }
              ]
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "parse-attributes.aux"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "attribute"
                      },
                      {
                        "id": "var",
                        "cnt": "S"
                      },
                      [
                        {
                          "id": "prop",
                          "cnt": "node"
                        },
                        {
                          "id": "var",
                          "cnt": "L"
                        }
                      ]
                    ]
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "AS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "Prefix"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 727, column 0, character 31613:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "parse-attributes.aux"
            },
            {
              "id": "var",
              "cnt": "AS"
            },
            {
              "id": "var",
              "cnt": "Prefix"
            },
            {
              "id": "var",
              "cnt": "R<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "if"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "Prefix"
                },
                {
                  "id": "string",
                  "cnt": ""
                }
              ]
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "PS"
                },
                {
                  "id": "var",
                  "cnt": "S"
                }
              ]
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "is"
                },
                {
                  "id": "var",
                  "cnt": "PS"
                },
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "^"
                    },
                    {
                      "id": "clause",
                      "isInfix": 1,
                      "cnt": [
                        {
                          "name": "^"
                        },
                        {
                          "id": "var",
                          "cnt": "Prefix"
                        },
                        {
                          "id": "string",
                          "cnt": "."
                        }
                      ]
                    },
                    {
                      "id": "var",
                      "cnt": "S"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "parse-attributes.aux"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "PS"
            },
            {
              "id": "var",
              "cnt": "R<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.append"
            },
            {
              "id": "var",
              "cnt": "R<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "R<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "parse-attributes.aux"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "attribute"
                      },
                      {
                        "id": "var",
                        "cnt": "S"
                      },
                      [
                        {
                          "id": "prop",
                          "cnt": "node"
                        },
                        {
                          "id": "var",
                          "cnt": "L"
                        }
                      ]
                    ]
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "AS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "Prefix"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 732, column 0, character 31820:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "if"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "Prefix"
                },
                {
                  "id": "string",
                  "cnt": ""
                }
              ]
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "PS"
                },
                {
                  "id": "var",
                  "cnt": "S"
                }
              ]
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "is"
                },
                {
                  "id": "var",
                  "cnt": "PS"
                },
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "^"
                    },
                    {
                      "id": "clause",
                      "isInfix": 1,
                      "cnt": [
                        {
                          "name": "^"
                        },
                        {
                          "id": "var",
                          "cnt": "Prefix"
                        },
                        {
                          "id": "string",
                          "cnt": "."
                        }
                      ]
                    },
                    {
                      "id": "var",
                      "cnt": "S"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.valid-str-attribute"
            },
            {
              "id": "var",
              "cnt": "PS"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "V<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "Diag"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "if"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "Diag"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "error"
                  },
                  {
                    "id": "var",
                    "cnt": "Msg"
                  }
                ]
              ]
            },
            [
              {
                "id": "prop",
                "cnt": "coq.error"
              },
              {
                "id": "var",
                "cnt": "Msg"
              }
            ],
            {
              "id": "prop",
              "cnt": "true"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "if"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "V<sub>1</sub>"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "some"
                  },
                  {
                    "id": "var",
                    "cnt": "Val"
                  }
                ]
              ]
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "CLS"
                },
                {
                  "id": "list",
                  "cnt": [
                    {
                      "l": [
                        [
                          {
                            "id": "prop",
                            "cnt": "get-option"
                          },
                          {
                            "id": "var",
                            "cnt": "PS"
                          },
                          {
                            "id": "var",
                            "cnt": "Val"
                          }
                        ]
                      ],
                      "tl": {
                        "id": "var",
                        "cnt": "R"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "CLS"
                },
                {
                  "id": "var",
                  "cnt": "R"
                }
              ]
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "parse-attributes.aux"
            },
            {
              "id": "var",
              "cnt": "AS"
            },
            {
              "id": "var",
              "cnt": "Prefix"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "parse-attributes.aux"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "attribute"
                      },
                      {
                        "id": "var",
                        "cnt": "S"
                      },
                      [
                        {
                          "id": "prop",
                          "cnt": "leaf-str"
                        },
                        {
                          "id": "var",
                          "cnt": "V"
                        }
                      ]
                    ]
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "AS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "Prefix"
            },
            {
              "id": "var",
              "cnt": "CLS"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/coq-lib.elpi\", line 738, column 0, character 32136:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "if"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "Prefix"
                },
                {
                  "id": "string",
                  "cnt": ""
                }
              ]
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "PS"
                },
                {
                  "id": "var",
                  "cnt": "S"
                }
              ]
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "is"
                },
                {
                  "id": "var",
                  "cnt": "PS"
                },
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "^"
                    },
                    {
                      "id": "clause",
                      "isInfix": 1,
                      "cnt": [
                        {
                          "name": "^"
                        },
                        {
                          "id": "var",
                          "cnt": "Prefix"
                        },
                        {
                          "id": "string",
                          "cnt": "."
                        }
                      ]
                    },
                    {
                      "id": "var",
                      "cnt": "S"
                    }
                  ]
                }
              ]
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.valid-loc-attribute"
            },
            {
              "id": "var",
              "cnt": "PS"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "Diag"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "if"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "Diag"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "error"
                  },
                  {
                    "id": "var",
                    "cnt": "Msg"
                  }
                ]
              ]
            },
            [
              {
                "id": "prop",
                "cnt": "coq.error"
              },
              {
                "id": "var",
                "cnt": "Msg"
              }
            ],
            {
              "id": "prop",
              "cnt": "true"
            }
          ],
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "="
              },
              {
                "id": "var",
                "cnt": "CLS"
              },
              {
                "id": "list",
                "cnt": [
                  {
                    "l": [
                      [
                        {
                          "id": "prop",
                          "cnt": "get-option"
                        },
                        {
                          "id": "var",
                          "cnt": "PS"
                        },
                        {
                          "id": "var",
                          "cnt": "V"
                        }
                      ]
                    ],
                    "tl": {
                      "id": "var",
                      "cnt": "R"
                    }
                  }
                ]
              }
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "parse-attributes.aux"
            },
            {
              "id": "var",
              "cnt": "AS"
            },
            {
              "id": "var",
              "cnt": "Prefix"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "parse-attributes.aux"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "attribute"
                      },
                      {
                        "id": "var",
                        "cnt": "S"
                      },
                      [
                        {
                          "id": "prop",
                          "cnt": "leaf-loc"
                        },
                        {
                          "id": "var",
                          "cnt": "V"
                        }
                      ]
                    ]
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "AS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "Prefix"
            },
            {
              "id": "var",
              "cnt": "CLS"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 22, column 0, character 758:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "if"
            },
            [
              {
                "id": "prop",
                "cnt": "var"
              },
              {
                "id": "var",
                "cnt": "T"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "coq.mk-app-uvar"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "A"
              },
              {
                "id": "var",
                "cnt": "R"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "coq.mk-app"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "A"
              },
              {
                "id": "var",
                "cnt": "R"
              }
            ]
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "unwind"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 25, column 0, character 888:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "nth-stack"
            },
            {
              "id": "string",
              "cnt": "0"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XS"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 26, column 0, character 921:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "is"
              },
              {
                "id": "var",
                "cnt": "M"
              },
              [
                {
                  "id": "prop",
                  "cnt": "-"
                },
                {
                  "id": "var",
                  "cnt": "N"
                },
                {
                  "id": "string",
                  "cnt": "1"
                }
              ]
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "nth-stack"
            },
            {
              "id": "var",
              "cnt": "M"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "Before"
            },
            {
              "id": "var",
              "cnt": "At"
            },
            {
              "id": "var",
              "cnt": "After"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "nth-stack"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "XS"
                  }
                }
              ]
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "Before"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "At"
            },
            {
              "id": "var",
              "cnt": "After"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 30, column 0, character 1048:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.append"
            },
            {
              "id": "var",
              "cnt": "Args"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            {
              "id": "var",
              "cnt": "Hd"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            [
              {
                "id": "prop",
                "cnt": "app"
              },
              {
                "id": "list",
                "cnt": [
                  {
                    "l": [
                      {
                        "id": "var",
                        "cnt": "Hd"
                      }
                    ],
                    "tl": {
                      "id": "var",
                      "cnt": "Args"
                    }
                  }
                ]
              }
            ],
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 31, column 0, character 1110:",
      "cnt": {
        "hyp": [
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "fun"
                  },
                  {
                    "id": "discard"
                  },
                  {
                    "id": "discard"
                  },
                  {
                    "id": "discard"
                  }
                ],
                {
                  "id": "var",
                  "cnt": "X"
                }
              ]
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 32, column 0, character 1145:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "=>"
                    },
                    [
                      {
                        "id": "prop",
                        "cnt": "def"
                      },
                      {
                        "id": "var",
                        "cnt": "x<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "N"
                      },
                      {
                        "id": "var",
                        "cnt": "T"
                      },
                      {
                        "id": "var",
                        "cnt": "B"
                      }
                    ],
                    {
                      "id": "clause",
                      "isInfix": 1,
                      "cnt": [
                        {
                          "name": "=>"
                        },
                        [
                          {
                            "id": "prop",
                            "cnt": "cache"
                          },
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          },
                          {
                            "id": "var",
                            "cnt": "BN_"
                          }
                        ],
                        [
                          {
                            "id": "prop",
                            "cnt": "whd"
                          },
                          [
                            {
                              "id": "var",
                              "cnt": "F"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>1</sub>"
                            }
                          ],
                          {
                            "id": "var",
                            "cnt": "C"
                          },
                          [
                            {
                              "id": "var",
                              "cnt": "F<sub>1</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>1</sub>"
                            }
                          ],
                          [
                            {
                              "id": "var",
                              "cnt": "C<sub>1</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>1</sub>"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          },
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "="
              },
              {
                "id": "var",
                "cnt": "X"
              },
              [
                {
                  "id": "var",
                  "cnt": "F<sub>1</sub>"
                },
                {
                  "id": "var",
                  "cnt": "B"
                }
              ]
            ]
          },
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "="
              },
              {
                "id": "var",
                "cnt": "XC"
              },
              [
                {
                  "id": "var",
                  "cnt": "C<sub>1</sub>"
                },
                {
                  "id": "var",
                  "cnt": "B"
                }
              ]
            ]
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            [
              {
                "id": "prop",
                "cnt": "fun"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "B"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "C"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 34, column 0, character 1266:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                {
                  "id": "clause",
                  "isInfix": 1,
                  "cnt": [
                    {
                      "name": "=>"
                    },
                    [
                      {
                        "id": "prop",
                        "cnt": "def"
                      },
                      {
                        "id": "var",
                        "cnt": "x<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "N"
                      },
                      {
                        "id": "var",
                        "cnt": "T"
                      },
                      {
                        "id": "var",
                        "cnt": "B"
                      }
                    ],
                    {
                      "id": "clause",
                      "isInfix": 1,
                      "cnt": [
                        {
                          "name": "=>"
                        },
                        [
                          {
                            "id": "prop",
                            "cnt": "cache"
                          },
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          },
                          {
                            "id": "var",
                            "cnt": "BN_"
                          }
                        ],
                        [
                          {
                            "id": "prop",
                            "cnt": "whd"
                          },
                          [
                            {
                              "id": "var",
                              "cnt": "F"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>1</sub>"
                            }
                          ],
                          {
                            "id": "var",
                            "cnt": "C"
                          },
                          [
                            {
                              "id": "var",
                              "cnt": "F<sub>1</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>1</sub>"
                            }
                          ],
                          [
                            {
                              "id": "var",
                              "cnt": "C<sub>1</sub>"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>1</sub>"
                            }
                          ]
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          },
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "="
              },
              {
                "id": "var",
                "cnt": "X"
              },
              [
                {
                  "id": "var",
                  "cnt": "F<sub>1</sub>"
                },
                {
                  "id": "var",
                  "cnt": "B"
                }
              ]
            ]
          },
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "="
              },
              {
                "id": "var",
                "cnt": "XC"
              },
              [
                {
                  "id": "var",
                  "cnt": "C<sub>1</sub>"
                },
                {
                  "id": "var",
                  "cnt": "B"
                }
              ]
            ]
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            [
              {
                "id": "prop",
                "cnt": "let"
              },
              {
                "id": "var",
                "cnt": "N"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "B"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 36, column 0, character 1385:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "unfold"
            },
            {
              "id": "var",
              "cnt": "GR"
            },
            {
              "id": "prop",
              "cnt": "none"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            {
              "id": "var",
              "cnt": "DC"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            {
              "id": "var",
              "cnt": "DC"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            [
              {
                "id": "prop",
                "cnt": "global"
              },
              [
                {
                  "id": "prop",
                  "cnt": "const"
                },
                {
                  "id": "var",
                  "cnt": "GR"
                }
              ]
            ],
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 37, column 0, character 1460:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "unfold"
            },
            {
              "id": "var",
              "cnt": "GR"
            },
            [
              {
                "id": "prop",
                "cnt": "some"
              },
              {
                "id": "var",
                "cnt": "I"
              }
            ],
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            {
              "id": "var",
              "cnt": "DC"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            {
              "id": "var",
              "cnt": "DC"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            [
              {
                "id": "prop",
                "cnt": "pglobal"
              },
              [
                {
                  "id": "prop",
                  "cnt": "const"
                },
                {
                  "id": "var",
                  "cnt": "GR"
                }
              ],
              {
                "id": "var",
                "cnt": "I"
              }
            ],
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 38, column 0, character 1542:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "whd-indc"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "KA"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "proj-red"
            },
            {
              "id": "var",
              "cnt": "KA"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            [
              {
                "id": "prop",
                "cnt": "primitive"
              },
              [
                {
                  "id": "prop",
                  "cnt": "proj"
                },
                {
                  "id": "discard"
                },
                {
                  "id": "var",
                  "cnt": "N"
                }
              ]
            ],
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "A"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "C"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 40, column 0, character 1633:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.env.primitive?"
            },
            {
              "id": "var",
              "cnt": "GR"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "unwind"
            },
            {
              "id": "var",
              "cnt": "HD"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "Orig"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.reduction.lazy.whd_all"
            },
            {
              "id": "var",
              "cnt": "Orig"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "if"
            },
            [
              {
                "id": "prop",
                "cnt": "same_term"
              },
              {
                "id": "var",
                "cnt": "Orig"
              },
              {
                "id": "var",
                "cnt": "R"
              }
            ],
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "X"
                },
                {
                  "id": "var",
                  "cnt": "HD"
                }
              ]
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "XC"
                },
                {
                  "id": "var",
                  "cnt": "C"
                }
              ]
            },
            [
              {
                "id": "prop",
                "cnt": "whd"
              },
              {
                "id": "var",
                "cnt": "R"
              },
              {
                "id": "prop",
                "cnt": "[]"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "XC"
              }
            ]
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "global"
                  },
                  [
                    {
                      "id": "prop",
                      "cnt": "const"
                    },
                    {
                      "id": "var",
                      "cnt": "GR"
                    }
                  ]
                ],
                {
                  "id": "var",
                  "cnt": "HD"
                }
              ]
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 44, column 0, character 1814:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "whd-indc"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "GR"
            },
            {
              "id": "var",
              "cnt": "KA"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "match-red"
            },
            {
              "id": "var",
              "cnt": "GR"
            },
            {
              "id": "var",
              "cnt": "KA"
            },
            {
              "id": "var",
              "cnt": "L"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            [
              {
                "id": "prop",
                "cnt": "match"
              },
              {
                "id": "var",
                "cnt": "A"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "L"
              }
            ],
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 46, column 0, character 1897:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "nth-stack"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "LA"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "RA"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "whd-indc"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "GR"
            },
            {
              "id": "var",
              "cnt": "KA"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "fix-red"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "Fix"
            },
            {
              "id": "var",
              "cnt": "LA"
            },
            {
              "id": "var",
              "cnt": "GR"
            },
            {
              "id": "var",
              "cnt": "KA"
            },
            {
              "id": "var",
              "cnt": "RA"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "fix"
                  },
                  {
                    "id": "discard"
                  },
                  {
                    "id": "var",
                    "cnt": "N"
                  },
                  {
                    "id": "discard"
                  },
                  {
                    "id": "var",
                    "cnt": "F"
                  }
                ],
                {
                  "id": "var",
                  "cnt": "Fix"
                }
              ]
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 48, column 0, character 2016:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "name"
            },
            {
              "id": "var",
              "cnt": "N"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "def"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "V"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "cache-whd"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "VN"
            },
            {
              "id": "var",
              "cnt": "V"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            {
              "id": "var",
              "cnt": "VN"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 49, column 0, character 2089:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 52, column 0, character 2139:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "VA"
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ],
          {
            "id": "cut"
          },
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "="
              },
              {
                "id": "var",
                "cnt": "VA"
              },
              [
                {
                  "id": "prop",
                  "cnt": "global"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "indc"
                  },
                  {
                    "id": "var",
                    "cnt": "GR"
                  }
                ]
              ]
            ]
          },
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "="
              },
              {
                "id": "var",
                "cnt": "KA"
              },
              {
                "id": "var",
                "cnt": "C"
              }
            ]
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "whd-indc"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "GR"
            },
            {
              "id": "var",
              "cnt": "KA"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 55, column 0, character 2268:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "HD"
            },
            {
              "id": "var",
              "cnt": "ARGS"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "unwind"
            },
            {
              "id": "var",
              "cnt": "HD"
            },
            {
              "id": "var",
              "cnt": "ARGS"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "not"
            },
            [
              {
                "id": "prop",
                "cnt": "same_term"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "R"
              }
            ]
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "whd1"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 62, column 0, character 2437:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.env.indc"
            },
            {
              "id": "var",
              "cnt": "GR"
            },
            {
              "id": "var",
              "cnt": "Lno"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "Ki"
            },
            {
              "id": "discard"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.drop"
            },
            {
              "id": "var",
              "cnt": "Lno"
            },
            {
              "id": "var",
              "cnt": "KArgs"
            },
            {
              "id": "var",
              "cnt": "Args"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.nth"
            },
            {
              "id": "var",
              "cnt": "Ki"
            },
            {
              "id": "var",
              "cnt": "BL"
            },
            {
              "id": "var",
              "cnt": "Bi"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.mk-app"
            },
            {
              "id": "var",
              "cnt": "Bi"
            },
            {
              "id": "var",
              "cnt": "Args"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "hd-beta"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "match-red"
            },
            {
              "id": "var",
              "cnt": "GR"
            },
            {
              "id": "var",
              "cnt": "KArgs"
            },
            {
              "id": "var",
              "cnt": "BL"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 68, column 0, character 2637:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.nth"
            },
            {
              "id": "var",
              "cnt": "FieldNo"
            },
            {
              "id": "var",
              "cnt": "Args"
            },
            {
              "id": "var",
              "cnt": "V"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "proj-red"
            },
            {
              "id": "var",
              "cnt": "Args"
            },
            {
              "id": "var",
              "cnt": "FieldNo"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 75, column 0, character 2818:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.mk-app"
            },
            [
              {
                "id": "prop",
                "cnt": "global"
              },
              [
                {
                  "id": "prop",
                  "cnt": "indc"
                },
                {
                  "id": "var",
                  "cnt": "GR"
                }
              ]
            ],
            {
              "id": "var",
              "cnt": "KA"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.append"
            },
            {
              "id": "var",
              "cnt": "LA"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "Spilled<sub>2</sub>"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "RA"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "ArgsWRedRecNo"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.mk-app"
            },
            [
              {
                "id": "var",
                "cnt": "F"
              },
              {
                "id": "var",
                "cnt": "Fix"
              }
            ],
            {
              "id": "var",
              "cnt": "ArgsWRedRecNo"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "hd-beta"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "fix-red"
            },
            {
              "id": "var",
              "cnt": "F"
            },
            {
              "id": "var",
              "cnt": "Fix"
            },
            {
              "id": "var",
              "cnt": "LA"
            },
            {
              "id": "var",
              "cnt": "GR"
            },
            {
              "id": "var",
              "cnt": "KA"
            },
            {
              "id": "var",
              "cnt": "RA"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 85, column 0, character 3255:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.env.const"
            },
            {
              "id": "var",
              "cnt": "GR"
            },
            [
              {
                "id": "prop",
                "cnt": "some"
              },
              {
                "id": "var",
                "cnt": "B"
              }
            ],
            {
              "id": "discard"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "hd-beta"
            },
            {
              "id": "var",
              "cnt": "B"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "BO"
            },
            {
              "id": "var",
              "cnt": "BOC"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "unfold"
            },
            {
              "id": "var",
              "cnt": "GR"
            },
            {
              "id": "prop",
              "cnt": "none"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "BO"
            },
            {
              "id": "var",
              "cnt": "BOC"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 86, column 0, character 3331:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "=>"
              },
              [
                {
                  "id": "prop",
                  "cnt": "get-option"
                },
                {
                  "id": "string",
                  "cnt": "coq:uinstance"
                },
                {
                  "id": "var",
                  "cnt": "I"
                }
              ],
              [
                {
                  "id": "prop",
                  "cnt": "coq.env.const"
                },
                {
                  "id": "var",
                  "cnt": "GR"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "some"
                  },
                  {
                    "id": "var",
                    "cnt": "B"
                  }
                ],
                {
                  "id": "discard"
                }
              ]
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "hd-beta"
            },
            {
              "id": "var",
              "cnt": "B"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "BO"
            },
            {
              "id": "var",
              "cnt": "BOC"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "unfold"
            },
            {
              "id": "var",
              "cnt": "GR"
            },
            [
              {
                "id": "prop",
                "cnt": "some"
              },
              {
                "id": "var",
                "cnt": "I"
              }
            ],
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "BO"
            },
            {
              "id": "var",
              "cnt": "BOC"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 91, column 0, character 3549:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "cache"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "VN"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "var"
            },
            {
              "id": "var",
              "cnt": "VN"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "whd"
            },
            {
              "id": "var",
              "cnt": "V"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "unwind"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "XC"
            },
            {
              "id": "var",
              "cnt": "VN"
            }
          ],
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "="
              },
              {
                "id": "var",
                "cnt": "K"
              },
              {
                "id": "var",
                "cnt": "VN"
              }
            ]
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "cache-whd"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "var",
              "cnt": "V"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 92, column 0, character 3630:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "cache"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "K"
            }
          ],
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "cache-whd"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "K"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 93, column 0, character 3663:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.term->string"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.error"
            },
            {
              "id": "string",
              "cnt": "anomaly: def with no cache:"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "cache-whd"
            },
            {
              "id": "var",
              "cnt": "N"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 95, column 0, character 3745:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.append"
            },
            {
              "id": "var",
              "cnt": "Args"
            },
            {
              "id": "var",
              "cnt": "S"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "hd-beta"
            },
            {
              "id": "var",
              "cnt": "Hd"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "hd-beta"
            },
            [
              {
                "id": "prop",
                "cnt": "app"
              },
              {
                "id": "list",
                "cnt": [
                  {
                    "l": [
                      {
                        "id": "var",
                        "cnt": "Hd"
                      }
                    ],
                    "tl": {
                      "id": "var",
                      "cnt": "Args"
                    }
                  }
                ]
              }
            ],
            {
              "id": "var",
              "cnt": "S"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 96, column 0, character 3813:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "hd-beta"
            },
            [
              {
                "id": "var",
                "cnt": "F"
              },
              {
                "id": "var",
                "cnt": "A"
              }
            ],
            {
              "id": "var",
              "cnt": "AS"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "hd-beta"
            },
            [
              {
                "id": "prop",
                "cnt": "fun"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "A"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "AS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi: hd-beta:end\", line 97, column 0, character 3872:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "hd-beta"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 100, column 0, character 3910:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.append"
            },
            {
              "id": "var",
              "cnt": "Args"
            },
            {
              "id": "var",
              "cnt": "S"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "hd-beta-zeta"
            },
            {
              "id": "var",
              "cnt": "Hd"
            },
            {
              "id": "var",
              "cnt": "Spilled<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "hd-beta-zeta"
            },
            [
              {
                "id": "prop",
                "cnt": "app"
              },
              {
                "id": "list",
                "cnt": [
                  {
                    "l": [
                      {
                        "id": "var",
                        "cnt": "Hd"
                      }
                    ],
                    "tl": {
                      "id": "var",
                      "cnt": "Args"
                    }
                  }
                ]
              }
            ],
            {
              "id": "var",
              "cnt": "S"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 101, column 0, character 3988:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "hd-beta-zeta"
            },
            [
              {
                "id": "var",
                "cnt": "F"
              },
              {
                "id": "var",
                "cnt": "A"
              }
            ],
            {
              "id": "var",
              "cnt": "AS"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "hd-beta-zeta"
            },
            [
              {
                "id": "prop",
                "cnt": "fun"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "A"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "AS"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 102, column 0, character 4057:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "hd-beta-zeta"
            },
            [
              {
                "id": "var",
                "cnt": "F"
              },
              {
                "id": "var",
                "cnt": "B"
              }
            ],
            {
              "id": "var",
              "cnt": "AS"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "hd-beta-zeta"
            },
            [
              {
                "id": "prop",
                "cnt": "let"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "B"
              },
              {
                "id": "var",
                "cnt": "F"
              }
            ],
            {
              "id": "var",
              "cnt": "AS"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi: hd-beta-zeta:end\", line 103, column 0, character 4124:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "hd-beta-zeta"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "X"
            },
            {
              "id": "var",
              "cnt": "C"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-reduction.elpi\", line 106, column 0, character 4172:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "hd-beta-zeta"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "H"
            },
            {
              "id": "var",
              "cnt": "S"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "unwind"
            },
            {
              "id": "var",
              "cnt": "H"
            },
            {
              "id": "var",
              "cnt": "S"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "hd-beta-zeta-reduce"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 9, column 0, character 491:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "refine.elaborate"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "G"
            },
            {
              "id": "var",
              "cnt": "GS"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "refine"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "G"
            },
            {
              "id": "var",
              "cnt": "GS"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 12, column 0, character 592:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "="
              },
              {
                "id": "var",
                "cnt": "RawEv"
              },
              {
                "id": "var",
                "cnt": "T"
              }
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.collect-goals"
            },
            {
              "id": "var",
              "cnt": "Ev"
            },
            {
              "id": "var",
              "cnt": "GS"
            },
            {
              "id": "discard"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "refine.elaborate"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            [
              {
                "id": "prop",
                "cnt": "goal"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "RawEv"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "Ev"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "GS"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 16, column 0, character 743:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.typecheck"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "Ty"
            },
            {
              "id": "prop",
              "cnt": "ok"
            }
          ],
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "="
              },
              {
                "id": "var",
                "cnt": "Ev"
              },
              {
                "id": "var",
                "cnt": "T"
              }
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.collect-goals"
            },
            {
              "id": "var",
              "cnt": "Ev"
            },
            {
              "id": "var",
              "cnt": "GS"
            },
            {
              "id": "discard"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "refine.typecheck"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            [
              {
                "id": "prop",
                "cnt": "goal"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "Ty"
              },
              {
                "id": "var",
                "cnt": "Ev"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "GS"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 21, column 0, character 912:",
      "cnt": {
        "hyp": [
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "="
              },
              {
                "id": "var",
                "cnt": "Ev"
              },
              {
                "id": "var",
                "cnt": "T"
              }
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.collect-goals"
            },
            {
              "id": "var",
              "cnt": "Ev"
            },
            {
              "id": "var",
              "cnt": "GS"
            },
            {
              "id": "discard"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "refine.no_check"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            [
              {
                "id": "prop",
                "cnt": "goal"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "var",
                "cnt": "Ev"
              },
              {
                "id": "discard"
              }
            ],
            {
              "id": "var",
              "cnt": "GS"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 27, column 0, character 1137:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.open"
            },
            [
              {
                "id": "prop",
                "cnt": "coq.ltac.call-ltac1"
              },
              {
                "id": "var",
                "cnt": "Tac"
              }
            ],
            {
              "id": "var",
              "cnt": "G"
            },
            {
              "id": "var",
              "cnt": "GS"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac"
            },
            {
              "id": "var",
              "cnt": "Tac"
            },
            {
              "id": "var",
              "cnt": "G"
            },
            {
              "id": "var",
              "cnt": "GS"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 32, column 0, character 1292:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.set-goal-arguments"
            },
            {
              "id": "var",
              "cnt": "Args"
            },
            {
              "id": "var",
              "cnt": "G"
            },
            [
              {
                "id": "prop",
                "cnt": "seal"
              },
              {
                "id": "var",
                "cnt": "G"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "seal"
              },
              {
                "id": "var",
                "cnt": "G<sub>1</sub>"
              }
            ]
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.call-ltac1"
            },
            {
              "id": "var",
              "cnt": "Tac"
            },
            {
              "id": "var",
              "cnt": "G<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "GS"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.call"
            },
            {
              "id": "var",
              "cnt": "Tac"
            },
            {
              "id": "var",
              "cnt": "Args"
            },
            {
              "id": "var",
              "cnt": "G"
            },
            {
              "id": "var",
              "cnt": "GS"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 37, column 0, character 1475:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "coq.ltac.set-goal-arguments"
                  },
                  {
                    "id": "var",
                    "cnt": "A"
                  },
                  {
                    "id": "var",
                    "cnt": "G"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "SG"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  [
                    {
                      "id": "var",
                      "cnt": "R"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ]
                ]
              ]
            }
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.set-goal-arguments"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            {
              "id": "var",
              "cnt": "G"
            },
            [
              {
                "id": "prop",
                "cnt": "nabla"
              },
              {
                "id": "var",
                "cnt": "SG"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "nabla"
              },
              {
                "id": "var",
                "cnt": "R"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 38, column 0, character 1565:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "same_term"
            },
            {
              "id": "var",
              "cnt": "Ctx<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "Ctx<sub>2</sub>"
            }
          ],
          {
            "id": "cut"
          },
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "="
              },
              {
                "id": "var",
                "cnt": "A"
              },
              {
                "id": "var",
                "cnt": "I"
              }
            ]
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.set-goal-arguments"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            [
              {
                "id": "prop",
                "cnt": "goal"
              },
              {
                "id": "var",
                "cnt": "Ctx<sub>1</sub>"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "seal"
              },
              [
                {
                  "id": "prop",
                  "cnt": "goal"
                },
                {
                  "id": "var",
                  "cnt": "Ctx<sub>2</sub>"
                },
                {
                  "id": "var",
                  "cnt": "REv<sub>2</sub>"
                },
                {
                  "id": "var",
                  "cnt": "Ty<sub>2</sub>"
                },
                {
                  "id": "var",
                  "cnt": "Ev<sub>2</sub>"
                },
                {
                  "id": "discard"
                }
              ]
            ],
            [
              {
                "id": "prop",
                "cnt": "seal"
              },
              [
                {
                  "id": "prop",
                  "cnt": "goal"
                },
                {
                  "id": "var",
                  "cnt": "Ctx<sub>2</sub>"
                },
                {
                  "id": "var",
                  "cnt": "REv<sub>2</sub>"
                },
                {
                  "id": "var",
                  "cnt": "Ty<sub>2</sub>"
                },
                {
                  "id": "var",
                  "cnt": "Ev<sub>2</sub>"
                },
                {
                  "id": "var",
                  "cnt": "I"
                }
              ]
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 40, column 0, character 1710:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.map"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            [
              {
                "id": "prop",
                "cnt": "coq.ltac.private.move-goal-argument"
              },
              {
                "id": "var",
                "cnt": "Ctx<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "Ctx<sub>2</sub>"
              }
            ],
            {
              "id": "var",
              "cnt": "I"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.set-goal-arguments"
            },
            {
              "id": "var",
              "cnt": "A"
            },
            [
              {
                "id": "prop",
                "cnt": "goal"
              },
              {
                "id": "var",
                "cnt": "Ctx<sub>1</sub>"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "seal"
              },
              [
                {
                  "id": "prop",
                  "cnt": "goal"
                },
                {
                  "id": "var",
                  "cnt": "Ctx<sub>2</sub>"
                },
                {
                  "id": "var",
                  "cnt": "REv<sub>2</sub>"
                },
                {
                  "id": "var",
                  "cnt": "Ty<sub>2</sub>"
                },
                {
                  "id": "var",
                  "cnt": "Ev<sub>2</sub>"
                },
                {
                  "id": "discard"
                }
              ]
            ],
            [
              {
                "id": "prop",
                "cnt": "seal"
              },
              [
                {
                  "id": "prop",
                  "cnt": "goal"
                },
                {
                  "id": "var",
                  "cnt": "Ctx<sub>2</sub>"
                },
                {
                  "id": "var",
                  "cnt": "REv<sub>2</sub>"
                },
                {
                  "id": "var",
                  "cnt": "Ty<sub>2</sub>"
                },
                {
                  "id": "var",
                  "cnt": "Ev<sub>2</sub>"
                },
                {
                  "id": "var",
                  "cnt": "I"
                }
              ]
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 46, column 0, character 2009:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "G"
            },
            {
              "id": "var",
              "cnt": "GS"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.try"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "G"
            },
            {
              "id": "var",
              "cnt": "GS"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 47, column 0, character 2031:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.try"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "G"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "G"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 51, column 0, character 2116:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "G"
            },
            {
              "id": "var",
              "cnt": "O<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.all"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "Gs"
            },
            {
              "id": "var",
              "cnt": "O<sub>2</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.append"
            },
            {
              "id": "var",
              "cnt": "O<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "O<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "O"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.all"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "G"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "Gs"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "O"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 52, column 0, character 2175:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.all"
            },
            {
              "id": "discard"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 55, column 0, character 2250:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.thenl"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "var",
              "cnt": "G"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "G"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 56, column 0, character 2266:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "G"
            },
            {
              "id": "var",
              "cnt": "NG"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.all"
            },
            [
              {
                "id": "prop",
                "cnt": "coq.ltac.thenl"
              },
              {
                "id": "var",
                "cnt": "Ts"
              }
            ],
            {
              "id": "var",
              "cnt": "NG"
            },
            {
              "id": "var",
              "cnt": "GS"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.thenl"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "T"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "Ts"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "G"
            },
            {
              "id": "var",
              "cnt": "GS"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 59, column 0, character 2375:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "G"
            },
            {
              "id": "var",
              "cnt": "GS<sub>1</sub>"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.all"
            },
            [
              {
                "id": "prop",
                "cnt": "coq.ltac.repeat"
              },
              {
                "id": "var",
                "cnt": "T"
              }
            ],
            {
              "id": "var",
              "cnt": "GS<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "GS"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.repeat"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "G"
            },
            {
              "id": "var",
              "cnt": "GS"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 60, column 0, character 2424:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.repeat"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "G"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "G"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 63, column 0, character 2499:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "G"
            },
            {
              "id": "var",
              "cnt": "GS<sub>1</sub>"
            }
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.all"
            },
            [
              {
                "id": "prop",
                "cnt": "coq.ltac.repeat"
              },
              {
                "id": "var",
                "cnt": "T"
              }
            ],
            {
              "id": "var",
              "cnt": "GS<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "GS"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.repeat!"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "G"
            },
            {
              "id": "var",
              "cnt": "GS"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 64, column 0, character 2552:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.repeat!"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "G"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "G"
                    }
                  ]
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 67, column 0, character 2628:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.exists"
            },
            {
              "id": "var",
              "cnt": "TL"
            },
            {
              "id": "quantification",
              "cnt": {
                "type": "anonymousForall",
                "names": [
                  {
                    "id": "var",
                    "cnt": "x<sub>1</sub>"
                  }
                ],
                "body": [
                  [
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    },
                    {
                      "id": "var",
                      "cnt": "G"
                    },
                    {
                      "id": "var",
                      "cnt": "GS"
                    }
                  ]
                ]
              }
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.or"
            },
            {
              "id": "var",
              "cnt": "TL"
            },
            {
              "id": "var",
              "cnt": "G"
            },
            {
              "id": "var",
              "cnt": "GS"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 71, column 0, character 2742:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "coq.ltac.open"
                  },
                  {
                    "id": "var",
                    "cnt": "T"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "G"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ],
                  [
                    {
                      "id": "var",
                      "cnt": "NG"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ]
                ]
              ]
            }
          },
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.private.distribute-nabla"
            },
            {
              "id": "var",
              "cnt": "NG"
            },
            {
              "id": "var",
              "cnt": "O"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.open"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            [
              {
                "id": "prop",
                "cnt": "nabla"
              },
              {
                "id": "var",
                "cnt": "G"
              }
            ],
            {
              "id": "var",
              "cnt": "O"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 72, column 0, character 2824:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "not"
            },
            [
              {
                "id": "prop",
                "cnt": "var"
              },
              {
                "id": "var",
                "cnt": "Solution"
              }
            ]
          ],
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.open"
            },
            {
              "id": "discard"
            },
            [
              {
                "id": "prop",
                "cnt": "seal"
              },
              [
                {
                  "id": "prop",
                  "cnt": "goal"
                },
                {
                  "id": "discard"
                },
                {
                  "id": "discard"
                },
                {
                  "id": "discard"
                },
                {
                  "id": "var",
                  "cnt": "Solution"
                },
                {
                  "id": "discard"
                }
              ]
            ],
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 73, column 0, character 2915:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.filter"
            },
            {
              "id": "var",
              "cnt": "Ctx"
            },
            {
              "id": "prop",
              "cnt": "coq.ltac.private.not-already-assumed"
            },
            {
              "id": "var",
              "cnt": "Ctx<sub>1</sub>"
            }
          ],
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "=>"
              },
              {
                "id": "var",
                "cnt": "Ctx<sub>1</sub>"
              },
              [
                {
                  "id": "var",
                  "cnt": "T"
                },
                {
                  "id": "var",
                  "cnt": "G"
                },
                {
                  "id": "var",
                  "cnt": "O"
                }
              ]
            ]
          },
          [
            {
              "id": "prop",
              "cnt": "if"
            },
            [
              {
                "id": "prop",
                "cnt": "var"
              },
              {
                "id": "var",
                "cnt": "O"
              }
            ],
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "="
                },
                {
                  "id": "var",
                  "cnt": "G"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "goal"
                  },
                  {
                    "id": "discard"
                  },
                  {
                    "id": "discard"
                  },
                  {
                    "id": "discard"
                  },
                  {
                    "id": "var",
                    "cnt": "P"
                  },
                  {
                    "id": "discard"
                  }
                ]
              ]
            },
            [
              {
                "id": "prop",
                "cnt": "coq.ltac.collect-goals"
              },
              {
                "id": "var",
                "cnt": "P"
              },
              {
                "id": "var",
                "cnt": "O<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "O<sub>2</sub>"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "std.append"
              },
              {
                "id": "var",
                "cnt": "O<sub>1</sub>"
              },
              {
                "id": "var",
                "cnt": "O<sub>2</sub>"
              },
              {
                "id": "var",
                "cnt": "O"
              }
            ],
            {
              "id": "prop",
              "cnt": "true"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.open"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            [
              {
                "id": "prop",
                "cnt": "seal"
              },
              {
                "id": "clause",
                "isInfix": 1,
                "cnt": [
                  {
                    "name": "as"
                  },
                  [
                    {
                      "id": "prop",
                      "cnt": "goal"
                    },
                    {
                      "id": "var",
                      "cnt": "Ctx"
                    },
                    {
                      "id": "discard"
                    },
                    {
                      "id": "discard"
                    },
                    {
                      "id": "discard"
                    },
                    {
                      "id": "discard"
                    }
                  ],
                  {
                    "id": "var",
                    "cnt": "G"
                  }
                ]
              }
            ],
            {
              "id": "var",
              "cnt": "O"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 86, column 0, character 3317:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.private.move-goal-argument"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "int"
                  },
                  {
                    "id": "discard"
                  }
                ],
                {
                  "id": "var",
                  "cnt": "A"
                }
              ]
            },
            {
              "id": "var",
              "cnt": "A"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 87, column 0, character 3356:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.private.move-goal-argument"
            },
            {
              "id": "discard"
            },
            {
              "id": "discard"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": "as"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "str"
                  },
                  {
                    "id": "discard"
                  }
                ],
                {
                  "id": "var",
                  "cnt": "A"
                }
              ]
            },
            {
              "id": "var",
              "cnt": "A"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 88, column 0, character 3395:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.rev"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "Cr"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.rev"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            {
              "id": "var",
              "cnt": "Dr"
            }
          ],
          [
            {
              "id": "prop",
              "cnt": "std.assert!"
            },
            [
              {
                "id": "prop",
                "cnt": "coq.ltac.private.move-term"
              },
              {
                "id": "var",
                "cnt": "Cr"
              },
              {
                "id": "var",
                "cnt": "Dr"
              },
              {
                "id": "var",
                "cnt": "T"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              }
            ],
            {
              "id": "string",
              "cnt": "cannot move goal argument to the right context"
            }
          ],
          {
            "id": "cut"
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.private.move-goal-argument"
            },
            {
              "id": "var",
              "cnt": "C"
            },
            {
              "id": "var",
              "cnt": "D"
            },
            [
              {
                "id": "prop",
                "cnt": "trm"
              },
              {
                "id": "var",
                "cnt": "T"
              }
            ],
            [
              {
                "id": "prop",
                "cnt": "trm"
              },
              {
                "id": "var",
                "cnt": "T<sub>1</sub>"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 94, column 0, character 3626:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "copy"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.private.move-term"
            },
            {
              "id": "prop",
              "cnt": "[]"
            },
            {
              "id": "discard"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 95, column 0, character 3660:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.do!"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "copy"
                      },
                      {
                        "id": "var",
                        "cnt": "TX"
                      },
                      {
                        "id": "var",
                        "cnt": "TX<sub>1</sub>"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "same_term"
                      },
                      {
                        "id": "var",
                        "cnt": "TX<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "TY"
                      }
                    ]
                  ]
                }
              ]
            }
          ],
          {
            "id": "cut"
          },
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "=>"
              },
              [
                {
                  "id": "prop",
                  "cnt": "copy"
                },
                {
                  "id": "var",
                  "cnt": "X"
                },
                {
                  "id": "var",
                  "cnt": "Y"
                }
              ],
              [
                {
                  "id": "prop",
                  "cnt": "coq.ltac.private.move-term"
                },
                {
                  "id": "var",
                  "cnt": "C<sub>1</sub>"
                },
                {
                  "id": "var",
                  "cnt": "C<sub>2</sub>"
                },
                {
                  "id": "var",
                  "cnt": "T"
                },
                {
                  "id": "var",
                  "cnt": "T<sub>1</sub>"
                }
              ]
            ]
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.private.move-term"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "decl"
                      },
                      {
                        "id": "var",
                        "cnt": "X"
                      },
                      {
                        "id": "discard"
                      },
                      {
                        "id": "var",
                        "cnt": "TX"
                      }
                    ]
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "C<sub>1</sub>"
                  }
                }
              ]
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "decl"
                      },
                      {
                        "id": "var",
                        "cnt": "Y"
                      },
                      {
                        "id": "discard"
                      },
                      {
                        "id": "var",
                        "cnt": "TY"
                      }
                    ]
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "C<sub>2</sub>"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 97, column 0, character 3794:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "std.do!"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "copy"
                      },
                      {
                        "id": "var",
                        "cnt": "TX"
                      },
                      {
                        "id": "var",
                        "cnt": "TX<sub>1</sub>"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "same_term"
                      },
                      {
                        "id": "var",
                        "cnt": "TX<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "TY"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "copy"
                      },
                      {
                        "id": "var",
                        "cnt": "BX"
                      },
                      {
                        "id": "var",
                        "cnt": "BX<sub>1</sub>"
                      }
                    ],
                    [
                      {
                        "id": "prop",
                        "cnt": "same_term"
                      },
                      {
                        "id": "var",
                        "cnt": "BX<sub>1</sub>"
                      },
                      {
                        "id": "var",
                        "cnt": "BY"
                      }
                    ]
                  ]
                }
              ]
            }
          ],
          {
            "id": "cut"
          },
          {
            "id": "clause",
            "isInfix": 1,
            "cnt": [
              {
                "name": "=>"
              },
              [
                {
                  "id": "prop",
                  "cnt": "copy"
                },
                {
                  "id": "var",
                  "cnt": "X"
                },
                {
                  "id": "var",
                  "cnt": "Y"
                }
              ],
              [
                {
                  "id": "prop",
                  "cnt": "coq.ltac.private.move-term"
                },
                {
                  "id": "var",
                  "cnt": "C<sub>1</sub>"
                },
                {
                  "id": "var",
                  "cnt": "C<sub>2</sub>"
                },
                {
                  "id": "var",
                  "cnt": "T"
                },
                {
                  "id": "var",
                  "cnt": "T<sub>1</sub>"
                }
              ]
            ]
          }
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.private.move-term"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "def"
                      },
                      {
                        "id": "var",
                        "cnt": "X"
                      },
                      {
                        "id": "discard"
                      },
                      {
                        "id": "var",
                        "cnt": "TX"
                      },
                      {
                        "id": "var",
                        "cnt": "BX"
                      }
                    ]
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "C<sub>1</sub>"
                  }
                }
              ]
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "def"
                      },
                      {
                        "id": "var",
                        "cnt": "Y"
                      },
                      {
                        "id": "discard"
                      },
                      {
                        "id": "var",
                        "cnt": "TY"
                      },
                      {
                        "id": "var",
                        "cnt": "BY"
                      }
                    ]
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "C<sub>2</sub>"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 99, column 0, character 3963:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "not"
            },
            [
              {
                "id": "prop",
                "cnt": "occurs"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "T"
              }
            ]
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.private.move-term"
            },
            {
              "id": "var",
              "cnt": "C<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "C<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.private.move-term"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "decl"
                      },
                      {
                        "id": "var",
                        "cnt": "X"
                      },
                      {
                        "id": "discard"
                      },
                      {
                        "id": "discard"
                      }
                    ]
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "C<sub>1</sub>"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "C<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 100, column 0, character 4042:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "not"
            },
            [
              {
                "id": "prop",
                "cnt": "occurs"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "var",
                "cnt": "T"
              }
            ]
          ],
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.private.move-term"
            },
            {
              "id": "var",
              "cnt": "C<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "C<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.private.move-term"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "def"
                      },
                      {
                        "id": "var",
                        "cnt": "X"
                      },
                      {
                        "id": "discard"
                      },
                      {
                        "id": "discard"
                      },
                      {
                        "id": "discard"
                      }
                    ]
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "C<sub>1</sub>"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "C<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 101, column 0, character 4122:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.private.move-term"
            },
            {
              "id": "var",
              "cnt": "C<sub>1</sub>"
            },
            {
              "id": "var",
              "cnt": "C<sub>2</sub>"
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.private.move-term"
            },
            {
              "id": "var",
              "cnt": "C<sub>1</sub>"
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "discard"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "C<sub>2</sub>"
                  }
                }
              ]
            },
            {
              "id": "var",
              "cnt": "T"
            },
            {
              "id": "var",
              "cnt": "T<sub>1</sub>"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 104, column 0, character 4245:",
      "cnt": {
        "hyp": [],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.private.distribute-nabla"
            },
            {
              "id": "quantification",
              "cnt": {
                "type": "anonymousForall",
                "names": [
                  {
                    "id": "var",
                    "cnt": "x<sub>1</sub>"
                  }
                ],
                "body": [
                  {
                    "id": "prop",
                    "cnt": "[]"
                  }
                ]
              }
            },
            {
              "id": "prop",
              "cnt": "[]"
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 105, column 0, character 4274:",
      "cnt": {
        "hyp": [
          {
            "id": "quantification",
            "cnt": {
              "type": "forall",
              "names": [
                {
                  "id": "var",
                  "cnt": "x<sub>1</sub>"
                }
              ],
              "body": [
                [
                  {
                    "id": "prop",
                    "cnt": "occurs"
                  },
                  {
                    "id": "var",
                    "cnt": "x<sub>1</sub>"
                  },
                  [
                    {
                      "id": "var",
                      "cnt": "X"
                    },
                    {
                      "id": "var",
                      "cnt": "x<sub>1</sub>"
                    }
                  ]
                ]
              ]
            }
          },
          {
            "id": "cut"
          },
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.private.distribute-nabla"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.private.distribute-nabla"
            },
            {
              "id": "quantification",
              "cnt": {
                "type": "anonymousForall",
                "names": [
                  {
                    "id": "var",
                    "cnt": "x<sub>1</sub>"
                  }
                ],
                "body": [
                  {
                    "id": "list",
                    "cnt": [
                      {
                        "l": [
                          [
                            {
                              "id": "var",
                              "cnt": "X"
                            },
                            {
                              "id": "var",
                              "cnt": "x<sub>1</sub>"
                            }
                          ]
                        ],
                        "tl": [
                          {
                            "id": "var",
                            "cnt": "XS"
                          },
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    [
                      {
                        "id": "prop",
                        "cnt": "nabla"
                      },
                      {
                        "id": "var",
                        "cnt": "X"
                      }
                    ]
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "R"
                  }
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 107, column 0, character 4375:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.private.distribute-nabla"
            },
            {
              "id": "var",
              "cnt": "XS"
            },
            {
              "id": "var",
              "cnt": "R"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.private.distribute-nabla"
            },
            {
              "id": "quantification",
              "cnt": {
                "type": "anonymousForall",
                "names": [
                  {
                    "id": "var",
                    "cnt": "x<sub>1</sub>"
                  }
                ],
                "body": [
                  {
                    "id": "list",
                    "cnt": [
                      {
                        "l": [
                          {
                            "id": "var",
                            "cnt": "X"
                          }
                        ],
                        "tl": [
                          {
                            "id": "var",
                            "cnt": "XS"
                          },
                          {
                            "id": "var",
                            "cnt": "x<sub>1</sub>"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            {
              "id": "list",
              "cnt": [
                {
                  "l": [
                    {
                      "id": "var",
                      "cnt": "X"
                    }
                  ],
                  "tl": {
                    "id": "var",
                    "cnt": "R"
                  }
                }
              ]
            }
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 110, column 0, character 4473:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "not"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": ";"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "decl"
                  },
                  {
                    "id": "var",
                    "cnt": "X"
                  },
                  {
                    "id": "discard"
                  },
                  {
                    "id": "discard"
                  }
                ],
                [
                  {
                    "id": "prop",
                    "cnt": "def"
                  },
                  {
                    "id": "var",
                    "cnt": "X"
                  },
                  {
                    "id": "discard"
                  },
                  {
                    "id": "discard"
                  },
                  {
                    "id": "discard"
                  }
                ]
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.private.not-already-assumed"
            },
            [
              {
                "id": "prop",
                "cnt": "decl"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"/home/dfissore/Documents/Github/mio/mioCoqElpi/elpi2html/./elpi/elpi-ltac.elpi\", line 111, column 0, character 4542:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "not"
            },
            {
              "id": "clause",
              "isInfix": 1,
              "cnt": [
                {
                  "name": ";"
                },
                [
                  {
                    "id": "prop",
                    "cnt": "decl"
                  },
                  {
                    "id": "var",
                    "cnt": "X"
                  },
                  {
                    "id": "discard"
                  },
                  {
                    "id": "discard"
                  }
                ],
                [
                  {
                    "id": "prop",
                    "cnt": "def"
                  },
                  {
                    "id": "var",
                    "cnt": "X"
                  },
                  {
                    "id": "discard"
                  },
                  {
                    "id": "discard"
                  },
                  {
                    "id": "discard"
                  }
                ]
              ]
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "coq.ltac.private.not-already-assumed"
            },
            [
              {
                "id": "prop",
                "cnt": "def"
              },
              {
                "id": "var",
                "cnt": "X"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              },
              {
                "id": "discard"
              }
            ]
          ]
        ]
      }
    },
    {
      "id": "clause",
      "title": "File \"./tests/elpi2html.v\", line 11, column 3, character 4:",
      "cnt": {
        "hyp": [
          [
            {
              "id": "prop",
              "cnt": "coq.say"
            },
            {
              "id": "string",
              "cnt": "CIAO"
            }
          ]
        ],
        "args": [
          [
            {
              "id": "prop",
              "cnt": "main"
            },
            {
              "id": "discard"
            }
          ]
        ]
      }
    }
  ]
}